Search.setIndex({"docnames": ["autoapi/index", "autoapi/pytomography/algorithms/index", "autoapi/pytomography/algorithms/osem/index", "autoapi/pytomography/corrections/ct_correction/index", "autoapi/pytomography/corrections/index", "autoapi/pytomography/corrections/psf_correction/index", "autoapi/pytomography/index", "autoapi/pytomography/io/dicom/index", "autoapi/pytomography/io/index", "autoapi/pytomography/io/simind/index", "autoapi/pytomography/metadata/index", "autoapi/pytomography/metadata/metadata/index", "autoapi/pytomography/priors/index", "autoapi/pytomography/priors/smoothness/index", "autoapi/pytomography/projections/back_projection/index", "autoapi/pytomography/projections/forward_projection/index", "autoapi/pytomography/projections/index", "autoapi/pytomography/utils/helper_functions/index", "autoapi/pytomography/utils/index", "index", "notebooks/tutorial2"], "filenames": ["autoapi/index.rst", "autoapi/pytomography/algorithms/index.rst", "autoapi/pytomography/algorithms/osem/index.rst", "autoapi/pytomography/corrections/ct_correction/index.rst", "autoapi/pytomography/corrections/index.rst", "autoapi/pytomography/corrections/psf_correction/index.rst", "autoapi/pytomography/index.rst", "autoapi/pytomography/io/dicom/index.rst", "autoapi/pytomography/io/index.rst", "autoapi/pytomography/io/simind/index.rst", "autoapi/pytomography/metadata/index.rst", "autoapi/pytomography/metadata/metadata/index.rst", "autoapi/pytomography/priors/index.rst", "autoapi/pytomography/priors/smoothness/index.rst", "autoapi/pytomography/projections/back_projection/index.rst", "autoapi/pytomography/projections/forward_projection/index.rst", "autoapi/pytomography/projections/index.rst", "autoapi/pytomography/utils/helper_functions/index.rst", "autoapi/pytomography/utils/index.rst", "index.md", "notebooks/tutorial2.ipynb"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms.osem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.corrections.ct_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.corrections</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.corrections.psf_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.dicom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.simind</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors.smoothness</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.back_projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.forward_projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils.helper_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils</span></code>", "PyTomography", "Tutorial: Exploring Forward And Back Projections"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 13, 17, 18, 19, 20], "page": 0, "contain": [0, 1, 2, 4, 5, 6], "auto": 0, "gener": 0, "document": [0, 19], "1": [0, 1, 2, 3, 4, 6, 12, 13, 14, 16, 17, 18, 20], "pytomographi": [0, 20], "algorithm": [0, 6, 20], "osem": [0, 1, 6, 14, 16, 20], "correct": [0, 1, 2, 6, 10, 11, 14, 15, 16, 17, 18, 19, 20], "ct_correct": [0, 4, 6], "psf_correct": [0, 4, 6], "io": [0, 6], "dicom": [0, 1, 2, 6, 8], "simind": [0, 1, 2, 6, 8, 19], "metadata": [0, 1, 2, 3, 4, 5, 6, 13, 20], "prior": [0, 1, 2, 6, 14, 16, 19], "smooth": [0, 4, 5, 6, 12], "project": [0, 1, 2, 3, 4, 5, 6, 19], "back_project": [0, 6, 16], "forward_project": [0, 6, 16], "util": [0, 6], "helper_funct": [0, 6, 18], "creat": [0, 5, 19, 20], "sphinx": 0, "autoapi": 0, "get_osem_net": [1, 2, 19], "projections_head": [1, 2, 19], "object_initi": [1, 2, 6], "ones": [1, 2], "ct_header": [1, 2, 19], "none": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16], "psf_meta": [1, 2, 4, 5, 19], "file_typ": [1, 2], "devic": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 19], "cpu": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16], "us": [1, 2, 3, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20], "obtain": [1, 2, 13, 14, 16], "an": [1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20], "osemnet": [1, 2, 6], "given": [1, 2, 14, 15, 16, 17, 18, 20], "data": [1, 2, 4, 5, 6, 19], "one": [1, 2, 6, 17, 18, 20], "wish": [1, 2], "paramet": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18], "str": [1, 2, 3, 4, 5, 13], "path": [1, 2, 20], "header": [1, 2], "some": [1, 2, 19], "modal": [1, 2], "i": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "also": [1, 2, 19, 20], "e": [1, 2, 6, 14, 15, 16, 17, 18], "from": [1, 2, 4, 5, 10, 11, 13, 14, 16, 17, 18, 20], "file": [1, 2, 7, 8, 19], "set": [1, 2, 6, 13], "dimens": [1, 2, 4, 5, 13, 20], "object": [1, 2, 3, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 18, 20], "batch_siz": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18], "lx": [1, 2, 3, 4, 5, 6, 13, 15, 16, 17, 18], "ly": [1, 2, 3, 4, 5, 6, 13, 15, 16, 17, 18], "lz": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18], "imag": [1, 2, 3, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 18, 20], "ltheta": [1, 2, 6, 14, 15, 16], "lr": [1, 2, 6, 14, 16], "want": [1, 2], "reconstruct": [1, 2, 6, 14, 15, 16, 19, 20], "torch": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18, 19, 20], "tensor": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18, 19], "option": [1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 18], "specifi": [1, 2, 4, 5, 6, 10, 11, 15, 16, 17, 18], "initi": [1, 2, 6, 17, 18], "In": [1, 2, 3, 4, 5, 17, 18, 20], "case": [1, 2, 17, 18, 20], "default": [1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 18], "shape": [1, 2, 4, 5, 10, 11, 13, 17, 18, 20], "all": [1, 2, 14, 15, 16], "otherwis": [1, 2], "take": [1, 2, 19], "specif": [1, 2], "guess": [1, 2, 6], "list": [1, 2, 6, 14, 15, 16], "point": [1, 2, 4, 5, 10, 11, 17, 18], "ct": [1, 2, 3, 4, 17, 18, 19], "psfmeta": [1, 2, 4, 5, 10, 11, 19], "psf": [1, 2, 4, 5, 10, 11, 14, 15, 16, 17, 18, 19, 20], "collim": [1, 2, 4, 5, 10, 11, 20], "slope": [1, 2, 4, 5, 10, 11], "intercept": [1, 2, 4, 5, 10, 11], "The": [1, 2, 3, 4, 5, 6, 15, 16, 17, 18, 20], "type": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18], "includ": [1, 2, 14, 16, 20], "output": [1, 2, 3, 4, 5, 13, 19], "dure": [1, 2, 3, 4, 5, 6, 14, 16], "If": [1, 2, 6, 14, 16, 17, 18, 20], "pytorch": [1, 2, 3, 4, 5, 13, 19], "graphic": [1, 2], "card": [1, 2], "can": [1, 2, 19, 20], "return": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18], "readi": [1, 2], "perform": [1, 2, 6], "forward_projection_net": [1, 2, 6], "back_projection_net": [1, 2, 6], "base": [1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16], "nn": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16], "modul": [1, 4, 6, 16], "network": [1, 2, 3, 4, 5, 6, 20], "run": [1, 2, 6], "f_i": [1, 2, 6, 14, 15, 16], "n": [1, 2, 6], "frac": [1, 2, 6, 13, 14, 16], "sum_j": [1, 2, 6, 14, 16, 20], "c_": [1, 2, 3, 4, 5, 6, 14, 15, 16, 20], "ij": [1, 2, 3, 4, 5, 6, 14, 15, 16, 20], "beta": [1, 2, 6, 12, 13, 19], "partial": [1, 2, 6, 13], "v": [1, 2, 6, 13], "f_r": [1, 2, 6, 13], "_": [1, 2, 6], "g_j": [1, 2, 6, 14, 15, 16], "sum_i": [1, 2, 3, 4, 5, 6], "0": [1, 2, 5, 6, 7, 19, 20], "forward": [1, 2, 3, 4, 5, 6, 13, 14, 15, 16], "back": [1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 18], "comput": [1, 2, 3, 4, 5, 6, 13, 17, 18], "a_i": [1, 2, 3, 4, 5, 6, 20], "b_j": [1, 2, 3, 4, 5, 6, 20], "bayesian": [1, 2, 6, 19], "note": [1, 2, 3, 6, 17, 18, 20], "step": [1, 2, 6], "late": [1, 2, 6], "osl": [1, 2, 6], "onc": [1, 2, 6], "number": [1, 2, 6, 13, 17, 18], "iter": [1, 2, 6], "subset": [1, 2, 6, 14, 15, 16], "ar": [1, 2, 4, 5, 6, 14, 15, 16, 20], "recon": [1, 2, 6], "time": [1, 2, 6], "when": [1, 2, 5, 6, 14, 15, 16, 20], "method": [1, 2, 6, 17, 18], "call": [1, 2, 6], "repres": [1, 2, 3, 6, 13], "space": [1, 2, 3, 4, 5, 6, 10, 11, 13, 17, 18, 20], "forwardprojectionnet": [1, 2, 6, 15, 16, 20], "sum_": [1, 2, 6, 13, 14, 15, 16, 20], "where": [1, 2, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "being": [1, 2, 3, 4, 5, 6], "backprojectionnet": [1, 2, 6, 14, 16, 20], "j": [1, 2, 6, 14, 15, 16, 20], "text": [1, 2, 3, 4, 6], "old": [1, 2, 6], "term": [1, 2, 6, 20], "get_subset_split": [1, 2, 6], "n_subset": [1, 2, 6, 19], "n_angl": [1, 2, 6], "arrai": [1, 2, 4, 5, 6, 13, 17, 18, 19], "each": [1, 2, 4, 5, 6, 17, 18], "indic": [1, 2, 6, 20], "correspond": [1, 2, 3, 4, 5, 6, 13, 15, 16, 20], "order": [1, 2, 6, 14, 15, 16], "For": [1, 2, 6, 19, 20], "exampl": [1, 2, 6, 14, 16, 19, 20], "get_subsets_split": [1, 2, 6], "2": [1, 2, 6, 17, 18, 20], "6": [1, 2, 6, 20], "would": [1, 2, 6], "4": [1, 2, 6, 19, 20], "3": [1, 2, 6, 17, 18, 20], "5": [1, 2, 6, 20], "int": [1, 2, 3, 4, 5, 6, 17, 18], "total": [1, 2, 6], "index": [1, 2, 3, 4, 5, 6, 20], "set_imag": [1, 2, 6], "which": [1, 2, 6, 13, 14, 15, 16], "set_prior": [1, 2, 6], "model": [1, 2, 3, 4, 5, 6, 14, 15, 16, 19], "particular": [1, 2, 3, 4, 5, 6, 17, 18], "n_iter": [1, 2, 6, 19], "comparison": [1, 2, 6], "delta": [1, 2, 5, 6, 12, 13, 14, 16], "1e": [1, 2, 5, 6, 14, 16], "11": [1, 2, 6, 14, 16], "_description_": [1, 2, 6, 13], "fix": [1, 2, 6], "_type_": [1, 2, 6, 13], "prevent": [1, 2, 5, 6, 14, 16], "divis": [1, 2, 5, 6, 14, 16], "zero": [1, 2, 6, 14, 16], "calcul": [1, 2, 6], "ratio": [1, 2, 6], "comparetonumb": [1, 2], "mask": [1, 2], "norm_factor": [1, 2], "compar": [1, 2], "predict": [1, 2], "get_prob_of_detection_matrix": 3, "dx": [3, 4, 5, 17, 18], "convert": [3, 20], "attenu": [3, 4, 19, 20], "map": [3, 14, 16, 20], "cm": [3, 4], "probabl": [3, 13], "photon": [3, 4], "detect": [3, 4], "matrix": [3, 14, 15, 16, 20], "scanner": [3, 5, 17, 18], "x": [3, 4, 5, 17, 18, 20], "requir": [3, 19], "energi": [3, 4], "emit": 3, "size": [3, 4, 5, 10, 11, 13, 20], "coeffici": [3, 4], "scan": [3, 4], "float": [3, 4, 5, 13, 14, 16, 17, 18, 20], "pixel": [3, 4, 5], "transaxi": [3, 4, 5], "plane": [3, 4, 5, 10, 11, 17, 18], "detector": [3, 4, 5, 10, 11, 17, 18, 20], "axi": [3, 4, 5, 17, 18, 20], "ctcorrectionnet": [3, 4], "object_meta": [3, 4, 5, 10, 11, 13, 14, 15, 16, 20], "image_meta": [3, 4, 5, 14, 15, 16, 20], "oper": [3, 4, 5, 19, 20], "other": [3, 4, 5], "c": [3, 4, 5], "sum": [3, 4, 5, 17, 18, 20], "objectmeta": [3, 4, 5, 10, 11, 13, 20], "imagemeta": [3, 4, 5, 10, 11, 20], "object_i": [3, 4, 5], "norm_const": [3, 4, 5], "appli": [3, 4, 5, 17, 18, 20], "": [3, 4, 13, 20], "right": [3, 4, 13, 20], "its": [3, 4, 5], "first": [3, 4, 5, 17, 18, 20], "along": [3, 4, 5, 17, 18, 20], "find": [3, 4, 5], "angl": [3, 4, 5, 10, 11, 14, 15, 16, 17, 18, 20], "A": [3, 4, 5], "normal": [3, 4, 5, 14, 16], "psfcorrectionnet": [4, 5], "kernel": [4, 5, 10, 11, 13], "gaussian": [4, 5, 10, 11], "width": [4, 5, 17, 18], "sigma": [4, 5, 10, 11], "depend": [4, 5, 17, 18], "distanc": [4, 5, 8, 9, 10, 11, 17, 18], "inform": [4, 5, 20], "blur": [4, 5, 10, 11, 17, 18, 20], "get_sigma": [4, 5], "radiu": [4, 5], "collimator_slop": [4, 5, 10, 11, 19], "collimator_intercept": [4, 5, 10, 11, 19], "meta": [4, 5], "get": [4, 5, 13, 17, 18, 20], "function": [4, 10, 11, 12, 13], "It": [4, 5, 20], "assum": [4, 5, 14, 15, 16, 20], "d": [4, 5, 7, 10, 11, 19], "tupl": [4, 5], "see": [4, 5, 19, 20], "defin": [4, 5, 20], "character": [4, 5], "length": [4, 5, 20], "1st": [4, 5], "situat": [4, 5], "get_psf_transform": 5, "kernel_s": [5, 10, 11], "09": 5, "kernel_dimens": [5, 10, 11], "2d": [5, 10, 11], "convolut": [5, 10, 11, 13, 20], "layer": 5, "need": [5, 19, 20], "larg": 5, "enough": 5, "cover": 5, "most": 5, "9": 5, "whether": 5, "done": 5, "independ": 5, "slice": 5, "1d": [5, 20], "between": [5, 17, 18], "neural": 5, "conv2d": 5, "get_radii_and_angl": 7, "dicom_projections_to_data": [7, 8], "a1": 7, "00014376": 7, "b1": 7, "1352": 7, "a2": 7, "8": [7, 19], "787e": 7, "05": [7, 19], "b2": 7, "hu_to_mu": 7, "hu": 7, "get_affine_spect": 7, "get_affine_ct": 7, "max_z": 7, "dicom_ct_to_data": [7, 8], "files_ct": [7, 8], "file_nm": [7, 8], "simind_ct_to_data": [8, 9], "headerfil": [8, 9], "simind_projections_to_data": [8, 9], "mm": [8, 9], "find_first_entry_containing_substr": 9, "list_of_attribut": 9, "substr": 9, "dtype": 9, "np": [9, 17, 18, 20], "float32": 9, "dr": [10, 11, 20], "compute_padded_shap": [10, 11], "radii": [10, 11], "61": [10, 11], "implement": [10, 11, 12, 13, 14, 15, 16], "ad": [10, 11], "b": [10, 11], "align": [10, 11, 17, 18], "parallel": [10, 11, 17, 18], "As": [10, 11, 19], "spread": [10, 11, 17, 18], "quadraticprior": [12, 13], "smoothnessprior": [12, 13], "implent": [12, 13], "phi": [12, 13, 17, 18], "ident": [12, 13], "logcoshprior": [12, 13, 19], "hyperbol": [12, 13], "tangent": [12, 13], "gradient": 13, "form": [13, 14, 15, 16], "r": [13, 17, 18, 20], "w_": 13, "left": [13, 20], "f_": 13, "log": 13, "posterior": 13, "p": 13, "g": [13, 20], "f": [13, 20], "get_kernel": 13, "same": [13, 17, 18, 20], "channel": 13, "equal": [13, 20], "weight": 13, "express": 13, "conv3d": 13, "set_object_meta": 13, "describ": 13, "system": [13, 14, 15, 16, 17, 18, 20], "set_kernel": 13, "set_beta_scal": 13, "factor": [13, 14, 16], "valu": [13, 14, 15, 16], "set_object": 13, "math": 13, "rac": 13, "arg": 13, "set_devic": 13, "self": [13, 15, 16], "backprojectionnetold": 14, "object_correction_net": [14, 15, 16, 20], "image_correction_net": [14, 15, 16, 20], "mathemat": [14, 15, 16, 19], "f_j": [14, 16], "variou": [14, 15, 16], "phenonemon": [14, 15, 16], "atteun": [14, 15, 16], "angle_subset": [14, 15, 16], "onli": [14, 15, 16, 17, 18, 20], "certain": [14, 15, 16], "formula": [14, 15, 16], "abov": [14, 15, 16], "modif": [14, 16], "p_i": [14, 16], "divid": [14, 16], "constant": [14, 16], "rev_cumsum": [17, 18], "revers": [17, 18], "cumul": [17, 18], "sinc": [17, 18], "voxel": [17, 18, 20], "contribut": [17, 18, 20], "rotate_detector_z": [17, 18], "interpol": [17, 18], "interpolationmod": [17, 18], "bilinear": [17, 18], "neg": [17, 18], "fals": [17, 18], "am": [17, 18], "rotat": [17, 18], "refer": [17, 18, 19], "frame": [17, 18], "locat": [17, 18], "eta": [17, 18], "relat": [17, 18], "azimuth": [17, 18], "pi": [17, 18, 20], "cartesian": [17, 18], "coordin": [17, 18, 19], "manual": [17, 18], "bool": [17, 18], "true": [17, 18], "invers": [17, 18], "origin": [17, 18, 20], "user": [17, 18, 19], "should": [17, 18], "get_dist": [17, 18], "radial": [17, 18], "center": [17, 18, 20], "y": [17, 18, 20], "z": [17, 18, 20], "amount": [17, 18], "central": [17, 18], "euclidean": [17, 18], "compute_pad_s": [17, 18], "pad_object": [17, 18], "unpad_object": [17, 18], "original_shap": [17, 18], "pad_imag": [17, 18], "unpad_imag": [17, 18], "welcom": 19, "packag": 19, "extrem": 19, "fast": 19, "spect": 19, "librari": 19, "current": 19, "support": 19, "long": [19, 20], "your": 19, "turn": [19, 20], "here": 19, "osem_net": 19, "home": [19, 20], "ubuntu": [19, 20], "test_fil": 19, "h00": 19, "hct": 19, "0301": 19, "00197": 19, "reconstructed_object": 19, "machin": 19, "learn": 19, "recommend": 19, "make": [19, 20], "virtual": 19, "environ": 19, "anaconda": 19, "conda": 19, "name": 19, "Then": 19, "whatev": 19, "version": [19, 20], "you": [19, 20], "command": 19, "final": 19, "pip": 19, "extens": 19, "overview": 19, "further": 19, "info": 19, "check": 19, "out": 19, "tutori": 19, "simpl": 19, "look": [19, 20], "guid": 19, "ensur": 19, "know": 19, "precis": 19, "how": [19, 20], "organ": 19, "still": 19, "under": 19, "heavi": 19, "develop": 19, "convent": 19, "foundat": [19, 20], "add": [19, 20], "later": 19, "api": 19, "subpackag": 19, "import": 20, "sy": 20, "append": 20, "tormographi": 20, "src": 20, "o": 20, "numpi": 20, "matplotlib": 20, "pyplot": 20, "plt": 20, "two": 20, "tool": 20, "let": 20, "discuss": 20, "what": 20, "actual": 20, "mean": 20, "our": 20, "quantiti": 20, "known": 20, "mai": 20, "involv": 20, "arbtriari": 20, "arbitrari": 20, "worth": 20, "now": 20, "might": 20, "think": 20, "three": 20, "dimension": 20, "shouldn": 20, "t": 20, "least": 20, "we": 20, "re": 20, "do": 20, "linear": 20, "consid": 20, "follow": 20, "becaus": 20, "discret": 20, "ani": 20, "singl": 20, "albeit": 20, "veri": 20, "128x128x128": 20, "3d": 20, "vector": 20, "2097152": 20, "That": 20, "mani": 20, "said": 20, "have": 20, "64": 20, "128x128": 20, "thought": 20, "1048576": 20, "individu": 20, "element": 20, "so": 20, "intens": 20, "everi": 20, "possibl": 20, "could": 20, "realiti": 20, "howev": 20, "doe": 20, "reason": 20, "yield": 20, "experi": 20, "ll": 20, "rectangl": 20, "28": 20, "linspac": 20, "128": 20, "132": 20, "xv": 20, "yv": 20, "zv": 20, "meshgrid": 20, "object_truth": 20, "15": 20, "unsqueez": 20, "dim": 20, "batch": 20, "29": 20, "figur": 20, "figsiz": 20, "pcolormesh": 20, "cmap": 20, "greys_r": 20, "off": 20, "colorbar": 20, "lt": 20, "0x7f5ef4dca4a0": 20, "gt": 20, "befor": 20, "1cm": 20, "60": 20, "taken": 20, "angular": 20, "degre": 20, "30": 20, "arang": 20, "360": 20, "10": 20, "With": 20, "techniqu": 20, "31": 20, "fp_net": 20, "bp_net": 20, "mickei": 20, "mous": 20, "simul": 20, "32": 20, "36": 20, "33": 20, "fig": 20, "ax": 20, "subplot": 20, "proj": 20, "enumer": 20, "20": 20, "set_titl": 20, "At": 20, "like": 20, "cube": 20, "darkest": 20, "lighter": 20, "outsid": 20, "through": 20, "semi": 20, "transpar": 20, "real": 20, "life": 20, "go": 20, "34": 20, "object_new": 20, "But": 20, "new": 20, "35": 20, "0x7f5eefe254e0": 20, "ha": 20, "been": 20, "direct": 20, "height": 20, "z_0": 20, "due": 20, "filter": 20, "estim": 20, "hat": 20, "_i": 20, "mathcal": 20, "omega": 20, "_j": 20, "bracket": 20, "multipl": 20, "fourier": 20, "ramp": 20, "freq_fft": 20, "fft": 20, "fftfreq": 20, "ab": 20, "reshap": 20, "image_fft": 20, "image_filt": 20, "ifft": 20, "37": 20, "object_fbp": 20, "38": 20, "0x7f5eefeb7940": 20, "longer": 20, "artifact": 20, "present": 20, "Such": 20}, "objects": {"": [[6, 0, 0, "-", "pytomography"]], "pytomography": [[6, 1, 1, "", "OSEMNet"], [1, 0, 0, "-", "algorithms"], [4, 0, 0, "-", "corrections"], [8, 0, 0, "-", "io"], [10, 0, 0, "-", "metadata"], [12, 0, 0, "-", "priors"], [16, 0, 0, "-", "projections"], [18, 0, 0, "-", "utils"]], "pytomography.OSEMNet": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "get_subset_splits"], [6, 2, 1, "", "set_image"], [6, 2, 1, "", "set_prior"]], "pytomography.algorithms": [[1, 1, 1, "", "CompareToNumber"], [1, 1, 1, "", "OSEMNet"], [1, 3, 1, "", "get_osem_net"], [2, 0, 0, "-", "osem"]], "pytomography.algorithms.CompareToNumber": [[1, 2, 1, "", "compare"]], "pytomography.algorithms.OSEMNet": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "get_subset_splits"], [1, 2, 1, "", "set_image"], [1, 2, 1, "", "set_prior"]], "pytomography.algorithms.osem": [[2, 1, 1, "", "CompareToNumber"], [2, 1, 1, "", "OSEMNet"], [2, 3, 1, "", "get_osem_net"]], "pytomography.algorithms.osem.CompareToNumber": [[2, 2, 1, "", "compare"]], "pytomography.algorithms.osem.OSEMNet": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "get_subset_splits"], [2, 2, 1, "", "set_image"], [2, 2, 1, "", "set_prior"]], "pytomography.corrections": [[4, 1, 1, "", "CTCorrectionNet"], [4, 1, 1, "", "PSFCorrectionNet"], [3, 0, 0, "-", "ct_correction"], [5, 0, 0, "-", "psf_correction"]], "pytomography.corrections.CTCorrectionNet": [[4, 2, 1, "", "forward"]], "pytomography.corrections.PSFCorrectionNet": [[4, 2, 1, "", "forward"], [4, 2, 1, "", "get_sigma"]], "pytomography.corrections.ct_correction": [[3, 1, 1, "", "CTCorrectionNet"], [3, 3, 1, "", "get_prob_of_detection_matrix"]], "pytomography.corrections.ct_correction.CTCorrectionNet": [[3, 2, 1, "", "forward"]], "pytomography.corrections.psf_correction": [[5, 1, 1, "", "PSFCorrectionNet"], [5, 3, 1, "", "get_PSF_transform"]], "pytomography.corrections.psf_correction.PSFCorrectionNet": [[5, 2, 1, "", "forward"], [5, 2, 1, "", "get_sigma"]], "pytomography.io": [[7, 0, 0, "-", "dicom"], [8, 3, 1, "", "dicom_CT_to_data"], [8, 3, 1, "", "dicom_projections_to_data"], [9, 0, 0, "-", "simind"], [8, 3, 1, "", "simind_CT_to_data"], [8, 3, 1, "", "simind_projections_to_data"]], "pytomography.io.dicom": [[7, 3, 1, "", "HU_to_mu"], [7, 4, 1, "", "a1"], [7, 4, 1, "", "a2"], [7, 4, 1, "", "b1"], [7, 4, 1, "", "b2"], [7, 3, 1, "", "dicom_CT_to_data"], [7, 3, 1, "", "dicom_projections_to_data"], [7, 3, 1, "", "get_affine_CT"], [7, 3, 1, "", "get_affine_spect"], [7, 3, 1, "", "get_radii_and_angles"]], "pytomography.io.simind": [[9, 3, 1, "", "find_first_entry_containing_substring"], [9, 3, 1, "", "simind_CT_to_data"], [9, 3, 1, "", "simind_projections_to_data"]], "pytomography.metadata": [[10, 1, 1, "", "ImageMeta"], [10, 1, 1, "", "ObjectMeta"], [10, 1, 1, "", "PSFMeta"], [11, 0, 0, "-", "metadata"]], "pytomography.metadata.ObjectMeta": [[10, 2, 1, "", "compute_padded_shape"]], "pytomography.metadata.metadata": [[11, 1, 1, "", "ImageMeta"], [11, 1, 1, "", "ObjectMeta"], [11, 1, 1, "", "PSFMeta"]], "pytomography.metadata.metadata.ObjectMeta": [[11, 2, 1, "", "compute_padded_shape"]], "pytomography.priors": [[12, 1, 1, "", "LogCoshPrior"], [12, 1, 1, "", "QuadraticPrior"], [13, 0, 0, "-", "smoothness"]], "pytomography.priors.smoothness": [[13, 1, 1, "", "LogCoshPrior"], [13, 1, 1, "", "QuadraticPrior"], [13, 1, 1, "", "SmoothnessPrior"]], "pytomography.priors.smoothness.SmoothnessPrior": [[13, 2, 1, "", "forward"], [13, 2, 1, "", "get_kernel"], [13, 2, 1, "", "set_beta_scale"], [13, 2, 1, "", "set_device"], [13, 2, 1, "", "set_kernel"], [13, 2, 1, "", "set_object"], [13, 2, 1, "", "set_object_meta"]], "pytomography.projections": [[16, 1, 1, "", "BackProjectionNet"], [16, 1, 1, "", "ForwardProjectionNet"], [14, 0, 0, "-", "back_projection"], [15, 0, 0, "-", "forward_projection"]], "pytomography.projections.BackProjectionNet": [[16, 2, 1, "", "forward"]], "pytomography.projections.ForwardProjectionNet": [[16, 2, 1, "", "forward"]], "pytomography.projections.back_projection": [[14, 1, 1, "", "BackProjectionNet"], [14, 1, 1, "", "BackProjectionNetOld"]], "pytomography.projections.back_projection.BackProjectionNet": [[14, 2, 1, "", "forward"]], "pytomography.projections.back_projection.BackProjectionNetOld": [[14, 2, 1, "", "forward"]], "pytomography.projections.forward_projection": [[15, 1, 1, "", "ForwardProjectionNet"]], "pytomography.projections.forward_projection.ForwardProjectionNet": [[15, 2, 1, "", "forward"]], "pytomography.utils": [[18, 3, 1, "", "compute_pad_size"], [18, 3, 1, "", "get_distance"], [17, 0, 0, "-", "helper_functions"], [18, 3, 1, "", "pad_image"], [18, 3, 1, "", "pad_object"], [18, 3, 1, "", "rev_cumsum"], [18, 3, 1, "", "rotate_detector_z"], [18, 3, 1, "", "unpad_image"], [18, 3, 1, "", "unpad_object"]], "pytomography.utils.helper_functions": [[17, 3, 1, "", "compute_pad_size"], [17, 3, 1, "", "get_distance"], [17, 3, 1, "", "pad_image"], [17, 3, 1, "", "pad_object"], [17, 3, 1, "", "rev_cumsum"], [17, 3, 1, "", "rotate_detector_z"], [17, 3, 1, "", "unpad_image"], [17, 3, 1, "", "unpad_object"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "refer": 0, "pytomographi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "algorithm": [1, 2], "submodul": [1, 4, 8, 10, 12, 16, 18], "packag": [1, 4, 6, 8, 10, 12, 16, 18], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "class": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16], "function": [1, 2, 3, 5, 7, 8, 9, 17, 18], "osem": 2, "modul": [2, 3, 5, 7, 9, 11, 13, 14, 15, 17], "correct": [3, 4, 5], "ct_correct": 3, "psf_correct": 5, "subpackag": 6, "io": [7, 8, 9], "dicom": 7, "attribut": 7, "simind": 9, "metadata": [10, 11], "prior": [12, 13], "smooth": 13, "project": [14, 15, 16, 20], "back_project": 14, "forward_project": 15, "util": [17, 18], "helper_funct": 17, "instal": 19, "more": 19, "read": 19, "tutori": 20, "explor": 20, "forward": 20, "And": 20, "back": 20}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"PyTomography": [[19, "pytomography"]], "Installation": [[19, "installation"]], "More Reading": [[19, "more-reading"]], "Contents:": [[19, null]], "API Reference": [[0, "api-reference"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "Submodules": [[1, "submodules"], [4, "submodules"], [8, "submodules"], [10, "submodules"], [12, "submodules"], [16, "submodules"], [18, "submodules"]], "Package Contents": [[1, "package-contents"], [4, "package-contents"], [6, "package-contents"], [8, "package-contents"], [10, "package-contents"], [12, "package-contents"], [16, "package-contents"], [18, "package-contents"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [17, "functions"], [18, "functions"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [5, "module-contents"], [7, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"]], "pytomography.corrections.ct_correction": [[3, "module-pytomography.corrections.ct_correction"]], "pytomography.corrections": [[4, "module-pytomography.corrections"]], "pytomography.corrections.psf_correction": [[5, "module-pytomography.corrections.psf_correction"]], "pytomography": [[6, "module-pytomography"]], "Subpackages": [[6, "subpackages"]], "pytomography.io.dicom": [[7, "module-pytomography.io.dicom"]], "Attributes": [[7, "attributes"]], "pytomography.io": [[8, "module-pytomography.io"]], "pytomography.io.simind": [[9, "module-pytomography.io.simind"]], "pytomography.metadata": [[10, "module-pytomography.metadata"]], "pytomography.metadata.metadata": [[11, "module-pytomography.metadata.metadata"]], "pytomography.priors": [[12, "module-pytomography.priors"]], "pytomography.priors.smoothness": [[13, "module-pytomography.priors.smoothness"]], "pytomography.projections.back_projection": [[14, "module-pytomography.projections.back_projection"]], "pytomography.projections.forward_projection": [[15, "module-pytomography.projections.forward_projection"]], "pytomography.projections": [[16, "module-pytomography.projections"]], "pytomography.utils.helper_functions": [[17, "module-pytomography.utils.helper_functions"]], "pytomography.utils": [[18, "module-pytomography.utils"]], "Tutorial: Exploring Forward And Back Projections": [[20, "Tutorial:-Exploring-Forward-And-Back-Projections"]]}, "indexentries": {"comparetonumber (class in pytomography.algorithms)": [[1, "pytomography.algorithms.CompareToNumber"]], "osemnet (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSEMNet"]], "compare() (pytomography.algorithms.comparetonumber method)": [[1, "pytomography.algorithms.CompareToNumber.compare"]], "forward() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.forward"]], "get_osem_net() (in module pytomography.algorithms)": [[1, "pytomography.algorithms.get_osem_net"]], "get_subset_splits() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.get_subset_splits"]], "module": [[1, "module-pytomography.algorithms"], [2, "module-pytomography.algorithms.osem"], [3, "module-pytomography.corrections.ct_correction"], [4, "module-pytomography.corrections"], [5, "module-pytomography.corrections.psf_correction"], [6, "module-pytomography"], [7, "module-pytomography.io.dicom"], [8, "module-pytomography.io"], [9, "module-pytomography.io.simind"], [10, "module-pytomography.metadata"], [11, "module-pytomography.metadata.metadata"], [12, "module-pytomography.priors"], [13, "module-pytomography.priors.smoothness"], [14, "module-pytomography.projections.back_projection"], [15, "module-pytomography.projections.forward_projection"], [16, "module-pytomography.projections"], [17, "module-pytomography.utils.helper_functions"], [18, "module-pytomography.utils"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "set_image() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.set_image"]], "set_prior() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.set_prior"]], "comparetonumber (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.CompareToNumber"]], "osemnet (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSEMNet"]], "compare() (pytomography.algorithms.osem.comparetonumber method)": [[2, "pytomography.algorithms.osem.CompareToNumber.compare"]], "forward() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.forward"]], "get_osem_net() (in module pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.get_osem_net"]], "get_subset_splits() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.get_subset_splits"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "set_image() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.set_image"]], "set_prior() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.set_prior"]], "ctcorrectionnet (class in pytomography.corrections.ct_correction)": [[3, "pytomography.corrections.ct_correction.CTCorrectionNet"]], "forward() (pytomography.corrections.ct_correction.ctcorrectionnet method)": [[3, "pytomography.corrections.ct_correction.CTCorrectionNet.forward"]], "get_prob_of_detection_matrix() (in module pytomography.corrections.ct_correction)": [[3, "pytomography.corrections.ct_correction.get_prob_of_detection_matrix"]], "pytomography.corrections.ct_correction": [[3, "module-pytomography.corrections.ct_correction"]], "ctcorrectionnet (class in pytomography.corrections)": [[4, "pytomography.corrections.CTCorrectionNet"]], "psfcorrectionnet (class in pytomography.corrections)": [[4, "pytomography.corrections.PSFCorrectionNet"]], "forward() (pytomography.corrections.ctcorrectionnet method)": [[4, "pytomography.corrections.CTCorrectionNet.forward"]], "forward() (pytomography.corrections.psfcorrectionnet method)": [[4, "pytomography.corrections.PSFCorrectionNet.forward"]], "get_sigma() (pytomography.corrections.psfcorrectionnet method)": [[4, "pytomography.corrections.PSFCorrectionNet.get_sigma"]], "pytomography.corrections": [[4, "module-pytomography.corrections"]], "psfcorrectionnet (class in pytomography.corrections.psf_correction)": [[5, "pytomography.corrections.psf_correction.PSFCorrectionNet"]], "forward() (pytomography.corrections.psf_correction.psfcorrectionnet method)": [[5, "pytomography.corrections.psf_correction.PSFCorrectionNet.forward"]], "get_psf_transform() (in module pytomography.corrections.psf_correction)": [[5, "pytomography.corrections.psf_correction.get_PSF_transform"]], "get_sigma() (pytomography.corrections.psf_correction.psfcorrectionnet method)": [[5, "pytomography.corrections.psf_correction.PSFCorrectionNet.get_sigma"]], "pytomography.corrections.psf_correction": [[5, "module-pytomography.corrections.psf_correction"]], "osemnet (class in pytomography)": [[6, "pytomography.OSEMNet"]], "forward() (pytomography.osemnet method)": [[6, "pytomography.OSEMNet.forward"]], "get_subset_splits() (pytomography.osemnet method)": [[6, "pytomography.OSEMNet.get_subset_splits"]], "pytomography": [[6, "module-pytomography"]], "set_image() (pytomography.osemnet method)": [[6, "pytomography.OSEMNet.set_image"]], "set_prior() (pytomography.osemnet method)": [[6, "pytomography.OSEMNet.set_prior"]], "hu_to_mu() (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.HU_to_mu"]], "a1 (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.a1"]], "a2 (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.a2"]], "b1 (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.b1"]], "b2 (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.b2"]], "dicom_ct_to_data() (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.dicom_CT_to_data"]], "dicom_projections_to_data() (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.dicom_projections_to_data"]], "get_affine_ct() (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.get_affine_CT"]], "get_affine_spect() (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.get_affine_spect"]], "get_radii_and_angles() (in module pytomography.io.dicom)": [[7, "pytomography.io.dicom.get_radii_and_angles"]], "pytomography.io.dicom": [[7, "module-pytomography.io.dicom"]], "dicom_ct_to_data() (in module pytomography.io)": [[8, "pytomography.io.dicom_CT_to_data"]], "dicom_projections_to_data() (in module pytomography.io)": [[8, "pytomography.io.dicom_projections_to_data"]], "pytomography.io": [[8, "module-pytomography.io"]], "simind_ct_to_data() (in module pytomography.io)": [[8, "pytomography.io.simind_CT_to_data"]], "simind_projections_to_data() (in module pytomography.io)": [[8, "pytomography.io.simind_projections_to_data"]], "find_first_entry_containing_substring() (in module pytomography.io.simind)": [[9, "pytomography.io.simind.find_first_entry_containing_substring"]], "pytomography.io.simind": [[9, "module-pytomography.io.simind"]], "simind_ct_to_data() (in module pytomography.io.simind)": [[9, "pytomography.io.simind.simind_CT_to_data"]], "simind_projections_to_data() (in module pytomography.io.simind)": [[9, "pytomography.io.simind.simind_projections_to_data"]], "imagemeta (class in pytomography.metadata)": [[10, "pytomography.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata)": [[10, "pytomography.metadata.ObjectMeta"]], "psfmeta (class in pytomography.metadata)": [[10, "pytomography.metadata.PSFMeta"]], "compute_padded_shape() (pytomography.metadata.objectmeta method)": [[10, "pytomography.metadata.ObjectMeta.compute_padded_shape"]], "pytomography.metadata": [[10, "module-pytomography.metadata"]], "imagemeta (class in pytomography.metadata.metadata)": [[11, "pytomography.metadata.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata.metadata)": [[11, "pytomography.metadata.metadata.ObjectMeta"]], "psfmeta (class in pytomography.metadata.metadata)": [[11, "pytomography.metadata.metadata.PSFMeta"]], "compute_padded_shape() (pytomography.metadata.metadata.objectmeta method)": [[11, "pytomography.metadata.metadata.ObjectMeta.compute_padded_shape"]], "pytomography.metadata.metadata": [[11, "module-pytomography.metadata.metadata"]], "logcoshprior (class in pytomography.priors)": [[12, "pytomography.priors.LogCoshPrior"]], "quadraticprior (class in pytomography.priors)": [[12, "pytomography.priors.QuadraticPrior"]], "pytomography.priors": [[12, "module-pytomography.priors"]], "logcoshprior (class in pytomography.priors.smoothness)": [[13, "pytomography.priors.smoothness.LogCoshPrior"]], "quadraticprior (class in pytomography.priors.smoothness)": [[13, "pytomography.priors.smoothness.QuadraticPrior"]], "smoothnessprior (class in pytomography.priors.smoothness)": [[13, "pytomography.priors.smoothness.SmoothnessPrior"]], "forward() (pytomography.priors.smoothness.smoothnessprior method)": [[13, "pytomography.priors.smoothness.SmoothnessPrior.forward"]], "get_kernel() (pytomography.priors.smoothness.smoothnessprior method)": [[13, "pytomography.priors.smoothness.SmoothnessPrior.get_kernel"]], "pytomography.priors.smoothness": [[13, "module-pytomography.priors.smoothness"]], "set_beta_scale() (pytomography.priors.smoothness.smoothnessprior method)": [[13, "pytomography.priors.smoothness.SmoothnessPrior.set_beta_scale"]], "set_device() (pytomography.priors.smoothness.smoothnessprior method)": [[13, "pytomography.priors.smoothness.SmoothnessPrior.set_device"]], "set_kernel() (pytomography.priors.smoothness.smoothnessprior method)": [[13, "pytomography.priors.smoothness.SmoothnessPrior.set_kernel"]], "set_object() (pytomography.priors.smoothness.smoothnessprior method)": [[13, "pytomography.priors.smoothness.SmoothnessPrior.set_object"]], "set_object_meta() (pytomography.priors.smoothness.smoothnessprior method)": [[13, "pytomography.priors.smoothness.SmoothnessPrior.set_object_meta"]], "backprojectionnet (class in pytomography.projections.back_projection)": [[14, "pytomography.projections.back_projection.BackProjectionNet"]], "backprojectionnetold (class in pytomography.projections.back_projection)": [[14, "pytomography.projections.back_projection.BackProjectionNetOld"]], "forward() (pytomography.projections.back_projection.backprojectionnet method)": [[14, "pytomography.projections.back_projection.BackProjectionNet.forward"]], "forward() (pytomography.projections.back_projection.backprojectionnetold method)": [[14, "pytomography.projections.back_projection.BackProjectionNetOld.forward"]], "pytomography.projections.back_projection": [[14, "module-pytomography.projections.back_projection"]], "forwardprojectionnet (class in pytomography.projections.forward_projection)": [[15, "pytomography.projections.forward_projection.ForwardProjectionNet"]], "forward() (pytomography.projections.forward_projection.forwardprojectionnet method)": [[15, "pytomography.projections.forward_projection.ForwardProjectionNet.forward"]], "pytomography.projections.forward_projection": [[15, "module-pytomography.projections.forward_projection"]], "backprojectionnet (class in pytomography.projections)": [[16, "pytomography.projections.BackProjectionNet"]], "forwardprojectionnet (class in pytomography.projections)": [[16, "pytomography.projections.ForwardProjectionNet"]], "forward() (pytomography.projections.backprojectionnet method)": [[16, "pytomography.projections.BackProjectionNet.forward"]], "forward() (pytomography.projections.forwardprojectionnet method)": [[16, "pytomography.projections.ForwardProjectionNet.forward"]], "pytomography.projections": [[16, "module-pytomography.projections"]], "compute_pad_size() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.compute_pad_size"]], "get_distance() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.get_distance"]], "pad_image() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.pad_image"]], "pad_object() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.pad_object"]], "pytomography.utils.helper_functions": [[17, "module-pytomography.utils.helper_functions"]], "rev_cumsum() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.rev_cumsum"]], "rotate_detector_z() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.rotate_detector_z"]], "unpad_image() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.unpad_image"]], "unpad_object() (in module pytomography.utils.helper_functions)": [[17, "pytomography.utils.helper_functions.unpad_object"]], "compute_pad_size() (in module pytomography.utils)": [[18, "pytomography.utils.compute_pad_size"]], "get_distance() (in module pytomography.utils)": [[18, "pytomography.utils.get_distance"]], "pad_image() (in module pytomography.utils)": [[18, "pytomography.utils.pad_image"]], "pad_object() (in module pytomography.utils)": [[18, "pytomography.utils.pad_object"]], "pytomography.utils": [[18, "module-pytomography.utils"]], "rev_cumsum() (in module pytomography.utils)": [[18, "pytomography.utils.rev_cumsum"]], "rotate_detector_z() (in module pytomography.utils)": [[18, "pytomography.utils.rotate_detector_z"]], "unpad_image() (in module pytomography.utils)": [[18, "pytomography.utils.unpad_image"]], "unpad_object() (in module pytomography.utils)": [[18, "pytomography.utils.unpad_object"]]}})