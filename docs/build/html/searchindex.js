Search.setIndex({"docnames": ["autoapi/index", "autoapi/pytomography/algorithms/index", "autoapi/pytomography/algorithms/osem/index", "autoapi/pytomography/callbacks/callback/index", "autoapi/pytomography/callbacks/index", "autoapi/pytomography/index", "autoapi/pytomography/io/dicom/index", "autoapi/pytomography/io/index", "autoapi/pytomography/io/simind/index", "autoapi/pytomography/mappings/SPECT/atteunation/index", "autoapi/pytomography/mappings/SPECT/index", "autoapi/pytomography/mappings/SPECT/psf/index", "autoapi/pytomography/mappings/index", "autoapi/pytomography/mappings/mapping/index", "autoapi/pytomography/metadata/index", "autoapi/pytomography/metadata/metadata/index", "autoapi/pytomography/priors/index", "autoapi/pytomography/priors/nearest_neighbour/index", "autoapi/pytomography/priors/prior/index", "autoapi/pytomography/projections/back_projection/index", "autoapi/pytomography/projections/forward_projection/index", "autoapi/pytomography/projections/index", "autoapi/pytomography/projections/projection/index", "autoapi/pytomography/utils/helper_functions/index", "autoapi/pytomography/utils/index", "index", "intro_page", "notebooks/conventions", "notebooks/old_t_siminddata", "notebooks/t_dicomdata", "notebooks/t_fbp", "notebooks/t_quantitative", "notebooks/t_siminddata", "usage"], "filenames": ["autoapi/index.rst", "autoapi/pytomography/algorithms/index.rst", "autoapi/pytomography/algorithms/osem/index.rst", "autoapi/pytomography/callbacks/callback/index.rst", "autoapi/pytomography/callbacks/index.rst", "autoapi/pytomography/index.rst", "autoapi/pytomography/io/dicom/index.rst", "autoapi/pytomography/io/index.rst", "autoapi/pytomography/io/simind/index.rst", "autoapi/pytomography/mappings/SPECT/atteunation/index.rst", "autoapi/pytomography/mappings/SPECT/index.rst", "autoapi/pytomography/mappings/SPECT/psf/index.rst", "autoapi/pytomography/mappings/index.rst", "autoapi/pytomography/mappings/mapping/index.rst", "autoapi/pytomography/metadata/index.rst", "autoapi/pytomography/metadata/metadata/index.rst", "autoapi/pytomography/priors/index.rst", "autoapi/pytomography/priors/nearest_neighbour/index.rst", "autoapi/pytomography/priors/prior/index.rst", "autoapi/pytomography/projections/back_projection/index.rst", "autoapi/pytomography/projections/forward_projection/index.rst", "autoapi/pytomography/projections/index.rst", "autoapi/pytomography/projections/projection/index.rst", "autoapi/pytomography/utils/helper_functions/index.rst", "autoapi/pytomography/utils/index.rst", "index.md", "intro_page.md", "notebooks/conventions.ipynb", "notebooks/old_t_siminddata.ipynb", "notebooks/t_dicomdata.ipynb", "notebooks/t_fbp.ipynb", "notebooks/t_quantitative.ipynb", "notebooks/t_siminddata.ipynb", "usage.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms.osem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.callbacks.callback</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.dicom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.simind</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.mappings.SPECT.atteunation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.mappings.SPECT</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.mappings.SPECT.psf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.mappings</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.mappings.mapping</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors.nearest_neighbour</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors.prior</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.back_projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.forward_projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils.helper_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils</span></code>", "PyTomography", "PyTomography", "Manual", "Reconstructing Simind Data", "Reconstructing DICOM data", "Implementing Filtered Back Projection", "Quantitative Analysis", "Reconstructing SIMIND Data", "Tutorials"], "terms": {"thi": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "page": 0, "contain": [0, 1, 2, 7, 8, 10, 11, 12, 27, 31, 32], "auto": [0, 31], "gener": [0, 25, 26, 31], "document": [0, 27], "1": [0, 1, 2, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32], "pytomographi": [0, 27, 28, 29, 30, 31, 32], "algorithm": [0, 4, 5, 25, 26, 28, 29, 30, 31, 32], "osem": [0, 1, 4, 5, 19, 21, 27, 28, 30, 31], "callback": [0, 1, 2, 5, 31], "io": [0, 5, 28, 29, 31, 32], "dicom": [0, 5, 7, 27, 33], "simind": [0, 5, 7, 25, 26, 31, 33], "map": [0, 5, 19, 20, 21, 22, 25, 28, 29, 30, 31, 32], "spect": [0, 5, 12, 27, 28, 29, 30, 32], "atteun": [0, 5, 10, 12, 19, 20, 21, 27, 29], "psf": [0, 5, 10, 12, 14, 15, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32], "metadata": [0, 5, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32], "prior": [0, 1, 2, 5, 6, 7, 8, 19, 21, 25, 26, 28, 31, 32], "relative_differ": [], "smooth": [10, 11, 12], "project": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 25, 26, 28, 29, 31, 32, 33], "back_project": [0, 5, 21], "forward_project": [0, 5, 21], "util": [0, 5], "helper_funct": [0, 5, 24], "creat": [0, 11, 25, 26, 28, 29, 30, 31, 32], "sphinx": 0, "autoapi": 0, "osml": [1, 2], "imag": [1, 2, 6, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32], "forward_projection_net": [1, 2, 28, 29, 32], "back_projection_net": [1, 2, 28, 29, 32], "object_initi": [1, 2, 6, 7, 8, 28], "none": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31], "scatter": [1, 2, 7, 8, 25, 26, 28, 29, 31, 32], "0": [1, 2, 11, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32], "base": [1, 2, 4, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 27, 29], "torch": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32], "nn": [1, 2, 6, 7, 8, 11, 12, 13, 16, 18, 21, 22], "modul": [1, 7, 12, 16, 21], "abstract": [1, 2, 3, 4, 12, 13, 16, 18, 21, 22], "differ": [1, 2, 16, 17, 25, 26, 27, 28, 31], "The": [1, 2, 7, 8, 9, 10, 11, 12, 14, 15, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33], "between": [1, 2, 11, 14, 15, 16, 23, 24, 27, 29, 31], "subclass": [1, 2, 3, 4, 12, 13, 16, 17, 19, 21, 22, 31], "i": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "method": [1, 2, 3, 4, 7, 8, 12, 13, 16, 18, 21, 22, 23, 24, 27, 31], "which": [1, 2, 3, 4, 19, 20, 21, 23, 24, 27, 28, 29, 31], "thei": [1, 2, 27, 28, 31, 32], "includ": [1, 2, 19, 21, 27, 28, 30, 31, 32], "inform": [1, 2, 6, 7, 8, 10, 11, 12, 27, 28, 30, 31], "If": [1, 2, 3, 4, 9, 10, 11, 12, 14, 15, 19, 21, 22, 23, 24, 27, 28, 30, 32], "function": [1, 2, 4, 10, 12, 14, 15, 16, 17, 18, 25, 26, 27, 28, 29, 31, 32], "us": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "ar": [1, 2, 4, 10, 11, 12, 14, 15, 17, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32], "all": [1, 2, 4, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 27, 28, 29, 31, 32], "equival": [1, 2], "paramet": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 31, 32], "tensor": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 31], "batch_siz": [1, 2, 3, 4, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 23, 24, 28], "lr": [1, 2, 6, 7, 8, 19, 21, 23, 24, 28], "ltheta": [1, 2, 6, 7, 8, 19, 20, 21, 23, 24, 28], "lz": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 28], "data": [1, 2, 6, 7, 8, 10, 11, 12, 25, 26, 27, 33], "g_j": [1, 2, 19, 20, 21, 27, 28], "reconstruct": [1, 2, 3, 4, 6, 7, 8, 12, 13, 19, 20, 21, 30, 33], "lx": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24], "ly": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24], "repres": [1, 2, 16, 17, 18, 27, 29], "initi": [1, 2, 16, 17, 21, 22, 23, 24, 27, 28, 31], "object": [1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32], "guess": [1, 2, 27, 28], "f_i": [1, 2, 19, 20, 21, 27, 28], "space": [1, 2, 9, 10, 11, 12, 14, 15, 23, 24, 27, 28, 30], "forwardprojectionnet": [1, 2, 20, 21, 27, 28, 29, 30, 31, 32], "forward": [1, 2, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 32], "network": [1, 2, 10, 11, 12, 13, 21, 22, 28, 29, 30, 31, 32], "comput": [1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 31], "sum_": [1, 2, 16, 17, 19, 20, 21, 27, 29, 30, 32], "c_": [1, 2, 19, 20, 21, 28, 30], "ij": [1, 2, 19, 20, 21, 27, 28, 30], "a_i": [1, 2, 27, 28, 29, 30, 32], "where": [1, 2, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32], "being": [1, 2, 6, 9, 10, 11, 12, 27], "backprojectionnet": [1, 2, 19, 21, 27, 28, 29, 30, 31, 32], "back": [1, 2, 9, 10, 11, 12, 19, 20, 21, 23, 24, 27, 28, 29, 32, 33], "j": [1, 2, 19, 20, 21, 27, 30], "b_j": [1, 2, 27, 28, 30], "estim": [1, 2, 7, 8, 30], "contribut": [1, 2, 23, 24, 27, 30], "s_j": [1, 2], "option": [1, 2, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24], "bayesian": [1, 2], "beta": [1, 2, 16, 17, 18, 25, 26, 27, 28, 29, 31, 32], "frac": [1, 2, 14, 15, 16, 17, 18, 19, 21, 27, 28], "partial": [1, 2, 16, 17, 18, 28], "v": [1, 2, 16, 17, 18, 27, 28, 31], "f_r": [1, 2, 16, 17, 18, 28], "term": [1, 2, 30], "default": [1, 2, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 32], "get_subset_split": [1, 2], "n_subset": [1, 2, 25, 26, 28, 29, 31, 32], "n_angl": [1, 2], "return": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 28, 29, 31, 32], "list": [1, 2, 7, 8, 14, 15, 19, 20, 21, 22, 23, 24], "arrai": [1, 2, 6, 10, 11, 12, 23, 24, 25, 28, 31], "each": [1, 2, 3, 4, 10, 11, 12, 14, 15, 23, 24, 27, 28, 29, 31], "indic": [1, 2, 27, 30], "correspond": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "number": [1, 2, 4, 14, 15, 23, 24, 27, 28, 31], "order": [1, 2, 7, 8, 19, 20, 21, 27, 28, 31], "subset": [1, 2, 19, 20, 21, 27, 28, 31], "For": [1, 2, 4, 17, 27, 28, 29, 30, 31], "exampl": [1, 2, 4, 19, 21, 27, 28, 30, 31, 32], "get_subsets_split": [1, 2], "2": [1, 2, 7, 8, 14, 15, 16, 17, 23, 24, 27, 28, 29, 30, 32], "6": [1, 2, 28, 29, 30, 31, 32], "would": [1, 2, 27, 29, 32], "4": [1, 2, 16, 17, 28, 29, 30, 31, 32], "3": [1, 2, 7, 8, 14, 15, 27, 28, 29, 30, 32], "5": [1, 2, 25, 26, 28, 29, 30, 31, 32], "param": [1, 2, 21, 22], "type": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "int": [1, 2, 8, 9, 10, 11, 12, 14, 15, 23, 24], "total": [1, 2, 27, 31], "index": [1, 2, 9, 10, 11, 12, 27, 28, 30], "n_iter": [1, 2, 25, 26, 28, 29, 31, 32], "perform": [1, 2, 25, 26], "must": [1, 2, 3, 4, 7, 8, 12, 13, 21, 22, 28, 32], "implement": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 33], "iter": [1, 2, 3, 4, 27, 28, 31], "evalu": [1, 2, 4, 31], "after": [1, 2, 3, 4, 21, 22, 31], "subiter": [1, 2, 3, 4, 31], "osemosl": [1, 2, 6, 7, 8, 28, 29, 32], "expect": [1, 2, 27, 28], "one": [1, 2, 3, 4, 23, 24, 27, 28, 29, 30, 31, 32], "step": [1, 2, 27], "late": [1, 2, 27], "n": [1, 2, 27, 28], "m": [1, 2, 27], "sum_j": [1, 2, 19, 21, 27, 28, 30], "_": [1, 2, 27, 28, 29], "sum_i": [1, 2, 27, 28], "float": [1, 2, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 27, 30], "delta": [1, 2, 11, 16, 17, 19, 21], "1e": [1, 2, 11, 16, 17, 19, 21], "11": [1, 2, 19, 21, 29, 30, 31, 32], "_description_": [1, 2, 23, 24], "prevent": [1, 2, 11, 16, 17, 19, 21], "divis": [1, 2, 11, 16, 17, 19, 21], "zero": [1, 2, 19, 21, 27], "when": [1, 2, 11, 14, 15, 19, 20, 21, 27, 30, 31], "calcul": [1, 2], "ratio": [1, 2, 27], "osembsr": [1, 2, 31, 32], "block": [1, 2, 27], "sequenti": [1, 2, 27], "regular": [1, 2, 27, 28, 31], "bsrem": [1, 2], "In": [1, 2, 9, 10, 11, 12, 16, 23, 24, 25, 26, 27, 28, 30, 31], "particular": [1, 2, 9, 10, 11, 12, 23, 24, 27, 28, 31], "consist": [1, 2, 27], "two": [1, 2, 27, 30, 31], "tild": [1, 2, 16, 17, 18, 27], "f": [1, 2, 16, 17, 18, 27, 28, 30, 31], "_i": [1, 2, 27, 30], "follow": [1, 2, 25, 26, 27, 28, 29, 30, 32], "left": [1, 2, 16, 17, 27, 30, 31], "alpha_n": [1, 2, 27], "right": [1, 2, 9, 10, 12, 16, 17, 27, 30, 31], "relaxation_funct": [1, 2], "lambda": [1, 2], "x": [1, 2, 9, 10, 11, 12, 13, 23, 24, 27, 30, 31], "specifi": [1, 2, 7, 8, 10, 11, 12, 14, 15, 20, 21, 23, 24, 27, 28, 29, 32], "relax": [1, 2], "sequenc": [1, 2, 6, 7, 8, 21, 22, 27, 29], "call": [1, 2, 3, 4, 28, 31], "_type_": [1, 2, 23, 24], "maximum": [2, 25, 26, 27, 28, 31, 32], "liklihood": [2, 16, 27], "Such": [2, 30], "from": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 27, 28, 29, 30, 31, 32], "an": [2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 27, 28, 29, 30, 31, 32], "e": [2, 14, 15, 16, 19, 20, 21, 23, 24, 27], "given": [2, 16, 17, 19, 20, 21, 23, 24, 27, 30, 32], "notat": [2, 27], "defin": [2, 4, 10, 11, 12, 27, 28, 29, 30, 31, 32], "equal": [2, 30], "size": [2, 9, 10, 11, 12, 14, 15, 16, 18, 23, 27, 28, 30, 31], "equiv": [2, 27], "complet": [2, 28], "we": [2, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32], "start": [2, 28], "next": [2, 27, 29, 31, 32], "ani": [2, 16, 17, 18, 21, 22, 23, 24, 27, 28, 30, 32], "inherit": [2, 4, 16, 18], "__init__": [2, 3, 4, 31], "onc": 2, "recon": 2, "time": [2, 27, 28, 31], "redefin": [3, 4], "run": [3, 4, 27, 31], "argument": [3, 4, 16, 17, 32], "algorihtm": [3, 4], "__run__": [3, 4], "obj": [3, 4, 31], "can": [3, 4, 27, 28, 29, 30, 31, 32, 33], "variou": [3, 4, 19, 20, 21, 27, 31], "statist": [3, 4, 27, 31], "It": [4, 10, 11, 12, 25, 26, 27, 28, 30, 31], "": [4, 9, 10, 12, 16, 17, 23, 24, 27, 28, 30, 31], "often": [4, 27], "case": [4, 14, 15, 23, 24, 27, 28, 30, 31], "you": [4, 25, 26, 27, 28, 29, 30, 31, 32], "want": [4, 28, 29, 31, 32], "metric": 4, "throughout": [4, 27], "mai": [4, 27, 28, 30, 31], "look": [4, 8, 27, 28, 30, 31], "varianc": [4, 31], "radioact": [4, 31], "distribut": [4, 27], "liver": [4, 31], "what": [4, 10, 11, 12, 27, 28, 30, 31], "A": [4, 9, 10, 11, 12, 27, 28], "simpli": [4, 27, 28, 31], "take": [4, 27, 29, 31, 32], "some": [4, 14, 15, 25, 27, 28, 31], "sort": 4, "input": [4, 7, 8, 16, 17], "user": [4, 23, 24, 28, 29, 31, 32], "should": [4, 10, 11, 12, 14, 15, 16, 17, 18, 23, 24, 27, 28, 31], "could": [4, 30, 31], "nois": [4, 31], "bia": [4, 31], "curv": [4, 31], "provid": 4, "wa": [4, 23, 24, 28, 29, 31], "ground": [4, 31], "truth": [4, 31], "compar": [4, 27, 28, 31], "note": [6, 9, 14, 15, 23, 24, 27, 28, 30], "still": [6, 25, 27, 31], "built": [6, 27], "yet": 6, "finish": 6, "get_radii_and_angl": 6, "d": [6, 10, 11, 12, 14, 15, 28, 29, 31], "get": [6, 10, 11, 12, 14, 15, 23, 24, 28, 29, 30, 32], "radii": [6, 14, 15, 28], "angl": [6, 9, 10, 11, 12, 14, 15, 19, 20, 21, 23, 24, 27, 28, 29, 30, 32], "dataset": 6, "pydicom": [6, 29], "requir": [6, 7, 8, 9, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32], "np": [6, 8, 23, 24, 28, 29, 30, 31, 32], "dicom_projections_to_data": [6, 7, 29], "file": [6, 7, 8, 28, 29, 31, 32], "obtain": [6, 7, 8, 19, 21, 27, 28, 29, 31, 32], "objectmeta": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 29, 30, 32], "imagemeta": [6, 7, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 29, 30, 32], "dcm": [6, 7, 29], "str": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24], "path": [6, 7, 8, 28, 29, 31, 32], "dicom_mew_to_data": [6, 7, 29], "dew": [6, 7, 29], "get_hu2mu_coeffici": 6, "hu_to_mu": [6, 29], "hu": 6, "a1": 6, "b1": 6, "a2": 6, "b2": 6, "get_affine_spect": 6, "get_affine_ct": 6, "max_z": 6, "dicom_ct_to_data": [6, 7, 29], "files_ct": [6, 7, 29], "file_nm": [6, 7, 29], "get_spect_recon_algorithm_dicom": [6, 7, 29], "projections_fil": [6, 7, 29], "atteunation_fil": [6, 7, 29], "use_psf": [6, 7, 29], "fals": [6, 7, 19, 21, 23, 24, 31], "scatter_typ": [6, 7, 29], "recon_algorithm_class": [6, 7, 8, 29], "devic": [1, 2, 5, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 31, 32], "cpu": [11, 12, 13, 16, 17, 18, 28, 29, 31, 32], "bool": [6, 7, 19, 21, 23, 24], "simind_ct_to_data": [7, 8, 28, 31, 32], "headerfil": [7, 8], "open": [7, 8, 25, 26, 28, 31], "attenu": [7, 8, 9, 10, 12, 25, 26, 27, 29, 30, 31, 32], "output": [7, 8, 9, 10, 11, 12, 31], "header": [7, 8, 28, 32], "ct": [7, 8, 9, 10, 12, 23, 24, 27, 28, 29, 31, 32], "simind_projections_to_data": [7, 8, 28, 31], "distanc": [7, 8, 10, 11, 12, 14, 15, 16, 23, 24, 27, 28, 31, 32], "cm": [7, 8, 9, 10, 12, 14, 15, 28, 31], "unit": [7, 8, 14, 15, 27, 28, 29, 31, 32], "measur": [7, 8, 27, 31], "sinc": [7, 8, 23, 24, 27, 28, 31], "mm": [7, 8, 28], "doesn": [7, 8], "t": [7, 8, 23, 24, 27, 28, 29, 30, 31, 32], "simind_mew_to_data": [7, 8, 31, 32], "multipl": [7, 8, 27, 28, 29, 30, 31], "primari": [7, 8, 27, 29, 32], "lower": [7, 8], "upper": [7, 8, 31], "window": [7, 8, 27, 28, 29, 31, 32], "first": [7, 8, 9, 10, 11, 12, 23, 24, 25, 26, 27, 28, 30, 31], "second": [7, 8, 27, 31], "tripl": [7, 8, 27, 31], "energi": [7, 8, 9, 10, 12, 27, 28, 29, 31, 32], "get_spect_recon_algorithm_simind": [7, 8, 25, 26, 32], "projections_head": [7, 8, 25, 26, 32], "scatter_head": [7, 8, 25, 26, 32], "ct_header": [7, 8, 25, 26, 32], "psf_meta": [7, 8, 10, 11, 12, 25, 26, 29, 31, 32], "psfmeta": [7, 8, 10, 11, 12, 14, 15, 25, 26, 29, 31, 32], "relation_dict": 8, "find_first_entry_containing_head": 8, "list_of_attribut": 8, "dtype": [8, 31], "float32": [8, 31], "find": [8, 9, 10, 11, 12], "entri": 8, "interfil": 8, "line": [8, 27, 28], "valu": [8, 16, 18, 19, 20, 21, 23, 24, 27, 31], "get_prob_of_detection_matrix": 9, "dx": [9, 10, 11, 12, 23, 24], "convert": [9, 27, 28, 29, 30, 31], "text": [9, 10, 12, 27, 32], "probabl": [9, 16, 17, 18, 27], "photon": [9, 10, 12, 25, 26, 27, 32], "detect": [9, 10, 12, 27, 31], "matrix": [9, 19, 20, 21, 27, 28, 29, 30, 32], "scanner": [9, 11, 23, 24, 27, 31, 32], "emit": 9, "coeffici": [9, 10, 12, 29], "math": [9, 31], "axial": [9, 14, 15], "plane": [9, 10, 11, 12, 14, 15, 23, 24, 27], "pixel": [9, 10, 11, 12, 23, 24, 27], "detector": [9, 10, 11, 12, 14, 15, 23, 24, 27, 28, 30, 31, 32], "axi": [9, 10, 11, 12, 23, 24, 27, 28, 29, 30, 31, 32], "spectattenuationnet": [9, 10, 12, 28, 29, 31, 32], "mapnet": [9, 10, 11, 12, 13, 19, 20, 21, 22, 30], "obj2obj": [9, 10, 11, 12, 13], "model": [9, 10, 11, 12, 14, 15, 19, 20, 21, 23, 24, 27, 28, 29, 31, 32], "effect": [9, 10, 11, 12], "scan": [9, 10, 12, 27, 29, 31, 32], "pytorch": [9, 10, 11, 12, 13, 16, 17, 18, 21, 22, 25, 26, 27, 28], "object_i": [9, 10, 11, 12], "norm_const": [9, 10, 11, 12], "appli": [9, 10, 11, 12, 13, 23, 24, 25, 26, 30], "its": [9, 10, 11, 12, 23, 24], "along": [9, 10, 11, 12, 19, 21, 23, 24, 27, 30, 32], "align": [9, 10, 12, 14, 15, 23, 24, 27, 28, 29, 31, 32], "normal": [9, 10, 11, 12, 19, 21, 30], "dure": [9, 10, 11, 12, 19, 21, 27, 31], "correct": [9, 10, 11, 12, 13, 14, 15, 19, 21, 23, 24, 25, 26, 29, 30, 31, 32], "spectpsfnet": [10, 11, 12, 29, 31, 32], "blur": [10, 11, 12, 14, 15, 23, 24, 25, 26, 27, 28, 30], "kernel": [10, 11, 12, 14, 15], "gaussian": [10, 11, 12, 14, 15, 31, 32], "width": [10, 11, 12, 14, 15, 23, 24, 31], "sigma": [10, 11, 12, 14, 15, 31, 32], "depend": [10, 11, 12, 14, 15, 16, 17, 23, 24, 31], "point": [10, 11, 12, 14, 15, 17, 23, 24, 27, 31, 32], "initialize_network": [10, 11, 12, 13], "object_meta": [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 28, 29, 30, 31, 32], "image_meta": [10, 11, 12, 13, 19, 20, 21, 22, 28, 29, 30, 31, 32], "init": [10, 11, 12, 13], "compute_kernel_s": [10, 11, 12], "max_sigma": [10, 11, 12, 14, 15], "attribut": [10, 11, 12, 16, 18, 28], "determin": [10, 11, 12, 28, 31, 32], "encompass": [10, 11, 12], "least": [10, 11, 12, 14, 15, 28, 30], "get_sigma": [10, 11, 12], "radiu": [10, 11, 12, 28], "shape": [10, 11, 12, 14, 15, 16, 17, 23, 24, 28, 30, 31], "collimator_slop": [10, 11, 12, 14, 15, 25, 26, 29, 31, 32], "collimator_intercept": [10, 11, 12, 14, 15, 25, 26, 29, 31, 32], "meta": [10, 11, 12, 28], "assum": [10, 11, 12, 19, 20, 21, 27, 30], "transaxi": [10, 11, 12], "tupl": [10, 11, 12], "dimens": [10, 11, 12, 14, 15, 23, 24, 27, 28, 30, 31], "see": [10, 11, 12, 27, 28, 30, 31], "collim": [10, 11, 12, 14, 15, 29, 30, 31, 32], "intercept": [10, 11, 12, 14, 15, 29, 32], "slope": [10, 11, 12, 14, 15, 29, 32], "character": [10, 11, 12], "length": [10, 11, 12, 14, 15, 27, 30], "1st": [10, 11, 12], "situat": [10, 11, 12, 27], "get_psf_transform": 11, "kernel_s": 11, "kernel_dimens": [11, 14, 15], "2d": [11, 14, 15, 27, 29, 31], "12": [11, 27, 29, 30, 31, 32], "convolut": [11, 14, 15, 30], "layer": 11, "need": [11, 14, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "larg": [11, 27], "enough": [11, 23, 24], "cover": [11, 28], "most": [11, 28, 31], "9": [11, 29, 30, 31, 32], "whether": [11, 19, 21], "done": [11, 14, 15, 27, 28, 31], "independ": [11, 27], "slice": [11, 28, 29], "1d": [11, 14, 15, 30], "neural": 11, "conv2d": 11, "parent": [12, 13, 21, 22], "im2im": [12, 13], "obj2im": [12, 13], "dr": [14, 15, 28, 30, 31], "element": [14, 15, 23, 24, 27, 28, 30], "voxel": [14, 15, 16, 17, 23, 24, 27, 28, 30], "compute_padded_shap": [14, 15], "pad": [14, 15, 23, 24, 31], "rotat": [14, 15, 23, 24, 27, 31], "avoid": [14, 15], "anyth": [14, 15], "cut": [14, 15], "off": [14, 15, 28, 29, 30, 31, 32], "radial": [14, 15, 23, 24, 28], "onli": [14, 15, 19, 20, 21, 23, 24, 27, 28, 30], "certain": [14, 15, 19, 20, 21], "ad": [14, 15], "b": [14, 15, 27], "parallel": [14, 15, 23, 24, 27, 31], "sqrt": [14, 15, 29, 31], "pi": [14, 15, 27, 30], "r": [14, 15, 16, 17, 23, 24, 27, 28, 29, 30, 32], "spread": [14, 15, 23, 24], "dimensionless": [14, 15], "seper": [14, 15, 27, 31], "so": [14, 15, 17, 23, 24, 27, 28, 30, 31], "dimension": [14, 15, 27, 28, 30], "mix": [14, 15], "consid": [14, 15, 17, 27, 30], "whose": [14, 15], "extens": [14, 15], "infinit": [14, 15], "crop": [14, 15, 23, 24], "oper": [14, 15, 25, 26, 27, 28, 30], "numer": [14, 15], "depth": [14, 15], "constant": [14, 15, 19, 21, 23, 24, 27], "As": [14, 15, 25, 26, 27, 29, 32], "fix": [14, 15], "locat": [14, 15, 23, 24, 27, 29, 32], "have": [14, 15, 25, 26, 27, 28, 30, 31], "under": [16, 25], "modif": [16, 19, 21], "l": [16, 17, 18, 27, 31], "log": [16, 17, 18, 27, 29], "becom": [16, 27], "ln": [16, 17, 18, 27], "typic": [16, 27, 28, 29, 32], "ha": [16, 27, 29, 30, 32], "form": [16, 19, 20, 21, 27], "w_": [16, 17], "phi": [16, 17, 23, 24, 27], "f_": [16, 17, 27], "express": [16, 27, 29, 32], "neighbour": [16, 17], "weight": [16, 17, 18], "adjust": [16, 27, 28, 29, 32], "euclidean": [16, 23, 24], "set": [16, 18, 27, 29, 32], "uniti": [], "here": [17, 25, 26, 27, 31, 33], "those": [17, 27], "surround": 17, "sum": [17, 23, 24, 27, 28, 29, 30, 31, 32], "over": [16, 17, 27], "26": [17, 31], "quadraticprior": [16, 17], "smoothnessprior": [], "quadrat": [16, 17], "scale": [16, 17, 18, 27], "equat": [16, 17, 27], "abov": [16, 17, 19, 20, 21, 25, 26, 27, 28, 32], "logcoshprior": [16, 17], "tanh": [16, 17], "logcosh": [16, 17], "cosh": [16, 17], "relativedifferenceprior": [16, 17, 25, 26, 31, 32], "gamma": [16, 17, 25, 26, 31, 32], "diffandsumsmoothnessprior": [], "rel": [16, 17, 25, 26, 28, 31], "formula": [16, 17, 19, 20, 21], "gradient": [16, 17, 27], "diff": [], "ep": [], "hyperparamet": [], "posterior": [16, 17, 18, 27], "foward": [16, 18, 21, 22], "set_object_meta": [16, 18], "describ": [16, 18], "system": [16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32], "set_beta_scal": [16, 18], "factor": [16, 18, 19, 21, 27, 29, 32], "set_object": [16, 18], "set_devic": [], "self": [16, 17, 18, 20, 21, 31], "kwarg": [16, 17], "get_kernel": [], "sign": [], "same": [23, 24, 27, 28, 30, 31], "cdot": [31, 32], "f_k": [], "nearest": [16, 17, 31], "k": [], "3d": [27, 28, 29, 30, 31, 32], "channel": [], "conv3d": [], "set_kernel": [], "obj2obj_net": [19, 20, 21, 22, 28, 29, 30, 32], "im2im_net": [19, 20, 21, 22, 28, 29, 30, 32], "projectionnet": [19, 20, 21, 22], "mathemat": [19, 20, 21, 25, 28], "f_j": [19, 21, 27], "phenonemon": [19, 20, 21], "g": [19, 20, 21, 27, 29, 30, 32], "angle_subset": [19, 20, 21], "return_norm_const": [19, 21], "p_i": [19, 21], "divid": [19, 21], "result": [19, 21], "initialize_correction_net": [21, 22], "rev_cumsum": [23, 24], "revers": [23, 24, 27], "cumul": [23, 24], "rotate_detector_z": [23, 24], "interpol": [23, 24], "interpolationmod": [23, 24], "bilinear": [23, 24], "neg": [23, 24, 27], "refer": [23, 24, 25, 27], "frame": [23, 24], "eta": [23, 24], "relat": [23, 24], "azimuth": [23, 24, 27], "3pi": [23, 24], "cartesian": [23, 24, 27], "coordin": [23, 24, 25, 28], "manual": [23, 24, 25, 28, 29, 32], "true": [23, 24, 29, 30, 31], "invers": [23, 24], "origin": [23, 24, 30, 31], "get_dist": [23, 24], "center": [23, 24, 30], "y": [23, 24, 27, 28, 30, 31], "z": [23, 24, 27, 30, 31, 32], "amount": [23, 24, 27, 28], "thedist": [23, 24], "central": [23, 24], "compute_pad_s": [23, 24], "subsequ": [23, 24], "retain": [23, 24], "entir": [23, 24, 27], "side": [23, 24], "compute_pad_size_pad": 23, "pad_object": [23, 24], "mode": [23, 24, 27, 31], "xy": [23, 24], "don": [23, 24, 27], "out": [23, 24, 25, 28], "unpad_object": [23, 24], "unpad": [23, 24], "pad_imag": [23, 24], "fill": [23, 24], "unpad_imag": [23, 24], "pad_object_z": [23, 24], "pad_siz": [23, 24], "unpad_object_z": [23, 24], "direcion": [23, 24], "flexibl": [25, 26], "high": [25, 26], "python": [25, 26], "packag": [25, 26], "medic": 27, "draw": [], "heavili": [], "class": [25, 26, 27, 29, 30, 31], "permit": [], "fast": [25, 26], "gpu": [25, 26], "acceler": [25, 26], "main": [], "purpos": [28, 31], "ii": 28, "develop": [25, 26], "novel": [25, 26, 27], "osem_net": [25, 26, 28, 29, 31, 32], "body1t2ew6_tot_w2": [25, 26, 32], "hdr": [25, 26, 31, 32], "body1t2ew6_tot_w1": [25, 26, 32], "body1t2ew6_tot_w3": [25, 26, 32], "body1": [25, 26, 31, 32], "hct": [25, 26, 28, 31, 32], "03013": [25, 26, 31, 32], "1967": [25, 26, 31, 32], "reconstructed_object": [25, 26, 28, 29, 31, 32], "10": [25, 26, 27, 28, 29, 30, 31, 32], "8": [16, 17, 25, 26, 27, 28, 29, 30, 31, 32], "intens": [25, 26, 30, 31, 32], "shown": [25, 26], "below": [25, 26, 29, 32], "librari": [25, 26, 28], "local": [25, 26], "recommend": [25, 26, 28, 31], "virtual": [25, 26], "environ": [25, 26], "anaconda": [25, 26], "conda": [25, 26], "name": [25, 26, 27, 28, 31, 33], "version": [25, 26, 30], "insid": [25, 26, 28, 31], "final": [25, 26, 31], "command": [25, 26], "pip": [25, 26], "Be": 25, "sure": [25, 31], "check": [25, 28], "tutori": [25, 27, 28, 31], "simpl": [25, 27], "heavi": 25, "convent": [25, 28, 31], "foundat": [25, 30], "api": [25, 27], "subpackag": 25, "import": [27, 28, 29, 30, 31, 32], "sy": 28, "append": [28, 31], "home": [28, 29, 31, 32], "gpuvmadm": [28, 29, 31, 32], "src": 28, "numpi": [28, 29, 30, 31, 32], "matplotlib": [28, 29, 30, 31, 32], "pyplot": [28, 29, 30, 31, 32], "plt": [28, 29, 30, 31, 32], "cuda": [28, 29, 31, 32], "is_avail": [28, 29, 31, 32], "els": [28, 29, 31, 32], "test_fil": [29, 31, 32], "quantit": [25, 26, 28, 32, 33], "plot": [27, 28, 29, 31, 32], "subplot": [28, 29, 30, 31, 32], "figsiz": [28, 29, 30, 31, 32], "121": [28, 29, 31, 32], "pcolormesh": [28, 29, 30, 31, 32], "max": [31, 32], "cmap": [28, 29, 30, 31, 32], "nipy_spectr": [28, 29, 31, 32], "colorbar": [28, 29, 30, 31, 32], "122": [28, 29, 31, 32], "savefig": [], "sample_mip": [], "png": [], "dpi": [], "300": [], "transpar": 30, "our": [27, 28, 29, 30, 31, 32], "choic": 27, "standard": [27, 31], "patient": [27, 28], "anterior": 27, "inferior": 27, "superior": 27, "posit": 27, "counterclockwis": 27, "o": [27, 28, 29, 30, 31, 32], "clock": 27, "rang": [27, 29], "There": 27, "item": [27, 31], "sinogram": [27, 29, 32], "seri": 27, "impli": 27, "90": [27, 28, 29, 32], "circ": [27, 29, 32], "counterintuit": 27, "view": [27, 28, 29, 32], "store": [27, 28, 31], "l_x": 27, "l_y": 27, "l_z": 27, "l_": 27, "theta": [27, 29, 32], "batch": [27, 28, 30, 31], "also": [25, 26, 27, 28, 29, 30, 31, 32], "taken": [27, 29, 30, 31], "give": [27, 28, 31], "correpsond": 27, "arrang": 27, "smaller": 27, "object_tensor": 27, "largest": 27, "smallest": 27, "anoth": 27, "image_tensor": 27, "10th": 27, "configur": [27, 28], "softwar": 27, "properli": 27, "ax": [27, 28, 30, 31], "your": [27, 28, 31], "own": [27, 28, 31], "achiev": 27, "through": [27, 30], "combin": [27, 28], "transpos": [27, 31], "invert": 27, "horizont": [27, 28], "vertic": 27, "section": 27, "unless": 27, "otherwis": 27, "spcifi": 27, "symbol": 27, "h": [27, 29, 31, 32], "h_": 27, "ji": 27, "compon": [27, 29, 32], "quantifi": 27, "four": 27, "previou": 27, "never": 27, "explicitli": [27, 29, 31, 32], "veri": [27, 30, 31], "trick": 27, "simul": [25, 26, 27, 30, 31], "without": [27, 28], "actual": [27, 30, 31], "establish": 27, "paradigm": 27, "tomographi": [25, 26, 27], "thu": [27, 31], "mostli": 27, "intend": 27, "who": 27, "wish": [27, 32], "howev": [27, 30], "everyon": 27, "know": [27, 31], "around": 27, "fundament": 27, "someth": 27, "mathbb": 27, "u": [27, 28], "vec": 27, "worth": [27, 30], "physic": 27, "quantiti": [27, 30], "doe": [27, 30], "128x128x128": [27, 30], "64": [27, 28, 30, 31], "resolut": [27, 29], "128x128": [27, 30], "vector": [27, 30], "2097152": [27, 30], "1048576": [27, 30], "byte": 27, "17": [27, 29, 31], "6tb": 27, "harddriv": 27, "fortun": 27, "spars": 27, "memori": 27, "effici": [27, 31], "format": [27, 29, 32], "non": 27, "squar": [27, 31], "practic": [27, 29, 32], "matric": 27, "b_i": 27, "singl": [25, 26, 27, 29, 30], "p": [27, 29, 32], "exist": 27, "phenonema": 27, "while": 27, "phenomena": 27, "pet": 27, "peculiar": 27, "featur": 27, "choos": [27, 28], "g_": 27, "otim": [27, 29, 32], "hat": [27, 29, 30, 32], "specif": [27, 28], "do": [27, 28, 29, 30, 31], "lie": 27, "prod_i": 27, "To": [27, 28, 31], "written": [27, 31], "prod_": 27, "a_1": [27, 29, 32], "a_2": [27, 29, 32], "sai": 27, "materi": 27, "travel": 27, "reach": 27, "circular": 27, "orbit": 27, "togeth": 27, "direct": [27, 30], "turn": [27, 30], "net": [27, 28, 29, 31, 32], "b_1": 27, "b_2": 27, "unlik": [27, 28, 31], "due": [27, 30], "fact": 27, "lor": 27, "mani": [27, 30], "predefin": 27, "folder": [27, 29, 32, 33], "insert": 27, "show": [27, 28, 29, 31, 32], "how": [27, 28, 30, 31], "TO": 27, "make": [25, 26, 27, 30, 31], "realtiti": 27, "henc": [27, 31], "random": 27, "determinist": 27, "addit": 27, "simplic": 27, "ll": [27, 28, 29, 30, 31, 32], "let": [27, 30, 31], "mean": [27, 29, 30, 31], "write": 27, "known": [27, 30, 31, 32], "poisson": 27, "hold": 27, "emiss": [25, 26, 27, 29], "radionuclid": [27, 29], "spatial": 27, "interv": 27, "befor": [21, 22, 27, 28, 30], "begin": 27, "deriv": 27, "new": [27, 28, 30], "denot": 27, "count": [27, 28, 29, 31, 32], "sim": 27, "now": [27, 28, 29, 30, 31, 32], "seek": 27, "solut": 27, "densiti": 27, "prod_j": 27, "end": 27, "nabla_": 27, "yield": [27, 30], "realiti": [27, 30], "bar": 27, "techniqu": [27, 28, 30], "work": [27, 28], "e_": 27, "understand": [27, 28], "interpret": 27, "about": [27, 28], "like": [27, 28, 30], "just": [27, 28], "question": 27, "e_f": 27, "claim": 27, "hf": [27, 29, 32], "_j": [27, 30], "why": 27, "becaus": [27, 30, 31], "re": [27, 28, 30, 31], "ensur": [27, 28, 29, 32], "add": [27, 28, 30], "up": 27, "substitut": 27, "rewrit": 27, "lh": 27, "better": 27, "box": 27, "basic": 27, "mlem": 27, "more": [27, 28], "converg": 27, "save": [27, 29, 31, 32], "cost": 27, "small": 27, "distinct": 27, "theta_0": 27, "theta_": 27, "g_m": 27, "theta_m": 27, "h_m": 27, "h_mf": 27, "cycl": 27, "move": 27, "current": 27, "plan": 27, "futur": 27, "involv": [27, 30], "modififi": 27, "denomin": 27, "s_m": 27, "encapsul": 27, "belief": 27, "reason": [27, 30], "adjac": 27, "similar": [27, 32], "radiopharmaceut": 27, "concentr": [27, 28], "modifi": [27, 29, 31, 32], "strength": 27, "temperatur": 27, "mechan": 27, "problem": 27, "few": 27, "approach": 27, "solv": 27, "issu": 27, "osl": 27, "formal": 27, "bsr": 27, "raw": [29, 32], "julia_phantom": 29, "cylinder_0103": 29, "join": [28, 29, 31, 32], "holmium": 29, "166_zylinder_03_01_2023": 29, "nm": 29, "1000": 29, "2023": 29, "01": [29, 31], "25": [29, 31], "34": [28, 29], "968750": 29, "4872276": 29, "ima": 29, "listdir": 29, "74": 29, "93": 29, "87": 29, "07": 29, "kev": 29, "convers": [29, 31], "hounsfield": 29, "linear": [29, 30, 31], "77": 29, "5kev": 29, "And": [28, 29], "desir": [28, 29], "figur": [29, 30, 31], "70": [29, 32], "titl": [29, 31, 32], "mew": 29, "projections_scatt": [29, 31, 32], "load": [28, 29, 31, 32], "automat": 29, "tabl": 29, "csv": 29, "http": 29, "www": 29, "sciencedirect": 29, "com": [28, 29], "scienc": 29, "articl": 29, "pii": 29, "s0969804308000067": 29, "7": [29, 30, 31, 32], "usual": [28, 29, 32], "alwai": 29, "good": [29, 32], "14": [29, 31, 32], "141": [28, 29, 32], "greys_r": [28, 29, 30, 32], "coron": [28, 29, 32], "142": [28, 29, 32], "143": [28, 29, 32], "sagitt": [29, 32], "144": [28, 29, 32], "30": [28, 29, 32], "ct_net": [28, 29, 31, 32], "unsqueez": [28, 29, 30, 31, 32], "dim": [28, 29, 30, 31, 32], "angular": [29, 30], "approxim": [29, 32], "read_fil": 29, "angular_fwhm": 29, "0x0055": 29, "0x107f": 29, "psf_net": [29, 31, 32], "build": [28, 29, 31, 32], "fp_net": [28, 29, 30, 31, 32], "bp_net": [28, 29, 30, 31, 32], "fp": [29, 32], "bp": [29, 32], "13": [29, 31, 32], "proportion": [29, 32], "mbq": [29, 31, 32], "mu": [29, 32], "tool": [28, 30], "discuss": 30, "arbtriari": 30, "arbitrari": 30, "might": 30, "think": [30, 31], "three": 30, "shouldn": 30, "discret": 30, "albeit": 30, "long": [30, 31], "That": 30, "said": 30, "thought": 30, "individu": 30, "everi": 30, "possibl": 30, "experi": 30, "rectangl": 30, "linspac": 30, "128": [28, 30, 31, 32], "132": [30, 31], "xv": 30, "yv": 30, "zv": 30, "meshgrid": 30, "object_truth": 30, "15": [28, 29, 30, 31, 32], "lt": [28, 30], "0x7f9692bdac40": [], "gt": [28, 30, 31], "1cm": 30, "60": 30, "degre": [28, 30], "arang": 30, "360": 30, "With": [28, 30], "mickei": 30, "mous": 30, "fig": [28, 30, 31], "proj": [28, 30], "enumer": [28, 30], "20": [28, 30, 31], "set_titl": [28, 30, 31], "At": 30, "cube": 30, "darkest": 30, "lighter": 30, "outsid": 30, "semi": 30, "real": 30, "life": 30, "go": [30, 31], "object_new": 30, "But": [28, 30], "0x7f965df532b0": [], "been": 30, "height": 30, "z_0": 30, "mathcal": 30, "omega": 30, "bracket": 30, "fourier": 30, "ramp": 30, "freq_fft": 30, "fft": 30, "fftfreq": 30, "ab": [30, 31], "reshap": [30, 31], "image_fft": 30, "image_filt": 30, "ifft": 30, "22": 31, "object_fbp": 30, "23": 31, "0x7f965da15f10": [], "longer": 30, "artifact": 30, "present": 30, "explor": 31, "scratch": [28, 31, 32], "introduct": [28, 31], "architectur": [28, 31], "quick": [28, 31], "get_osem_net": [28, 31], "quickli": [28, 31], "scipi": 31, "ndimag": 31, "zoom": 31, "firstli": 31, "fromfil": 31, "body1_lu177_t2": 31, "bin": 31, "196870144": 31, "751x512x512": 31, "751": 31, "512": [28, 31], "opposit": [28, 31], "constitut": 31, "ml": 31, "short": 31, "moment": 31, "activ": 31, "organ": 31, "mask": 31, "well": 31, "than": 31, "512x512x751": 31, "shortli": 31, "128x128x384": 31, "algin": 31, "resiz": 31, "precis": 31, "lesion": 31, "easi": 31, "bkg": 31, "0146": 31, "0333": 31, "lung": 31, "rkidcor": 31, "521": 31, "lkidcor": 31, "504": 31, "rkidmel": 31, "287": 31, "lkidmel": 31, "21": 31, "sal": 31, "338": 31, "bla": 31, "0371": 31, "le": 31, "def": 31, "get_mask": 31, "arr": 31, "val": 31, "pct": 31, "100": 31, "767": 31, "copi": 31, "allow": [29, 31, 32], "me": 31, "region": 31, "pm": 31, "liver_mask": 31, "384": [31, 32], "0735mbq": 31, "wai": 31, "tempt": 31, "1bq": 31, "per": 31, "far": 31, "undetect": 31, "regardless": 31, "empir": 31, "calibt": 31, "pointcalib1": 31, "total_count": 31, "dv": 31, "1700mbq": 31, "cp": 31, "cps_to_mbqperml": 31, "1700": 31, "21089022221130554": 31, "multipli": 31, "improv": 31, "later": [28, 31], "opt": 31, "return_seper": 31, "header_fil": 31, "body1t2ew6_tot_w": 31, "photopeak": 31, "tmp": 31, "ipykernel_14439": [], "2933345111": 31, "py": [28, 31], "matplotlibdeprecationwarn": 31, "remov": 31, "overlap": 31, "deprec": 31, "minor": 31, "releas": 31, "16": [28, 29, 31, 32], "correctionnet": 31, "assumpt": 31, "nbsphinx": 31, "These": [29, 31, 32], "found": 31, "sheet": 31, "fit": [31, 32], "profil": [31, 32], "18": 31, "qclear": 31, "19": 31, "rdp": 31, "wonder": 31, "instanc": 31, "pass": [16, 17, 31, 32], "comparetogroundtruth": 31, "bias": 31, "biass": 31, "var": 31, "dictionari": 31, "task": 31, "whatev": 31, "exercis": 31, "lowest": 31, "error": 31, "activity_dict": 31, "calibration_factor": 31, "organ_kei": 31, "kei": 31, "mask_dict": 31, "obj_cal": 31, "autom": 31, "process": 31, "reconstruct_object": 31, "object_correction_net": 31, "image_correction_net": 31, "stats_gener": 31, "stats_qclear": 31, "reconstructed_object_qclear": 31, "visual": 31, "mip": 31, "24": 31, "o1": 31, "o2": 31, "gt_resiz": 31, "131": 31, "vmax": 31, "133": 31, "code": [25, 26, 31], "plot_bvc": 31, "color": 31, "label": 31, "marker": 31, "markers": 31, "lw": 31, "title_dict": 31, "background": 31, "kidnei": 31, "cortex": 31, "medulla": 31, "salivari": 31, "gland": 31, "bladder": 31, "zip": 31, "ravel": 31, "blue": 31, "green": 31, "red": 31, "grid": 31, "tick_param": 31, "major": 31, "labels": 31, "both": 31, "legend": 31, "facecolor": 31, "white": 31, "framealpha": 31, "frameon": 31, "loc": 31, "add_subplot": 31, "111": 31, "labelcolor": 31, "top": 31, "bottom": 31, "xlabel": 31, "fontsiz": 31, "ylabel": 31, "deviat": 31, "tight_layout": 31, "appear": 31, "signific": 31, "medium": 31, "datafil": 28, "mont": [25, 26, 28], "carlo": [25, 26, 28], "program": 28, "proper": 28, "produc": 28, "15cm": 28, "awai": 28, "filepath": 28, "xcatwb_tot_w2": 28, "h00": 28, "tell": 28, "128x512": 28, "respect": 28, "40": 28, "construct": 28, "47950000762939454": 28, "osemnet": 28, "phenomenon": [28, 32], "won": 28, "focu": 28, "common": 28, "ones": 28, "exact": 28, "initial_guess": 28, "notic": 28, "front": 28, "even": 28, "though": 28, "extra": 28, "everyth": 28, "encorpor": 28, "sagit": 28, "xcat_wb": 28, "rememb": 28, "eachoth": 28, "Then": 28, "predict": 28, "much": 28, "higher": 28, "bone": 28, "filter": 33, "read": [], "analysi": 33, "importerror": 28, "traceback": 28, "recent": 28, "last": 28, "doc": 28, "notebook": 28, "t_siminddata": 28, "ipynb": 28, "cell": 28, "href": 28, "39": 28, "vscode": 28, "ssh": 28, "remot": 28, "2bgpuvm00004jhubvm01": 28, "canadacentr": 28, "cloudapp": 28, "azur": 28, "w4sdnnjb2rllxjlbw90zq": 28, "cannot": 28, "nameerror": 28, "x10sdnnjb2rllxjlbw90zq": 28, "conveni": [29, 32], "ipykernel_6360": [], "binari": 32, "collect": 32, "recontruct": 32, "isn": 32, "fashion": 32, "vari": 32, "surfac": 32, "baysian": 32, "download": [29, 32, 33], "directori": [29, 32], "0x7ff7fde43cd0": 30, "0x7ff7f8333eb0": 30, "0x7ff7f8290610": 30, "ipykernel_9547": 31, "match": 33, "nearest_neighbour": [0, 5, 16], "nearestneighbourprior": [16, 17], "summat": [16, 17], "epsilon": [16, 17], "08": [16, 17], "3f_": [16, 17], "get_object_nearest_neighbour": [23, 24], "shift": [23, 24], "reg": [25, 26], "aim": [25, 26], "xcat": [25, 26], "phantom": [25, 26], "enabl": [25, 26], "nearbi": 16, "directli": 17, "occur": [21, 22]}, "objects": {"": [[5, 0, 0, "-", "pytomography"]], "pytomography": [[1, 0, 0, "-", "algorithms"], [4, 0, 0, "-", "callbacks"], [5, 3, 1, "", "device"], [7, 0, 0, "-", "io"], [12, 0, 0, "-", "mappings"], [14, 0, 0, "-", "metadata"], [16, 0, 0, "-", "priors"], [21, 0, 0, "-", "projections"], [24, 0, 0, "-", "utils"]], "pytomography.algorithms": [[1, 1, 1, "", "OSEMBSR"], [1, 1, 1, "", "OSEMOSL"], [1, 1, 1, "", "OSML"], [2, 0, 0, "-", "osem"]], "pytomography.algorithms.OSEMBSR": [[1, 2, 1, "", "forward"]], "pytomography.algorithms.OSEMOSL": [[1, 2, 1, "", "forward"]], "pytomography.algorithms.OSML": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "get_subset_splits"]], "pytomography.algorithms.osem": [[2, 1, 1, "", "OSEMBSR"], [2, 1, 1, "", "OSEMOSL"], [2, 1, 1, "", "OSML"]], "pytomography.algorithms.osem.OSEMBSR": [[2, 2, 1, "", "forward"]], "pytomography.algorithms.osem.OSEMOSL": [[2, 2, 1, "", "forward"]], "pytomography.algorithms.osem.OSML": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "get_subset_splits"]], "pytomography.callbacks": [[4, 1, 1, "", "CallBack"], [3, 0, 0, "-", "callback"]], "pytomography.callbacks.CallBack": [[4, 2, 1, "", "run"]], "pytomography.callbacks.callback": [[3, 1, 1, "", "CallBack"]], "pytomography.callbacks.callback.CallBack": [[3, 2, 1, "", "run"]], "pytomography.io": [[6, 0, 0, "-", "dicom"], [7, 4, 1, "", "dicom_CT_to_data"], [7, 4, 1, "", "dicom_MEW_to_data"], [7, 4, 1, "", "dicom_projections_to_data"], [7, 4, 1, "", "get_SPECT_recon_algorithm_dicom"], [7, 4, 1, "", "get_SPECT_recon_algorithm_simind"], [8, 0, 0, "-", "simind"], [7, 4, 1, "", "simind_CT_to_data"], [7, 4, 1, "", "simind_MEW_to_data"], [7, 4, 1, "", "simind_projections_to_data"]], "pytomography.io.dicom": [[6, 4, 1, "", "HU_to_mu"], [6, 4, 1, "", "dicom_CT_to_data"], [6, 4, 1, "", "dicom_MEW_to_data"], [6, 4, 1, "", "dicom_projections_to_data"], [6, 4, 1, "", "get_HU2mu_coefficients"], [6, 4, 1, "", "get_SPECT_recon_algorithm_dicom"], [6, 4, 1, "", "get_affine_CT"], [6, 4, 1, "", "get_affine_spect"], [6, 4, 1, "", "get_radii_and_angles"]], "pytomography.io.simind": [[8, 4, 1, "", "find_first_entry_containing_header"], [8, 4, 1, "", "get_SPECT_recon_algorithm_simind"], [8, 3, 1, "", "relation_dict"], [8, 4, 1, "", "simind_CT_to_data"], [8, 4, 1, "", "simind_MEW_to_data"], [8, 4, 1, "", "simind_projections_to_data"]], "pytomography.mappings": [[12, 1, 1, "", "MapNet"], [10, 0, 0, "-", "SPECT"], [12, 1, 1, "", "SPECTAttenuationNet"], [12, 1, 1, "", "SPECTPSFNet"], [13, 0, 0, "-", "mapping"]], "pytomography.mappings.MapNet": [[12, 2, 1, "", "forward"], [12, 2, 1, "", "initialize_network"]], "pytomography.mappings.SPECT": [[10, 1, 1, "", "SPECTAttenuationNet"], [10, 1, 1, "", "SPECTPSFNet"], [9, 0, 0, "-", "atteunation"], [11, 0, 0, "-", "psf"]], "pytomography.mappings.SPECT.SPECTAttenuationNet": [[10, 2, 1, "", "forward"]], "pytomography.mappings.SPECT.SPECTPSFNet": [[10, 2, 1, "", "compute_kernel_size"], [10, 2, 1, "", "forward"], [10, 2, 1, "", "get_sigma"], [10, 2, 1, "", "initialize_network"]], "pytomography.mappings.SPECT.atteunation": [[9, 1, 1, "", "SPECTAttenuationNet"], [9, 4, 1, "", "get_prob_of_detection_matrix"]], "pytomography.mappings.SPECT.atteunation.SPECTAttenuationNet": [[9, 2, 1, "", "forward"]], "pytomography.mappings.SPECT.psf": [[11, 1, 1, "", "SPECTPSFNet"], [11, 4, 1, "", "get_PSF_transform"]], "pytomography.mappings.SPECT.psf.SPECTPSFNet": [[11, 2, 1, "", "compute_kernel_size"], [11, 2, 1, "", "forward"], [11, 2, 1, "", "get_sigma"], [11, 2, 1, "", "initialize_network"]], "pytomography.mappings.SPECTAttenuationNet": [[12, 2, 1, "", "forward"]], "pytomography.mappings.SPECTPSFNet": [[12, 2, 1, "", "compute_kernel_size"], [12, 2, 1, "", "forward"], [12, 2, 1, "", "get_sigma"], [12, 2, 1, "", "initialize_network"]], "pytomography.mappings.mapping": [[13, 1, 1, "", "MapNet"]], "pytomography.mappings.mapping.MapNet": [[13, 2, 1, "", "forward"], [13, 2, 1, "", "initialize_network"]], "pytomography.metadata": [[14, 1, 1, "", "ImageMeta"], [14, 1, 1, "", "ObjectMeta"], [14, 1, 1, "", "PSFMeta"], [15, 0, 0, "-", "metadata"]], "pytomography.metadata.ImageMeta": [[14, 2, 1, "", "compute_padded_shape"]], "pytomography.metadata.ObjectMeta": [[14, 2, 1, "", "compute_padded_shape"]], "pytomography.metadata.metadata": [[15, 1, 1, "", "ImageMeta"], [15, 1, 1, "", "ObjectMeta"], [15, 1, 1, "", "PSFMeta"]], "pytomography.metadata.metadata.ImageMeta": [[15, 2, 1, "", "compute_padded_shape"]], "pytomography.metadata.metadata.ObjectMeta": [[15, 2, 1, "", "compute_padded_shape"]], "pytomography.priors": [[16, 1, 1, "", "LogCoshPrior"], [16, 1, 1, "", "NearestNeighbourPrior"], [16, 1, 1, "", "Prior"], [16, 1, 1, "", "QuadraticPrior"], [16, 1, 1, "", "RelativeDifferencePrior"], [17, 0, 0, "-", "nearest_neighbour"], [18, 0, 0, "-", "prior"]], "pytomography.priors.NearestNeighbourPrior": [[16, 2, 1, "", "forward"]], "pytomography.priors.Prior": [[16, 2, 1, "", "forward"], [16, 2, 1, "", "set_beta_scale"], [16, 2, 1, "", "set_object"], [16, 2, 1, "", "set_object_meta"]], "pytomography.priors.nearest_neighbour": [[17, 1, 1, "", "LogCoshPrior"], [17, 1, 1, "", "NearestNeighbourPrior"], [17, 1, 1, "", "QuadraticPrior"], [17, 1, 1, "", "RelativeDifferencePrior"]], "pytomography.priors.nearest_neighbour.NearestNeighbourPrior": [[17, 2, 1, "", "forward"]], "pytomography.priors.prior": [[18, 1, 1, "", "Prior"]], "pytomography.priors.prior.Prior": [[18, 2, 1, "", "forward"], [18, 2, 1, "", "set_beta_scale"], [18, 2, 1, "", "set_object"], [18, 2, 1, "", "set_object_meta"]], "pytomography.projections": [[21, 1, 1, "", "BackProjectionNet"], [21, 1, 1, "", "ForwardProjectionNet"], [21, 1, 1, "", "ProjectionNet"], [19, 0, 0, "-", "back_projection"], [20, 0, 0, "-", "forward_projection"], [22, 0, 0, "-", "projection"]], "pytomography.projections.BackProjectionNet": [[21, 2, 1, "", "forward"]], "pytomography.projections.ForwardProjectionNet": [[21, 2, 1, "", "forward"]], "pytomography.projections.ProjectionNet": [[21, 2, 1, "", "foward"], [21, 2, 1, "", "initialize_correction_nets"]], "pytomography.projections.back_projection": [[19, 1, 1, "", "BackProjectionNet"]], "pytomography.projections.back_projection.BackProjectionNet": [[19, 2, 1, "", "forward"]], "pytomography.projections.forward_projection": [[20, 1, 1, "", "ForwardProjectionNet"]], "pytomography.projections.forward_projection.ForwardProjectionNet": [[20, 2, 1, "", "forward"]], "pytomography.projections.projection": [[22, 1, 1, "", "ProjectionNet"]], "pytomography.projections.projection.ProjectionNet": [[22, 2, 1, "", "foward"], [22, 2, 1, "", "initialize_correction_nets"]], "pytomography.utils": [[24, 4, 1, "", "compute_pad_size"], [24, 4, 1, "", "get_distance"], [24, 4, 1, "", "get_object_nearest_neighbour"], [23, 0, 0, "-", "helper_functions"], [24, 4, 1, "", "pad_image"], [24, 4, 1, "", "pad_object"], [24, 4, 1, "", "pad_object_z"], [24, 4, 1, "", "rev_cumsum"], [24, 4, 1, "", "rotate_detector_z"], [24, 4, 1, "", "unpad_image"], [24, 4, 1, "", "unpad_object"], [24, 4, 1, "", "unpad_object_z"]], "pytomography.utils.helper_functions": [[23, 4, 1, "", "compute_pad_size"], [23, 4, 1, "", "compute_pad_size_padded"], [23, 4, 1, "", "get_distance"], [23, 4, 1, "", "get_object_nearest_neighbour"], [23, 4, 1, "", "pad_image"], [23, 4, 1, "", "pad_object"], [23, 4, 1, "", "pad_object_z"], [23, 4, 1, "", "rev_cumsum"], [23, 4, 1, "", "rotate_detector_z"], [23, 4, 1, "", "unpad_image"], [23, 4, 1, "", "unpad_object"], [23, 4, 1, "", "unpad_object_z"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "pytomographi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "algorithm": [1, 2, 27], "submodul": [1, 4, 7, 10, 12, 14, 16, 21, 24], "packag": [1, 4, 5, 7, 10, 12, 14, 16, 21, 24], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "class": [1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "osem": 2, "modul": [2, 3, 6, 8, 9, 11, 13, 15, 17, 18, 19, 20, 22, 23], "callback": [3, 4], "subpackag": [5, 12], "io": [6, 7, 8], "dicom": [6, 29], "function": [6, 7, 8, 9, 11, 23, 24], "simind": [8, 28, 32], "attribut": 8, "map": [9, 10, 11, 12, 13, 27], "spect": [9, 10, 11, 25, 26, 31], "atteun": 9, "psf": 11, "metadata": [14, 15], "prior": [16, 17, 18, 27], "relative_differ": [], "smooth": [], "project": [19, 20, 21, 22, 27, 30], "back_project": 19, "forward_project": 20, "util": [23, 24], "helper_funct": 23, "instal": [25, 26], "introduct": [], "manual": 27, "convent": 27, "coordin": 27, "arrai": 27, "mathemat": 27, "foundat": 27, "reconstruct": [25, 26, 27, 28, 29, 31, 32], "scatter": 27, "data": [28, 29, 31, 32], "The": [29, 31, 32], "quick": [29, 32], "wai": [29, 32], "method": [29, 32], "implement": 30, "filter": 30, "back": 30, "quantit": 31, "analysi": 31, "part": 31, "1": 31, "set": 31, "up": 31, "phantom": 31, "2": 31, "get": 31, "calibr": 31, "factor": 31, "3": 31, "read": [], "basic": 28, "ad": 28, "attenu": 28, "correct": 28, "tutori": 33, "nearest_neighbour": 17, "object": [25, 26], "current": [25, 26], "support": [25, 26], "medic": [25, 26], "imag": [25, 26], "modal": [25, 26], "exampl": [25, 26]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Manual": [[27, "Manual"]], "Conventions": [[27, "Conventions"]], "Coordinates": [[27, "Coordinates"]], "Arrays": [[27, "Arrays"]], "Mathematics": [[27, "Mathematics"]], "Mathematical Foundations": [[27, "Mathematical-Foundations"]], "Projections": [[27, "Projections"]], "Mappings": [[27, "Mappings"]], "Reconstruction Algorithms": [[27, "Reconstruction-Algorithms"]], "Scatter": [[27, "Scatter"]], "Priors": [[27, "Priors"]], "Reconstructing Simind Data": [[28, "Reconstructing-Simind-Data"]], "Basic Reconstruction": [[28, "Basic-Reconstruction"]], "Adding Attenuation Correction": [[28, "Adding-Attenuation-Correction"]], "Reconstructing DICOM data": [[29, "Reconstructing-DICOM-data"]], "The Quick Way": [[29, "The-Quick-Way"], [32, "The-Quick-Way"]], "The Methodical Way": [[29, "The-Methodical-Way"], [32, "The-Methodical-Way"]], "Implementing Filtered Back Projection": [[30, "Implementing-Filtered-Back-Projection"]], "Quantitative Analysis": [[31, "Quantitative-Analysis"]], "Part 1: Setting Up The Phantom": [[31, "Part-1:-Setting-Up-The-Phantom"]], "Part 2: Getting The Calibration Factor": [[31, "Part-2:-Getting-The-Calibration-Factor"]], "Part 3: Reconstructing SPECT Data": [[31, "Part-3:-Reconstructing-SPECT-Data"]], "Reconstructing SIMIND Data": [[32, "Reconstructing-SIMIND-Data"]], "Tutorials": [[33, "tutorials"]], "PyTomography": [[25, "pytomography"], [26, "pytomography"]], "Objectives": [[25, "objectives"], [26, "objectives"]], "Currently supported medical imaging modalities": [[25, "currently-supported-medical-imaging-modalities"], [26, "currently-supported-medical-imaging-modalities"]], "SPECT reconstruction example": [[25, "spect-reconstruction-example"], [26, "spect-reconstruction-example"]], "Installation": [[25, "installation"], [26, "installation"]], "Contents:": [[25, null]], "API Reference": [[0, "api-reference"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "Submodules": [[1, "submodules"], [4, "submodules"], [7, "submodules"], [10, "submodules"], [12, "submodules"], [14, "submodules"], [16, "submodules"], [21, "submodules"], [24, "submodules"]], "Package Contents": [[1, "package-contents"], [4, "package-contents"], [5, "package-contents"], [7, "package-contents"], [10, "package-contents"], [12, "package-contents"], [14, "package-contents"], [16, "package-contents"], [21, "package-contents"], [24, "package-contents"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"]], "pytomography.callbacks.callback": [[3, "module-pytomography.callbacks.callback"]], "pytomography.callbacks": [[4, "module-pytomography.callbacks"]], "pytomography": [[5, "module-pytomography"]], "Subpackages": [[5, "subpackages"], [12, "subpackages"]], "pytomography.io.dicom": [[6, "module-pytomography.io.dicom"]], "Functions": [[6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [11, "functions"], [23, "functions"], [24, "functions"]], "pytomography.io": [[7, "module-pytomography.io"]], "pytomography.io.simind": [[8, "module-pytomography.io.simind"]], "Attributes": [[8, "attributes"]], "pytomography.mappings.SPECT.atteunation": [[9, "module-pytomography.mappings.SPECT.atteunation"]], "pytomography.mappings.SPECT": [[10, "module-pytomography.mappings.SPECT"]], "pytomography.mappings.SPECT.psf": [[11, "module-pytomography.mappings.SPECT.psf"]], "pytomography.mappings": [[12, "module-pytomography.mappings"]], "pytomography.mappings.mapping": [[13, "module-pytomography.mappings.mapping"]], "pytomography.metadata": [[14, "module-pytomography.metadata"]], "pytomography.metadata.metadata": [[15, "module-pytomography.metadata.metadata"]], "pytomography.priors": [[16, "module-pytomography.priors"]], "pytomography.priors.nearest_neighbour": [[17, "module-pytomography.priors.nearest_neighbour"]], "pytomography.priors.prior": [[18, "module-pytomography.priors.prior"]], "pytomography.projections.back_projection": [[19, "module-pytomography.projections.back_projection"]], "pytomography.projections.forward_projection": [[20, "module-pytomography.projections.forward_projection"]], "pytomography.projections": [[21, "module-pytomography.projections"]], "pytomography.projections.projection": [[22, "module-pytomography.projections.projection"]], "pytomography.utils.helper_functions": [[23, "module-pytomography.utils.helper_functions"]], "pytomography.utils": [[24, "module-pytomography.utils"]]}, "indexentries": {"osembsr (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSEMBSR"]], "osemosl (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSEMOSL"]], "osml (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSML"]], "forward() (pytomography.algorithms.osembsr method)": [[1, "pytomography.algorithms.OSEMBSR.forward"]], "forward() (pytomography.algorithms.osemosl method)": [[1, "pytomography.algorithms.OSEMOSL.forward"]], "forward() (pytomography.algorithms.osml method)": [[1, "pytomography.algorithms.OSML.forward"]], "get_subset_splits() (pytomography.algorithms.osml method)": [[1, "pytomography.algorithms.OSML.get_subset_splits"]], "module": [[1, "module-pytomography.algorithms"], [2, "module-pytomography.algorithms.osem"], [3, "module-pytomography.callbacks.callback"], [4, "module-pytomography.callbacks"], [5, "module-pytomography"], [6, "module-pytomography.io.dicom"], [7, "module-pytomography.io"], [8, "module-pytomography.io.simind"], [9, "module-pytomography.mappings.SPECT.atteunation"], [10, "module-pytomography.mappings.SPECT"], [11, "module-pytomography.mappings.SPECT.psf"], [12, "module-pytomography.mappings"], [13, "module-pytomography.mappings.mapping"], [14, "module-pytomography.metadata"], [15, "module-pytomography.metadata.metadata"], [16, "module-pytomography.priors"], [17, "module-pytomography.priors.nearest_neighbour"], [18, "module-pytomography.priors.prior"], [19, "module-pytomography.projections.back_projection"], [20, "module-pytomography.projections.forward_projection"], [21, "module-pytomography.projections"], [22, "module-pytomography.projections.projection"], [23, "module-pytomography.utils.helper_functions"], [24, "module-pytomography.utils"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "osembsr (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSEMBSR"]], "osemosl (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSEMOSL"]], "osml (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSML"]], "forward() (pytomography.algorithms.osem.osembsr method)": [[2, "pytomography.algorithms.osem.OSEMBSR.forward"]], "forward() (pytomography.algorithms.osem.osemosl method)": [[2, "pytomography.algorithms.osem.OSEMOSL.forward"]], "forward() (pytomography.algorithms.osem.osml method)": [[2, "pytomography.algorithms.osem.OSML.forward"]], "get_subset_splits() (pytomography.algorithms.osem.osml method)": [[2, "pytomography.algorithms.osem.OSML.get_subset_splits"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "callback (class in pytomography.callbacks.callback)": [[3, "pytomography.callbacks.callback.CallBack"]], "pytomography.callbacks.callback": [[3, "module-pytomography.callbacks.callback"]], "run() (pytomography.callbacks.callback.callback method)": [[3, "pytomography.callbacks.callback.CallBack.run"]], "callback (class in pytomography.callbacks)": [[4, "pytomography.callbacks.CallBack"]], "pytomography.callbacks": [[4, "module-pytomography.callbacks"]], "run() (pytomography.callbacks.callback method)": [[4, "pytomography.callbacks.CallBack.run"]], "device (in module pytomography)": [[5, "pytomography.device"]], "pytomography": [[5, "module-pytomography"]], "hu_to_mu() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.HU_to_mu"]], "dicom_ct_to_data() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.dicom_CT_to_data"]], "dicom_mew_to_data() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.dicom_MEW_to_data"]], "dicom_projections_to_data() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.dicom_projections_to_data"]], "get_hu2mu_coefficients() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.get_HU2mu_coefficients"]], "get_spect_recon_algorithm_dicom() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.get_SPECT_recon_algorithm_dicom"]], "get_affine_ct() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.get_affine_CT"]], "get_affine_spect() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.get_affine_spect"]], "get_radii_and_angles() (in module pytomography.io.dicom)": [[6, "pytomography.io.dicom.get_radii_and_angles"]], "pytomography.io.dicom": [[6, "module-pytomography.io.dicom"]], "dicom_ct_to_data() (in module pytomography.io)": [[7, "pytomography.io.dicom_CT_to_data"]], "dicom_mew_to_data() (in module pytomography.io)": [[7, "pytomography.io.dicom_MEW_to_data"]], "dicom_projections_to_data() (in module pytomography.io)": [[7, "pytomography.io.dicom_projections_to_data"]], "get_spect_recon_algorithm_dicom() (in module pytomography.io)": [[7, "pytomography.io.get_SPECT_recon_algorithm_dicom"]], "get_spect_recon_algorithm_simind() (in module pytomography.io)": [[7, "pytomography.io.get_SPECT_recon_algorithm_simind"]], "pytomography.io": [[7, "module-pytomography.io"]], "simind_ct_to_data() (in module pytomography.io)": [[7, "pytomography.io.simind_CT_to_data"]], "simind_mew_to_data() (in module pytomography.io)": [[7, "pytomography.io.simind_MEW_to_data"]], "simind_projections_to_data() (in module pytomography.io)": [[7, "pytomography.io.simind_projections_to_data"]], "find_first_entry_containing_header() (in module pytomography.io.simind)": [[8, "pytomography.io.simind.find_first_entry_containing_header"]], "get_spect_recon_algorithm_simind() (in module pytomography.io.simind)": [[8, "pytomography.io.simind.get_SPECT_recon_algorithm_simind"]], "pytomography.io.simind": [[8, "module-pytomography.io.simind"]], "relation_dict (in module pytomography.io.simind)": [[8, "pytomography.io.simind.relation_dict"]], "simind_ct_to_data() (in module pytomography.io.simind)": [[8, "pytomography.io.simind.simind_CT_to_data"]], "simind_mew_to_data() (in module pytomography.io.simind)": [[8, "pytomography.io.simind.simind_MEW_to_data"]], "simind_projections_to_data() (in module pytomography.io.simind)": [[8, "pytomography.io.simind.simind_projections_to_data"]], "spectattenuationnet (class in pytomography.mappings.spect.atteunation)": [[9, "pytomography.mappings.SPECT.atteunation.SPECTAttenuationNet"]], "forward() (pytomography.mappings.spect.atteunation.spectattenuationnet method)": [[9, "pytomography.mappings.SPECT.atteunation.SPECTAttenuationNet.forward"]], "get_prob_of_detection_matrix() (in module pytomography.mappings.spect.atteunation)": [[9, "pytomography.mappings.SPECT.atteunation.get_prob_of_detection_matrix"]], "pytomography.mappings.spect.atteunation": [[9, "module-pytomography.mappings.SPECT.atteunation"]], "spectattenuationnet (class in pytomography.mappings.spect)": [[10, "pytomography.mappings.SPECT.SPECTAttenuationNet"]], "spectpsfnet (class in pytomography.mappings.spect)": [[10, "pytomography.mappings.SPECT.SPECTPSFNet"]], "compute_kernel_size() (pytomography.mappings.spect.spectpsfnet method)": [[10, "pytomography.mappings.SPECT.SPECTPSFNet.compute_kernel_size"]], "forward() (pytomography.mappings.spect.spectattenuationnet method)": [[10, "pytomography.mappings.SPECT.SPECTAttenuationNet.forward"]], "forward() (pytomography.mappings.spect.spectpsfnet method)": [[10, "pytomography.mappings.SPECT.SPECTPSFNet.forward"]], "get_sigma() (pytomography.mappings.spect.spectpsfnet method)": [[10, "pytomography.mappings.SPECT.SPECTPSFNet.get_sigma"]], "initialize_network() (pytomography.mappings.spect.spectpsfnet method)": [[10, "pytomography.mappings.SPECT.SPECTPSFNet.initialize_network"]], "pytomography.mappings.spect": [[10, "module-pytomography.mappings.SPECT"]], "spectpsfnet (class in pytomography.mappings.spect.psf)": [[11, "pytomography.mappings.SPECT.psf.SPECTPSFNet"]], "compute_kernel_size() (pytomography.mappings.spect.psf.spectpsfnet method)": [[11, "pytomography.mappings.SPECT.psf.SPECTPSFNet.compute_kernel_size"]], "forward() (pytomography.mappings.spect.psf.spectpsfnet method)": [[11, "pytomography.mappings.SPECT.psf.SPECTPSFNet.forward"]], "get_psf_transform() (in module pytomography.mappings.spect.psf)": [[11, "pytomography.mappings.SPECT.psf.get_PSF_transform"]], "get_sigma() (pytomography.mappings.spect.psf.spectpsfnet method)": [[11, "pytomography.mappings.SPECT.psf.SPECTPSFNet.get_sigma"]], "initialize_network() (pytomography.mappings.spect.psf.spectpsfnet method)": [[11, "pytomography.mappings.SPECT.psf.SPECTPSFNet.initialize_network"]], "pytomography.mappings.spect.psf": [[11, "module-pytomography.mappings.SPECT.psf"]], "mapnet (class in pytomography.mappings)": [[12, "pytomography.mappings.MapNet"]], "spectattenuationnet (class in pytomography.mappings)": [[12, "pytomography.mappings.SPECTAttenuationNet"]], "spectpsfnet (class in pytomography.mappings)": [[12, "pytomography.mappings.SPECTPSFNet"]], "compute_kernel_size() (pytomography.mappings.spectpsfnet method)": [[12, "pytomography.mappings.SPECTPSFNet.compute_kernel_size"]], "forward() (pytomography.mappings.mapnet method)": [[12, "pytomography.mappings.MapNet.forward"]], "forward() (pytomography.mappings.spectattenuationnet method)": [[12, "pytomography.mappings.SPECTAttenuationNet.forward"]], "forward() (pytomography.mappings.spectpsfnet method)": [[12, "pytomography.mappings.SPECTPSFNet.forward"]], "get_sigma() (pytomography.mappings.spectpsfnet method)": [[12, "pytomography.mappings.SPECTPSFNet.get_sigma"]], "initialize_network() (pytomography.mappings.mapnet method)": [[12, "pytomography.mappings.MapNet.initialize_network"]], "initialize_network() (pytomography.mappings.spectpsfnet method)": [[12, "pytomography.mappings.SPECTPSFNet.initialize_network"]], "pytomography.mappings": [[12, "module-pytomography.mappings"]], "mapnet (class in pytomography.mappings.mapping)": [[13, "pytomography.mappings.mapping.MapNet"]], "forward() (pytomography.mappings.mapping.mapnet method)": [[13, "pytomography.mappings.mapping.MapNet.forward"]], "initialize_network() (pytomography.mappings.mapping.mapnet method)": [[13, "pytomography.mappings.mapping.MapNet.initialize_network"]], "pytomography.mappings.mapping": [[13, "module-pytomography.mappings.mapping"]], "imagemeta (class in pytomography.metadata)": [[14, "pytomography.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata)": [[14, "pytomography.metadata.ObjectMeta"]], "psfmeta (class in pytomography.metadata)": [[14, "pytomography.metadata.PSFMeta"]], "compute_padded_shape() (pytomography.metadata.imagemeta method)": [[14, "pytomography.metadata.ImageMeta.compute_padded_shape"]], "compute_padded_shape() (pytomography.metadata.objectmeta method)": [[14, "pytomography.metadata.ObjectMeta.compute_padded_shape"]], "pytomography.metadata": [[14, "module-pytomography.metadata"]], "imagemeta (class in pytomography.metadata.metadata)": [[15, "pytomography.metadata.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata.metadata)": [[15, "pytomography.metadata.metadata.ObjectMeta"]], "psfmeta (class in pytomography.metadata.metadata)": [[15, "pytomography.metadata.metadata.PSFMeta"]], "compute_padded_shape() (pytomography.metadata.metadata.imagemeta method)": [[15, "pytomography.metadata.metadata.ImageMeta.compute_padded_shape"]], "compute_padded_shape() (pytomography.metadata.metadata.objectmeta method)": [[15, "pytomography.metadata.metadata.ObjectMeta.compute_padded_shape"]], "pytomography.metadata.metadata": [[15, "module-pytomography.metadata.metadata"]], "logcoshprior (class in pytomography.priors)": [[16, "pytomography.priors.LogCoshPrior"]], "nearestneighbourprior (class in pytomography.priors)": [[16, "pytomography.priors.NearestNeighbourPrior"]], "prior (class in pytomography.priors)": [[16, "pytomography.priors.Prior"]], "quadraticprior (class in pytomography.priors)": [[16, "pytomography.priors.QuadraticPrior"]], "relativedifferenceprior (class in pytomography.priors)": [[16, "pytomography.priors.RelativeDifferencePrior"]], "forward() (pytomography.priors.nearestneighbourprior method)": [[16, "pytomography.priors.NearestNeighbourPrior.forward"]], "forward() (pytomography.priors.prior method)": [[16, "pytomography.priors.Prior.forward"]], "pytomography.priors": [[16, "module-pytomography.priors"]], "set_beta_scale() (pytomography.priors.prior method)": [[16, "pytomography.priors.Prior.set_beta_scale"]], "set_object() (pytomography.priors.prior method)": [[16, "pytomography.priors.Prior.set_object"]], "set_object_meta() (pytomography.priors.prior method)": [[16, "pytomography.priors.Prior.set_object_meta"]], "logcoshprior (class in pytomography.priors.nearest_neighbour)": [[17, "pytomography.priors.nearest_neighbour.LogCoshPrior"]], "nearestneighbourprior (class in pytomography.priors.nearest_neighbour)": [[17, "pytomography.priors.nearest_neighbour.NearestNeighbourPrior"]], "quadraticprior (class in pytomography.priors.nearest_neighbour)": [[17, "pytomography.priors.nearest_neighbour.QuadraticPrior"]], "relativedifferenceprior (class in pytomography.priors.nearest_neighbour)": [[17, "pytomography.priors.nearest_neighbour.RelativeDifferencePrior"]], "forward() (pytomography.priors.nearest_neighbour.nearestneighbourprior method)": [[17, "pytomography.priors.nearest_neighbour.NearestNeighbourPrior.forward"]], "pytomography.priors.nearest_neighbour": [[17, "module-pytomography.priors.nearest_neighbour"]], "prior (class in pytomography.priors.prior)": [[18, "pytomography.priors.prior.Prior"]], "forward() (pytomography.priors.prior.prior method)": [[18, "pytomography.priors.prior.Prior.forward"]], "pytomography.priors.prior": [[18, "module-pytomography.priors.prior"]], "set_beta_scale() (pytomography.priors.prior.prior method)": [[18, "pytomography.priors.prior.Prior.set_beta_scale"]], "set_object() (pytomography.priors.prior.prior method)": [[18, "pytomography.priors.prior.Prior.set_object"]], "set_object_meta() (pytomography.priors.prior.prior method)": [[18, "pytomography.priors.prior.Prior.set_object_meta"]], "backprojectionnet (class in pytomography.projections.back_projection)": [[19, "pytomography.projections.back_projection.BackProjectionNet"]], "forward() (pytomography.projections.back_projection.backprojectionnet method)": [[19, "pytomography.projections.back_projection.BackProjectionNet.forward"]], "pytomography.projections.back_projection": [[19, "module-pytomography.projections.back_projection"]], "forwardprojectionnet (class in pytomography.projections.forward_projection)": [[20, "pytomography.projections.forward_projection.ForwardProjectionNet"]], "forward() (pytomography.projections.forward_projection.forwardprojectionnet method)": [[20, "pytomography.projections.forward_projection.ForwardProjectionNet.forward"]], "pytomography.projections.forward_projection": [[20, "module-pytomography.projections.forward_projection"]], "backprojectionnet (class in pytomography.projections)": [[21, "pytomography.projections.BackProjectionNet"]], "forwardprojectionnet (class in pytomography.projections)": [[21, "pytomography.projections.ForwardProjectionNet"]], "projectionnet (class in pytomography.projections)": [[21, "pytomography.projections.ProjectionNet"]], "forward() (pytomography.projections.backprojectionnet method)": [[21, "pytomography.projections.BackProjectionNet.forward"]], "forward() (pytomography.projections.forwardprojectionnet method)": [[21, "pytomography.projections.ForwardProjectionNet.forward"]], "foward() (pytomography.projections.projectionnet method)": [[21, "pytomography.projections.ProjectionNet.foward"]], "initialize_correction_nets() (pytomography.projections.projectionnet method)": [[21, "pytomography.projections.ProjectionNet.initialize_correction_nets"]], "pytomography.projections": [[21, "module-pytomography.projections"]], "projectionnet (class in pytomography.projections.projection)": [[22, "pytomography.projections.projection.ProjectionNet"]], "foward() (pytomography.projections.projection.projectionnet method)": [[22, "pytomography.projections.projection.ProjectionNet.foward"]], "initialize_correction_nets() (pytomography.projections.projection.projectionnet method)": [[22, "pytomography.projections.projection.ProjectionNet.initialize_correction_nets"]], "pytomography.projections.projection": [[22, "module-pytomography.projections.projection"]], "compute_pad_size() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.compute_pad_size"]], "compute_pad_size_padded() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.compute_pad_size_padded"]], "get_distance() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.get_distance"]], "get_object_nearest_neighbour() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.get_object_nearest_neighbour"]], "pad_image() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.pad_image"]], "pad_object() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.pad_object"]], "pad_object_z() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.pad_object_z"]], "pytomography.utils.helper_functions": [[23, "module-pytomography.utils.helper_functions"]], "rev_cumsum() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.rev_cumsum"]], "rotate_detector_z() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.rotate_detector_z"]], "unpad_image() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.unpad_image"]], "unpad_object() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.unpad_object"]], "unpad_object_z() (in module pytomography.utils.helper_functions)": [[23, "pytomography.utils.helper_functions.unpad_object_z"]], "compute_pad_size() (in module pytomography.utils)": [[24, "pytomography.utils.compute_pad_size"]], "get_distance() (in module pytomography.utils)": [[24, "pytomography.utils.get_distance"]], "get_object_nearest_neighbour() (in module pytomography.utils)": [[24, "pytomography.utils.get_object_nearest_neighbour"]], "pad_image() (in module pytomography.utils)": [[24, "pytomography.utils.pad_image"]], "pad_object() (in module pytomography.utils)": [[24, "pytomography.utils.pad_object"]], "pad_object_z() (in module pytomography.utils)": [[24, "pytomography.utils.pad_object_z"]], "pytomography.utils": [[24, "module-pytomography.utils"]], "rev_cumsum() (in module pytomography.utils)": [[24, "pytomography.utils.rev_cumsum"]], "rotate_detector_z() (in module pytomography.utils)": [[24, "pytomography.utils.rotate_detector_z"]], "unpad_image() (in module pytomography.utils)": [[24, "pytomography.utils.unpad_image"]], "unpad_object() (in module pytomography.utils)": [[24, "pytomography.utils.unpad_object"]], "unpad_object_z() (in module pytomography.utils)": [[24, "pytomography.utils.unpad_object_z"]]}})