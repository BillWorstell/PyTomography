Search.setIndex({"docnames": ["autoapi/index", "autoapi/pytomography/algorithms/index", "autoapi/pytomography/algorithms/osem/index", "autoapi/pytomography/callbacks/callback/index", "autoapi/pytomography/callbacks/index", "autoapi/pytomography/index", "autoapi/pytomography/io/CT/attenuation_map/index", "autoapi/pytomography/io/CT/dicom/index", "autoapi/pytomography/io/CT/index", "autoapi/pytomography/io/SPECT/dicom/index", "autoapi/pytomography/io/SPECT/index", "autoapi/pytomography/io/SPECT/simind/index", "autoapi/pytomography/io/index", "autoapi/pytomography/io/shared/dicom_creation/index", "autoapi/pytomography/io/shared/index", "autoapi/pytomography/metadata/SPECT/index", "autoapi/pytomography/metadata/SPECT/spect_metadata/index", "autoapi/pytomography/metadata/index", "autoapi/pytomography/metadata/metadata/index", "autoapi/pytomography/priors/index", "autoapi/pytomography/priors/nearest_neighbour/index", "autoapi/pytomography/priors/prior/index", "autoapi/pytomography/projections/SPECT/index", "autoapi/pytomography/projections/SPECT/spect_system_matrix/index", "autoapi/pytomography/projections/index", "autoapi/pytomography/projections/system_matrix/index", "autoapi/pytomography/transforms/PET/attenuation/index", "autoapi/pytomography/transforms/PET/index", "autoapi/pytomography/transforms/PET/psf/index", "autoapi/pytomography/transforms/SPECT/atteunation/index", "autoapi/pytomography/transforms/SPECT/cutoff/index", "autoapi/pytomography/transforms/SPECT/index", "autoapi/pytomography/transforms/SPECT/psf/index", "autoapi/pytomography/transforms/index", "autoapi/pytomography/transforms/transform/index", "autoapi/pytomography/utils/index", "autoapi/pytomography/utils/misc/index", "autoapi/pytomography/utils/nist_data/index", "autoapi/pytomography/utils/scatter/index", "autoapi/pytomography/utils/spatial/index", "developers_guide", "external_data", "index", "intro_page", "notebooks/conventions", "notebooks/dt1", "notebooks/dt2", "notebooks/dt3", "notebooks/dt4", "notebooks/dt5", "notebooks/dt6", "notebooks/t_dicomdata", "notebooks/t_fbp", "notebooks/t_quantitative", "notebooks/t_siminddata", "usage"], "filenames": ["autoapi/index.rst", "autoapi/pytomography/algorithms/index.rst", "autoapi/pytomography/algorithms/osem/index.rst", "autoapi/pytomography/callbacks/callback/index.rst", "autoapi/pytomography/callbacks/index.rst", "autoapi/pytomography/index.rst", "autoapi/pytomography/io/CT/attenuation_map/index.rst", "autoapi/pytomography/io/CT/dicom/index.rst", "autoapi/pytomography/io/CT/index.rst", "autoapi/pytomography/io/SPECT/dicom/index.rst", "autoapi/pytomography/io/SPECT/index.rst", "autoapi/pytomography/io/SPECT/simind/index.rst", "autoapi/pytomography/io/index.rst", "autoapi/pytomography/io/shared/dicom_creation/index.rst", "autoapi/pytomography/io/shared/index.rst", "autoapi/pytomography/metadata/SPECT/index.rst", "autoapi/pytomography/metadata/SPECT/spect_metadata/index.rst", "autoapi/pytomography/metadata/index.rst", "autoapi/pytomography/metadata/metadata/index.rst", "autoapi/pytomography/priors/index.rst", "autoapi/pytomography/priors/nearest_neighbour/index.rst", "autoapi/pytomography/priors/prior/index.rst", "autoapi/pytomography/projections/SPECT/index.rst", "autoapi/pytomography/projections/SPECT/spect_system_matrix/index.rst", "autoapi/pytomography/projections/index.rst", "autoapi/pytomography/projections/system_matrix/index.rst", "autoapi/pytomography/transforms/PET/attenuation/index.rst", "autoapi/pytomography/transforms/PET/index.rst", "autoapi/pytomography/transforms/PET/psf/index.rst", "autoapi/pytomography/transforms/SPECT/atteunation/index.rst", "autoapi/pytomography/transforms/SPECT/cutoff/index.rst", "autoapi/pytomography/transforms/SPECT/index.rst", "autoapi/pytomography/transforms/SPECT/psf/index.rst", "autoapi/pytomography/transforms/index.rst", "autoapi/pytomography/transforms/transform/index.rst", "autoapi/pytomography/utils/index.rst", "autoapi/pytomography/utils/misc/index.rst", "autoapi/pytomography/utils/nist_data/index.rst", "autoapi/pytomography/utils/scatter/index.rst", "autoapi/pytomography/utils/spatial/index.rst", "developers_guide.md", "external_data.md", "index.md", "intro_page.md", "notebooks/conventions.ipynb", "notebooks/dt1.ipynb", "notebooks/dt2.ipynb", "notebooks/dt3.ipynb", "notebooks/dt4.ipynb", "notebooks/dt5.ipynb", "notebooks/dt6.ipynb", "notebooks/t_dicomdata.ipynb", "notebooks/t_fbp.ipynb", "notebooks/t_quantitative.ipynb", "notebooks/t_siminddata.ipynb", "usage.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms.osem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.callbacks.callback</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.callbacks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.CT.attenuation_map</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.CT.dicom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.CT</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.SPECT.dicom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.SPECT</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.SPECT.simind</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.shared.dicom_creation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.shared</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata.SPECT</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata.SPECT.spect_metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors.nearest_neighbour</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors.prior</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.SPECT</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.SPECT.spect_system_matrix</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.system_matrix</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.PET.attenuation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.PET</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.PET.psf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.SPECT.atteunation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.SPECT.cutoff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.SPECT</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.SPECT.psf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.transforms.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils.misc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils.nist_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils.scatter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils.spatial</span></code>", "Developer\u2019s Guide", "External Data", "PyTomography", "PyTomography", "Manual", "Fundamental Operations", "Last Time", "Last Time", "Last Time", "&lt;no title&gt;", "Last Time", "SPECT: Reconstructing DICOM Data", "SPECT: Implementing Filtered Back Projection", "SPECT: Quantitative Analysis (SIMIND)", "SPECT: Reconstructing SIMIND Data", "Tutorials"], "terms": {"thi": [0, 1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 49, 51, 52, 53, 54], "page": [0, 40], "contain": [0, 1, 2, 7, 10, 11, 12, 17, 19, 24, 32, 33, 35, 44, 45, 51, 54], "auto": 0, "gener": [0, 13, 17, 18, 24, 25, 41, 48, 49, 53], "document": [0, 44], "1": [0, 1, 2, 6, 8, 9, 10, 11, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 36, 37, 44, 45, 46, 47, 48, 49, 50, 52], "pytomographi": [0, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "algorithm": [0, 4, 5, 9, 19, 24, 25, 33, 46, 50, 51, 52, 53, 54], "osem": [0, 1, 4, 5, 19, 21, 22, 23, 24, 25, 42, 43, 44, 51, 52, 54], "callback": [0, 1, 2, 5, 53], "io": [0, 5, 41, 51, 53, 54], "spect": [0, 5, 6, 8, 12, 17, 24, 33, 35, 36, 41, 42, 43, 45, 48, 49, 50, 55], "dicom": [0, 1, 2, 5, 8, 10, 12, 13, 14, 30, 31, 33, 42, 43, 44, 55], "helper": [], "simind": [0, 5, 10, 12, 41, 42, 43, 55], "metadata": [0, 5, 9, 10, 11, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 49, 50, 51, 52, 54], "prior": [0, 1, 2, 5, 22, 23, 24, 42, 43, 53, 54], "nearest_neighbour": [0, 5, 19], "project": [0, 1, 2, 5, 9, 10, 11, 15, 16, 17, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 42, 43, 45, 46, 47, 48, 49, 50, 51, 55], "system_matrix": [0, 1, 2, 5, 22, 23, 24, 49, 50, 51, 52, 53, 54], "transform": [0, 5, 22, 23, 24, 25, 45, 46, 47, 48, 49, 50, 53, 54], "pet": [0, 5, 6, 8, 9, 10, 11, 33, 42, 43, 44, 51], "attenu": [0, 5, 6, 8, 9, 10, 11, 24, 25, 27, 29, 31, 33, 35, 36, 37, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54], "psf": [0, 5, 9, 10, 11, 15, 16, 17, 27, 31, 33, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54], "atteun": [0, 5, 9, 10, 31, 33, 44, 47, 51], "cutoff": [0, 5, 31, 33], "util": [0, 5, 45, 46, 47, 48, 49, 51], "helper_funct": [], "creat": [0, 6, 13, 14, 32, 33, 34, 40, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54], "sphinx": 0, "autoapi": 0, "modul": [1, 12, 17, 19, 24, 33, 35], "all": [1, 2, 4, 6, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 40, 41, 44, 45, 49, 51, 53, 54], "avail": [1, 9, 35, 36], "reconstruct": [1, 2, 3, 4, 9, 10, 11, 19, 22, 23, 24, 25, 30, 31, 33, 34, 40, 46, 50, 52, 55], "osml": [1, 2], "imag": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "object_initi": [1, 2], "none": [1, 2, 6, 9, 10, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 51, 53], "scatter": [0, 1, 2, 5, 9, 10, 11, 35, 42, 43, 45, 51, 53, 54], "0": [1, 2, 6, 9, 10, 19, 20, 28, 35, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 48, 53], "abstract": [1, 2, 3, 4, 17, 18, 19, 20, 21, 24, 25, 33, 34], "differ": [1, 2, 9, 11, 13, 14, 17, 18, 19, 20, 26, 27, 29, 31, 33, 41, 42, 43, 44, 45, 46, 48, 53, 54], "The": [1, 2, 3, 4, 9, 11, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55], "between": [1, 2, 6, 14, 15, 16, 17, 18, 19, 20, 24, 35, 36, 37, 44, 48, 53], "subclass": [1, 2, 3, 4, 19, 20, 32, 33, 34, 53], "i": [1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "method": [1, 2, 3, 4, 9, 10, 19, 21, 24, 25, 31, 32, 33, 34, 35, 36, 39, 44, 52, 54], "which": [1, 2, 3, 4, 6, 9, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 35, 37, 39, 44, 45, 47, 50, 51, 53, 54], "thei": [1, 2, 40, 44, 47, 49, 51], "includ": [1, 2, 9, 13, 22, 23, 24, 30, 31, 33, 40, 42, 43, 44, 45, 51, 52, 53], "inform": [1, 2, 9, 10, 11, 13, 14, 17, 19, 20, 31, 32, 33, 42, 43, 44, 51, 52, 54], "If": [1, 2, 3, 4, 6, 9, 10, 15, 16, 17, 22, 23, 24, 26, 27, 33, 35, 39, 40, 42, 44, 46, 47, 51, 52, 53], "function": [1, 2, 4, 12, 15, 16, 17, 19, 20, 21, 24, 27, 31, 33, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 53], "us": [1, 2, 3, 4, 6, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55], "ar": [1, 2, 4, 8, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 33, 35, 36, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54], "equival": [1, 2, 45], "paramet": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 50, 51], "torch": [1, 2, 3, 4, 9, 10, 11, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "tensor": [1, 2, 3, 4, 9, 10, 11, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 45, 47, 48, 49, 52], "batch_siz": [1, 2, 3, 4, 9, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 45], "lr": [9, 10, 11, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 39, 45], "ltheta": [9, 10, 11, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 39, 45], "lz": [1, 2, 3, 4, 9, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 45], "data": [1, 2, 6, 8, 9, 10, 11, 12, 17, 30, 31, 32, 33, 35, 36, 37, 42, 43, 44, 45, 48, 49, 55], "g_j": 44, "systemmatrix": [1, 2, 22, 23, 24, 25, 44, 49, 50], "system": [1, 2, 9, 19, 20, 21, 22, 23, 24, 25, 30, 31, 33, 34, 35, 39, 41, 42, 43, 44, 46, 49, 50, 52, 54], "matrix": [1, 2, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 46, 47, 49, 50, 52, 54], "h": [1, 2, 22, 23, 24, 25, 44, 46, 47, 48, 49, 50, 51, 52, 54], "g": [1, 2, 22, 23, 24, 25, 44, 45, 46, 47, 50, 51, 52, 54], "hf": [1, 2, 24, 25, 44, 45, 46, 47, 50, 52, 54], "lx": [1, 2, 3, 4, 9, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 36, 39, 45, 48, 49], "ly": [1, 2, 3, 4, 9, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 36, 39, 45], "repres": [1, 2, 19, 20, 21, 32, 42, 43, 44, 47, 48, 51, 53, 54], "initi": [1, 2, 19, 20, 24, 25, 35, 36, 44, 50, 51], "object": [1, 2, 3, 4, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 45, 46, 47, 48, 49, 50, 52, 53, 54], "guess": [1, 2, 44, 50], "f_i": 44, "space": [1, 2, 15, 16, 17, 18, 19, 20, 24, 26, 29, 31, 32, 33, 35, 36, 44, 47, 48, 49, 51, 52, 54], "estim": [1, 2, 9, 10, 11, 50, 51, 52, 54], "contribut": [1, 2, 35, 36, 40, 42, 44, 52], "s_j": [], "option": [1, 2, 4, 9, 10, 11, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39, 42, 43, 51], "bayesian": [1, 2, 42, 43, 54], "comput": [1, 2, 3, 4, 9, 11, 15, 16, 17, 19, 20, 21, 26, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53], "beta": [1, 2, 19, 20, 21, 35, 39, 44, 45, 54], "frac": [1, 2, 15, 16, 17, 19, 20, 21, 44, 50, 52], "partial": [1, 2, 19, 20, 21], "v": [1, 2, 6, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 33, 35, 37, 41, 44, 49], "f_r": [19, 20, 21], "term": [1, 2, 49, 52], "default": [1, 2, 9, 10, 11, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39], "get_subset_split": [1, 2], "n_subset": [1, 2, 3, 4, 51, 53, 54], "n_angl": [1, 2], "return": [1, 2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 44, 47, 48, 49, 51, 54], "list": [1, 2, 7, 8, 9, 10, 11, 15, 16, 17, 22, 23, 24, 25, 35, 36, 41, 51], "arrai": [1, 2, 6, 7, 8, 9, 10, 31, 32, 33, 35, 36, 37, 45, 47, 48, 49, 53], "each": [1, 2, 3, 4, 9, 11, 13, 15, 16, 17, 22, 23, 24, 29, 31, 32, 33, 35, 36, 39, 44, 46, 47, 48, 53, 54], "indic": [1, 2, 29, 31, 32, 33, 44, 52], "correspond": [1, 2, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 42, 43, 44, 49, 51, 52, 53, 54], "number": [1, 2, 3, 4, 10, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 35, 36, 39, 44, 45, 50, 51, 53], "order": [1, 2, 22, 23, 24, 25, 42, 43, 44, 54], "subset": [1, 2, 19, 21, 22, 23, 24, 25, 42, 43, 44, 51], "For": [1, 2, 4, 20, 33, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54], "exampl": [1, 2, 4, 17, 22, 23, 24, 32, 33, 40, 42, 44, 45, 46, 47, 49, 51, 52, 53], "get_subsets_split": [1, 2], "2": [1, 2, 6, 15, 16, 17, 19, 20, 35, 36, 37, 39, 44, 45, 46, 47, 48, 49, 50, 52], "6": [1, 2, 46, 47, 48, 49, 50, 51, 52, 53, 54], "would": [1, 2, 24, 25, 40, 44, 45, 46, 47, 51, 54], "4": [1, 2, 6, 19, 20, 35, 37, 42, 43, 45, 46, 48, 51, 52, 53, 54], "3": [1, 2, 6, 9, 10, 15, 16, 17, 35, 37, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "5": [1, 2, 32, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "int": [1, 2, 3, 4, 9, 10, 11, 15, 16, 17, 19, 20, 22, 23, 24, 31, 32, 33, 35, 36, 39, 48, 49], "total": [1, 2, 44, 53, 54], "index": [1, 2, 9, 10, 45, 46, 47, 48, 49, 50, 51, 52], "type": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 45, 51], "__call__": [1, 2, 19, 20, 33, 34], "n_iter": [1, 2, 3, 4, 50, 51, 53, 54], "perform": [1, 2, 4, 9, 10, 49, 51, 53], "must": [1, 2, 3, 4, 13, 14, 32, 33, 34, 51], "implement": [1, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 44, 46, 47, 48, 49, 55], "iter": [1, 2, 3, 4, 19, 21, 24, 25, 42, 43, 44, 50, 51, 53], "evalu": [1, 2, 32], "after": [1, 2, 3, 4, 22, 23, 24, 25, 33, 34, 42, 43, 47, 53, 54], "subiter": [1, 2, 3, 4], "osemosl": [1, 2, 51], "base": [1, 2, 4, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 53], "expect": [1, 2, 42, 43, 44], "one": [1, 2, 3, 4, 9, 26, 27, 33, 35, 39, 44, 51, 52, 54], "step": [1, 2, 42, 43, 44], "late": [1, 2, 42, 43, 44], "n": [1, 2, 19, 20, 31, 32, 33, 44, 48, 49, 50], "m": [1, 2, 40, 44], "sum_j": [22, 23, 24, 25, 44], "h_": [22, 23, 24, 25, 44, 52], "ij": [22, 23, 24, 25, 44, 45, 46, 47, 48, 49, 50, 52], "_": [1, 2, 44, 45, 46, 49], "sum_i": [44, 52], "osembsr": [1, 2, 53, 54], "block": [1, 2, 42, 43, 44, 54], "sequenti": [1, 2, 42, 43, 44, 54], "regular": [1, 2, 32, 42, 43, 44, 54], "bsrem": [1, 2, 42, 43], "In": [1, 2, 13, 14, 17, 18, 19, 20, 31, 32, 33, 35, 39, 44, 47, 49, 51, 52, 53, 54], "particular": [1, 2, 7, 8, 9, 10, 13, 14, 29, 31, 32, 33, 35, 37, 39, 44, 53], "consist": [1, 2, 6, 9, 24, 25, 44, 49, 51, 54], "two": [1, 2, 6, 10, 35, 36, 44, 45, 52], "tild": [1, 2, 19, 20, 21, 44], "f": [1, 2, 15, 16, 17, 19, 20, 21, 24, 25, 32, 35, 37, 44, 45, 46, 47, 50, 51, 52, 53, 54], "_i": [44, 52], "follow": [1, 2, 40, 42, 43, 44, 46, 47, 48, 51, 52, 53], "left": [1, 2, 19, 20, 40, 44, 50, 51, 52, 53], "alpha_n": [1, 2, 44], "right": [1, 2, 19, 20, 40, 44, 45, 48, 50, 52, 53], "relaxation_funct": [1, 2], "lambda": [1, 2, 15, 16, 17], "x": [1, 2, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53], "specifi": [1, 2, 11, 13, 14, 15, 16, 17, 22, 23, 24, 25, 31, 32, 33, 35, 39, 44, 47, 50, 51, 53, 54], "relax": [1, 2], "sequenc": [1, 2, 6, 7, 8, 9, 10, 11, 19, 20, 22, 23, 24, 25, 27, 28, 29, 31, 33, 35, 36, 44], "where": [1, 2, 9, 10, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 35, 36, 39, 40, 44, 47, 48, 49, 51, 52, 53, 54], "call": [1, 2, 3, 4, 15, 16, 17, 32, 45, 49, 51], "maximum": [2, 9, 42, 43, 44], "liklihood": [2, 19, 42, 43, 44], "Such": [2, 52], "from": [2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 35, 36, 37, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "an": [2, 3, 4, 6, 9, 10, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 39, 40, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54], "e": [2, 6, 15, 16, 17, 19, 22, 23, 24, 25, 35, 36, 39, 41, 44, 47], "given": [2, 6, 7, 8, 9, 10, 13, 19, 20, 22, 23, 24, 35, 36, 37, 39, 44, 48, 51, 52, 53, 54], "notat": [2, 44, 49], "defin": [2, 4, 19, 20, 44, 49, 52, 54], "equal": [2, 30, 31, 33, 52], "size": [2, 9, 10, 15, 16, 17, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 39, 45, 46, 49, 51, 52], "equiv": [2, 44], "complet": [2, 19, 20, 53], "we": [2, 15, 16, 17, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "start": [2, 46, 47, 53, 54], "next": [2, 40, 44, 47, 53, 54], "ani": [2, 19, 20, 21, 35, 39, 40, 44, 46, 49, 51, 52], "inherit": [2, 4, 19, 21], "forward": [2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 46, 47, 48, 49, 50, 52, 54], "__init__": [2, 3, 4, 32, 53], "back": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39, 44, 46, 47, 48, 49, 50, 55], "network": [32, 33, 34, 48, 49, 52], "a_i": [44, 52, 54], "b_j": 52, "onc": [2, 40], "recon": [2, 9], "time": [2, 13, 22, 23, 24, 44, 54], "when": [2, 15, 16, 17, 19, 21, 22, 23, 24, 25, 30, 31, 32, 33, 44, 51, 52, 54], "redefin": [3, 4], "run": [3, 4, 44, 50, 51, 53, 54], "argument": [3, 4, 13, 14, 19, 20, 30, 31, 33, 41, 51], "algorihtm": [3, 4], "__run__": [3, 4], "obj": [3, 4, 45, 46, 47, 48, 49, 50, 53], "can": [3, 4, 9, 22, 23, 24, 32, 33, 34, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55], "variou": [3, 4, 12, 24, 25, 53], "statist": [3, 4, 19, 44, 53], "metric": 4, "throughout": [4, 44], "you": [4, 32, 40, 42, 43, 44, 50, 51, 52, 53, 54], "mai": [4, 13, 14, 17, 18, 22, 23, 24, 44, 45, 52, 53], "want": [4, 26, 27, 33, 40, 45, 48, 49, 51, 53, 54], "look": [4, 10, 11, 35, 36, 44, 45, 46, 48, 51, 52, 53, 54], "nois": [4, 50, 53, 54], "liver": [4, 53, 54], "A": [4, 10, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 44, 47, 48, 49, 51, 53, 54], "simpli": [4, 44, 47, 49], "take": [4, 11, 15, 16, 17, 24, 25, 44, 45, 49, 53, 54], "oper": [4, 15, 16, 17, 24, 25, 33, 44, 46, 47, 49, 52], "input": [4, 8, 10, 11, 12, 13, 14, 19, 20, 32], "user": [4, 19, 20, 35, 39, 54], "should": [4, 19, 20, 21, 31, 32, 33, 35, 39, 40, 44], "could": [4, 52], "bia": [4, 48, 49, 53], "curv": [4, 6, 15, 16, 17, 35, 37, 48, 53], "provid": [4, 9, 10, 51, 54], "wa": [4, 35, 37, 39, 41, 47, 48, 49, 51, 54], "some": [4, 6, 9, 10, 13, 14, 42, 44, 46, 48, 49, 51, 53, 54], "ground": [4, 53], "truth": [4, 53], "compar": [4, 44, 51, 53], "devic": [5, 26, 27, 33, 34, 45, 46, 47, 48, 49, 50, 53], "dtype": [5, 11, 48, 49, 53], "delta": [5, 19, 20, 28, 48, 49, 50], "1e": [5, 28, 48, 49, 50], "11": [5, 48, 50, 51, 52, 53, 54], "set_dtyp": 5, "dt": [5, 53, 54], "set_devic": 5, "d": [5, 9, 13, 46, 47], "get_radii_and_angl": 9, "get": [6, 9, 10, 11, 15, 16, 17, 19, 20, 31, 32, 33, 35, 37, 39, 41, 47, 48, 49, 51, 52, 53, 54], "radii": [9, 15, 16, 17, 49, 50], "angl": [9, 15, 16, 17, 22, 23, 24, 25, 29, 31, 32, 33, 35, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "file": [1, 2, 6, 7, 8, 9, 10, 11, 13, 14, 35, 37, 41, 42, 43, 51, 53], "dataset": [9, 13, 14], "pydicom": [9, 51], "requir": [6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 29, 30, 31, 33, 35, 39, 41, 42, 43, 44, 47, 50, 51, 53, 54], "np": [6, 7, 8, 9, 10, 11, 35, 36, 37, 45, 46, 47, 48, 49, 50, 51, 52, 53], "get_project": [9, 10, 11, 51, 54], "index_peak": [9, 10, 51], "objectmeta": [9, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 33, 34, 49, 50, 52], "imagemeta": [9, 15, 16, 17, 18, 24, 25, 26, 27, 28, 33, 34, 49, 50, 52], "dcm": [9, 10, 51], "str": [5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 26, 27, 29, 31, 33, 34, 35, 37, 39], "path": [9, 10, 11, 47, 48, 51, 53, 54], "energi": [6, 7, 8, 9, 10, 11, 26, 27, 29, 31, 33, 35, 37, 41, 44, 47, 51], "window": [9, 10, 11, 44, 51], "otherwis": [9, 10, 44], "get_window_width": 9, "width": [9, 15, 16, 17, 31, 32, 33, 35, 39, 48, 51], "detectorinformationsequ": 9, "attribut": [9, 10, 19, 21, 31, 32, 33, 51], "rang": [9, 10, 44, 50], "kev": [9, 41, 51], "float": [6, 7, 8, 9, 10, 11, 15, 16, 17, 19, 20, 21, 26, 29, 31, 32, 33, 35, 36, 37, 39, 44, 45, 46, 47, 48, 49, 50, 52], "get_scatter_from_tew": [9, 10, 11, 51, 54], "index_low": [9, 10, 51], "index_upp": [9, 10, 51], "tripl": [9, 10, 11, 44, 51], "filepath": [6, 9, 10, 11, 29, 31, 33, 35, 37, 51], "energywindowinformationsequ": [9, 10, 51], "photopeak": [6, 8, 9, 10, 11, 51, 53, 54], "lower": [9, 10, 11, 51], "upper": [9, 10, 11, 51, 53], "get_attenuation_map_from_fil": [9, 10], "file_am": [9, 10], "map": [6, 9, 10, 11, 22, 23, 24, 25, 26, 27, 29, 33, 41, 42, 43, 44, 49, 50, 51, 52, 54], "usual": [9, 10, 50], "manufactur": [9, 10, 13], "scanner": [9, 10, 29, 32, 35, 36, 39, 41, 42, 43, 44, 48, 49, 51], "name": [9, 10, 40, 42, 43, 44], "shape": [9, 10, 15, 16, 17, 19, 20, 27, 28, 32, 33, 35, 36, 45, 46, 48, 49, 50, 51, 52, 53], "unit": [6, 7, 8, 9, 10, 11, 44, 51, 53, 54], "cm": [6, 8, 9, 10, 11, 15, 16, 17, 26, 27, 29, 31, 33, 35, 37, 47, 48, 49, 50, 51, 53], "math": [1, 2, 9, 10, 15, 16, 17, 22, 23, 24, 29], "get_psfmeta_from_scanner_param": [9, 10, 41, 51], "camera_model": [9, 10], "collimator_nam": [9, 10, 41, 51], "energy_kev": [9, 10, 51], "min_sigma": [9, 10, 15, 16, 17, 31, 32, 33], "camera": [9, 10, 41], "collim": [9, 10, 22, 23, 24, 35, 36, 42, 43, 51, 54], "linear": [6, 8, 9, 10, 15, 16, 17, 35, 37, 47, 48, 52], "interpol": [9, 10, 35, 39], "find": [6, 9, 10, 11, 29, 31, 32, 33, 35, 36, 53], "coeffici": [6, 9, 10, 26, 27, 29, 31, 33, 35, 37, 41, 47, 51], "lead": [9, 10, 41], "valu": [6, 8, 9, 10, 11, 19, 21, 22, 23, 24, 25, 30, 31, 33, 35, 37, 39, 41, 44, 47, 52, 53, 54], "within": [9, 10, 33], "100kev": [9, 10], "600kev": [9, 10], "minimum": [9, 10], "blur": [9, 10, 15, 16, 17, 24, 25, 27, 28, 31, 32, 33, 35, 36, 44, 46, 48, 49, 51, 52], "kernel": [9, 10, 15, 16, 17, 27, 28, 31, 32, 33, 48, 49], "fix": [9, 10, 15, 16, 17, 40, 52], "convolut": [9, 10, 15, 16, 17, 32, 48, 52], "so": [9, 10, 15, 16, 17, 20, 33, 34, 35, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54], "locat": [9, 10, 15, 16, 17, 35, 36, 37, 39, 44, 48, 51, 54], "have": [9, 10, 15, 16, 17, 32, 44, 45, 51, 52], "least": [9, 10, 15, 16, 17, 31, 32, 33, 52], "dimens": [9, 10, 15, 16, 17, 27, 28, 33, 35, 39, 44, 45, 47, 51, 52, 53], "greater": [9, 10], "psfmeta": [49, 50], "get_attenuation_map_from_ct_slic": [9, 10], "files_ct": [6, 7, 8, 9, 10, 51], "file_nm": [9, 10, 51], "keep_as_hu": [9, 10], "fals": [9, 10, 22, 23, 24, 25, 35, 39, 53], "mode": [9, 10, 32, 35, 39, 44], "nearest": [9, 10, 19, 20, 35, 36], "convert": [6, 8, 9, 10, 26, 29, 32, 41, 51, 52, 53], "ct": [0, 5, 9, 10, 12, 19, 20, 26, 27, 33, 41, 42, 43, 47, 48, 49, 50, 51, 54], "singl": [7, 8, 9, 10, 42, 43, 44, 46, 52], "scan": [6, 7, 8, 9, 10, 11, 29, 31, 33, 44, 51, 53, 54], "usabl": [9, 10], "note": [9, 15, 16, 17, 26, 29, 35, 39, 44, 48, 49, 51, 53, 54], "recommend": [42, 43], "http": 9, "jnm": [], "snmjournal": [], "org": 9, "57": 47, "151": [], "long": [45, 52, 54], "vendor": 51, "oppos": 47, "your": [32, 40, 51, 53], "own": [], "As": [15, 16, 17, 32, 33, 42, 43, 44, 50], "preferenti": [], "over": [19, 20, 44, 51], "access": 53, "individu": [9, 10, 49, 52], "raw": [9, 10, 51], "align": [9, 10, 35, 39, 42, 43, 44, 51, 54], "done": [9, 10, 15, 16, 17, 33, 34, 35, 36, 44, 51], "bool": [9, 10, 22, 23, 24, 25, 32, 35, 39], "true": [9, 10, 35, 39, 46, 47, 48, 50, 52, 53, 54], "don": [9, 10, 35, 39, 51, 53], "t": [1, 2, 9, 10, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "keep": [9, 10], "hounsfield": [6, 7, 8, 9, 10], "get_affine_spect": [], "affin": 9, "coordin": [9, 19, 20, 35, 39, 46, 54], "get_affine_ct": [], "max_z": 9, "sinc": [9, 11, 13, 14, 26, 27, 29, 30, 31, 32, 33, 35, 36, 44, 47, 51, 53], "mani": [9, 44, 48, 52], "independ": [9, 27, 28, 33, 44, 48], "why": [9, 44], "z": [9, 10, 27, 28, 30, 31, 33, 35, 36, 39, 44, 45, 46, 48, 52, 53], "also": [9, 13, 14, 22, 23, 24, 25, 32, 33, 44, 47, 51, 52, 54], "across": 9, "seper": [7, 8, 9, 10, 15, 16, 17, 44, 48, 49, 51, 53, 54], "axial": [9, 15, 16, 17, 26, 29, 30, 31, 33, 44, 45, 46, 51], "slice": [6, 9, 10, 13, 14, 30, 31, 33, 35, 36, 48, 50, 51, 53], "make": [9, 40, 42, 44, 47, 52, 53], "up": [7, 8, 9, 10, 22, 23, 24, 44, 54], "stitch_multib": 9, "files_nm": 9, "midslic": 9, "stitch": 9, "togeth": [7, 8, 9, 10, 11, 44, 46, 49, 54], "multipl": [9, 13, 14, 42, 43, 47, 49, 51, 52, 53], "bed": 9, "posit": [9, 19, 20, 44, 51], "n_bed": 9, "first": [9, 11, 29, 30, 31, 32, 33, 35, 36, 42, 43, 44, 45, 47, 48, 51, 52, 53], "length": [9, 15, 16, 17, 31, 32, 33, 44, 52], "see": [9, 11, 52, 53, 54], "doi": 9, "10": [9, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "1117": 9, "12": [9, 44, 47, 48, 51, 52, 53, 54], "2254096": 9, "describ": [9, 19, 20, 21, 40], "averag": [9, 53], "crossfad": 9, "tem": 9, "transit": 9, "error": 9, "minim": [9, 13], "new": [9, 13, 14, 40, 44, 51, 52], "l_z": [9, 44], "output": [8, 9, 10, 11, 12, 26, 27, 28, 29, 30, 31, 32, 33, 42, 43, 51], "interpret": [17, 44], "format": 12, "consider": [], "amount": [9, 11, 35, 36, 39, 44], "do": [40, 44, 48, 49, 51, 52, 54], "correct": [6, 8, 10, 11, 15, 16, 17, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 47, 48, 49, 51, 52, 53], "module_path": 6, "datadir": 6, "file_wat": 6, "file_air": 6, "file_cbon": 6, "compute_tew": [35, 38], "projection_low": [35, 38], "projection_upp": [35, 38], "width_low": [35, 38], "width_upp": [35, 38], "width_peak": [35, 38], "dual_sqrt_exponenti": [35, 37], "c1": [35, 37], "c2": [35, 37], "d1": [35, 37], "d2": [35, 37], "fit": [6, 15, 16, 17, 35, 37, 53], "photon": [26, 27, 29, 31, 33, 35, 37, 42, 43, 44, 51], "nist": [35, 37], "It": [6, 12, 35, 37, 42, 43, 44, 51, 52, 54], "": [1, 2, 19, 20, 35, 37, 39, 41, 42, 44, 45, 47, 51, 52, 53, 54], "form": [19, 24, 35, 37, 44, 47], "c_1e": [35, 37], "d_1": [35, 37], "sqrt": [15, 16, 17, 35, 37], "c_2e": [35, 37], "d_2": [35, 37], "chosen": [35, 37], "pure": [35, 37], "becaus": [13, 14, 35, 37, 44, 47, 48, 49, 52], "gave": [35, 37], "good": [35, 37, 50, 54], "result": [22, 23, 24, 35, 37, 48], "_description_": [6, 11, 13, 14, 35, 37, 39], "bilinear_transform": 6, "hu": [6, 8, 51], "a1": [6, 49], "a2": [6, 49], "b1": 6, "b2": 6, "effect": [6, 7, 8, 10, 26, 27, 28, 29, 31, 32, 33, 47, 49, 51], "radionuclid": [6, 42, 43, 44], "distinct": [6, 24, 44, 54], "region": [6, 11, 22, 23, 24, 42, 43, 53, 54], "geq": 6, "open_ct_fil": [7, 8, 10], "return_max_slice_loc": [], "open": [7, 8, 10, 11, 40, 42, 43, 54], "them": [7, 8, 10, 32, 40, 44, 53, 54], "stack": [7, 8, 10], "whether": [22, 23, 24, 25, 32], "max": [], "need": [15, 16, 17, 26, 27, 32, 33, 35, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54], "appli": [22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 35, 39, 47, 48, 49, 52], "get_e_mu_data_from_datasheet": [35, 37], "datafil": [35, 37], "mass": [35, 37], "50kev": [35, 37], "511kev": [26, 27, 33, 35, 37], "element": [10, 13, 15, 16, 17, 35, 36, 37, 39, 41, 44, 46, 52], "materi": [6, 35, 37, 44, 47], "tupl": [6, 10, 19, 20, 35, 36, 37, 48, 49], "get_mu_from_spectrum_interp": [35, 37], "mu": [6, 8, 28, 35, 37, 47, 48, 49, 50, 54], "desir": [6, 35, 37], "get_hu_from_spectrum_interp": 6, "obtain": [6, 8, 9, 10, 11, 22, 23, 24, 25, 35, 36, 41, 42, 43, 44, 51, 54], "get_hu_mu_curv": 6, "ct_kvp": [6, 8], "e_spect": [6, 8], "housnfield": 6, "air": 6, "water": 6, "cortic": [6, 51], "bone": [6, 51], "point": [6, 15, 16, 17, 20, 31, 32, 33, 44, 47, 48, 53], "kvp": [6, 8], "hu_to_mu": 6, "p_water_opt": 6, "p_air_opt": 6, "optim": 6, "_type_": [6, 11, 13, 14, 35, 39], "get_hu_corticalbon": 6, "found": 6, "get_ect_from_corticalbone_hu": 6, "give": [6, 44, 46, 50, 51], "get_hu2mu_convers": [6, 8], "convers": [6, 8, 53], "get_atteuation_map": [10, 11, 53, 54], "headerfil": [10, 11, 53, 54], "header": [10, 11, 13, 14, 54], "get_spect_recon_algorithm_simind": [], "projections_head": [], "scatter_head": [], "ct_header": [], "psf_meta": [31, 32, 33, 49, 50, 51, 53, 54], "recon_algorithm_class": [], "nn": [32, 48, 49], "get_blank_below_abov": [10, 35, 36], "blank": [10, 35, 36, 51], "sup": [10, 35, 36], "blank_abov": [10, 35, 36], "inf": [10, 35, 36], "blank_below": [10, 35, 36], "entir": [10, 35, 36, 39, 44, 53], "empirc": [10, 35, 36], "zero": [10, 30, 31, 33, 35, 36, 44, 45, 46, 47, 48, 49, 53], "detect": [10, 26, 29, 30, 31, 33, 35, 36, 44, 48, 53], "count": [10, 35, 36, 44, 47, 51, 53, 54], "relation_dict": 11, "find_first_entry_containing_head": 11, "list_of_attribut": 11, "float32": [11, 48, 49, 53], "entri": 11, "interfil": [11, 42, 43], "line": [11, 40, 44, 47, 50, 51], "distanc": [11, 15, 16, 17, 19, 20, 31, 32, 33, 35, 36, 44, 48, 49], "measur": [2, 11, 30, 31, 33, 44, 51], "mm": 11, "doesn": [11, 46, 47], "headerfile_peak": [11, 54], "headerfile_low": [11, 54], "headerfile_upp": [11, 54], "combine_projection_data": [11, 53, 54], "weight": [11, 19, 20, 21, 48, 49, 54], "simul": [11, 48, 50, 53, 54], "add": [11, 13, 40, 44, 46, 48, 49, 52, 54], "rel": [11, 19, 20, 42, 43], "necessari": 11, "along": [11, 22, 23, 24, 25, 26, 29, 31, 32, 33, 35, 36, 39, 40, 44, 45, 51, 52], "combine_scatter_data_tew": [11, 53, 54], "headerfiles_peak": 11, "headerfiles_low": [11, 53, 54], "headerfiles_upp": [11, 53, 54], "more": [11, 22, 23, 24, 44, 47, 50, 51], "detail": [11, 13], "set": [1, 2, 11, 19, 20, 21, 30, 31, 33, 42, 43, 44, 49, 50, 53, 54], "get_psfmeta_from_head": [11, 53, 54], "model": [11, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 52, 54], "pertain": 17, "store": [17, 44, 45, 49], "voxel": [15, 16, 17, 19, 20, 33, 35, 36, 44, 47, 52, 53], "dr": [15, 16, 17, 41, 49, 50, 52, 53], "compute_padded_shap": [15, 16, 17], "pad": [15, 16, 17, 18, 35, 39, 48, 49], "rotat": [15, 16, 17, 35, 39, 44, 46, 47, 48, 49, 53], "avoid": [15, 16, 17, 50], "anyth": [15, 16, 17], "cut": [15, 16, 17], "off": [15, 16, 17, 50, 51, 52, 53, 54], "__repr__": [17, 18], "repr": [17, 18], "self": [17, 18, 19, 20, 21, 22, 23, 24, 25, 32, 53], "object_meta": [15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 49, 50, 51, 52, 53, 54], "detector": [15, 16, 17, 26, 29, 31, 32, 33, 35, 36, 44, 45, 47, 48, 51, 52], "radial": [15, 16, 17, 35, 36, 42, 43, 44, 48, 51], "onli": [15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 33, 35, 36, 42, 43, 44, 50, 51, 53], "certain": [15, 16, 17, 22, 23, 24, 25, 30, 31, 33], "case": [15, 16, 17, 19, 20, 35, 39, 44, 46, 47, 48, 51, 52], "sigma_fit_param": [15, 16, 17], "sigma_fit": [15, 16, 17], "r": [15, 16, 17, 19, 20, 27, 28, 33, 35, 36, 44, 45, 46, 48, 49, 52, 54], "b": [15, 16, 17, 26, 27, 28, 30, 31, 33, 44, 48], "kernel_dimens": [15, 16, 17], "2d": [15, 16, 17, 26, 27, 33, 42, 43, 44], "gaussian": [15, 16, 17, 31, 32, 33, 48], "sigma": [15, 16, 17, 31, 32, 33, 48, 49], "p": [15, 16, 17, 44, 48, 49, 54], "addit": [13, 14, 15, 16, 17, 30, 31, 33, 44], "By": [15, 16, 17, 22, 23, 24], "pi": [15, 16, 17, 35, 39, 44, 52], "spread": [15, 16, 17], "1d": [15, 16, 17, 32, 52], "plane": [15, 16, 17, 26, 29, 35, 36, 39, 44, 45], "dimension": [15, 16, 17, 50, 52], "mix": [15, 16, 17], "consid": [15, 16, 17, 20, 44, 47, 52, 54], "whose": [15, 16, 17], "extens": [15, 16, 17], "infinit": [15, 16, 17], "crop": [15, 16, 17, 35, 39], "numer": [15, 16, 17], "depth": [15, 16, 17], "depend": [15, 16, 17, 19, 20, 27, 28, 31, 32, 33, 35, 36, 42, 43, 44, 45, 48, 53], "constant": [15, 16, 17, 35, 39, 44, 52], "encorpor": [19, 42, 43, 54], "under": [19, 40, 47, 51], "modif": [19, 22, 23, 24], "l": [19, 20, 21, 44, 47, 53], "log": [19, 20, 21, 44], "becom": [19, 44], "ln": [19, 20, 21, 44], "typic": [19, 44, 54], "ha": [19, 44, 49, 50, 51, 52, 53, 54], "sum_": [19, 20, 44, 45, 47, 48, 49, 52, 54], "w_": [19, 20], "phi": [19, 20, 35, 39, 44, 45], "f_": [19, 20, 44], "express": [19, 44, 49], "nearbi": 19, "posterior": [19, 20, 21, 44], "probabl": [19, 20, 21, 26, 29, 33, 44, 47, 48], "foward": [19, 21], "scale": [9, 19, 20, 21, 44], "set_object_meta": [19, 20, 21], "set_beta_scal": [19, 21], "factor": [19, 21, 22, 23, 24, 41, 44, 53, 54], "finit": [19, 21, 30, 31, 33], "per": [19, 21, 32, 47], "set_object": [19, 21], "compute_gradi": [19, 20, 21], "gradient": [19, 20, 21, 44], "nearestneighbourprior": [19, 20], "kwarg": [19, 20, 24, 25], "summat": [19, 20], "neighbour": [19, 20, 35, 36, 42, 43], "formula": [19, 20, 22, 23, 24, 25], "abov": [19, 20, 22, 23, 24, 25, 32, 44, 47, 54], "pass": [19, 20, 48, 49], "neighbourweight": [19, 20], "quadraticprior": [19, 20], "quadrat": [19, 20], "equat": [19, 20, 44], "logcoshprior": [19, 20], "tanh": [19, 20], "logcosh": [19, 20], "cosh": [19, 20], "relativedifferenceprior": [19, 20, 54], "gamma": [19, 20, 54], "3f_": [19, 20], "assign": [19, 20, 32], "meta": [19, 20, 31, 32, 33], "appropri": [19, 20, 22, 23, 24, 50], "coord": [19, 20], "j": [19, 20, 22, 23, 24, 25, 35, 36, 44, 50, 52], "k": [19, 20, 35, 36], "shift": [19, 20, 35, 36], "euclideanneighbourweight": [19, 20], "invers": [19, 20, 35, 39], "euclidean": [19, 20, 35, 36], "anatomyneighbourweight": [19, 20], "anatomy_imag": [19, 20], "similarity_funct": [19, 20], "anatom": [19, 20, 42, 43], "similar": [17, 18, 19, 20, 42, 43, 44, 54], "mri": [19, 20, 42, 43], "callabl": [19, 20, 27, 28, 33], "bound": [19, 20, 48, 49], "represet": [19, 20], "dissimilar": [19, 20], "topnanatomyneighbourweight": [19, 20], "n_neighbour": [19, 20], "top": [19, 20, 30, 31, 33, 42, 43, 51, 53], "most": [19, 20, 32, 44, 51], "compute_inclusion_tensor": [19, 20], "here": [20, 42, 43, 44, 45, 51, 52, 53, 55], "those": [20, 44], "directli": 20, "surround": 20, "sum": [20, 35, 36, 44, 45, 46, 47, 48, 49, 53], "26": [20, 54], "vector": [22, 23, 24, 33, 44, 49, 52], "One": [24, 42, 43, 44, 51], "veri": [24, 45, 52], "import": [13, 14, 24, 32, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "mathbb": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 49], "u": [22, 23, 24, 25, 29, 31, 32, 33, 44, 49], "obj2obj_transform": [22, 23, 24, 25, 49, 50, 51, 52, 53, 54], "im2im_transform": [22, 23, 24, 25, 49, 50, 51, 52, 53, 54], "image_meta": [22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 49, 50, 51, 52, 53, 54], "n_parallel": [22, 23, 24], "produc": [24, 25], "characterist": [24, 25], "while": [17, 18, 24, 25, 42, 43, 44], "through": [24, 25, 44, 48, 49, 50, 52], "backward": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 50, 52, 54], "dure": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 53, 54], "occur": [22, 23, 24, 25], "befor": [22, 23, 24, 25, 32, 33, 40, 44, 47, 49, 51, 52], "initialize_transform": [24, 25], "build": [24, 25, 33, 44, 48, 51, 53, 54], "angle_subset": [22, 23, 24, 25], "assum": [22, 23, 24, 25, 27, 28, 33, 44, 45, 52, 54], "normal": [22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 50, 52, 53], "return_norm_const": [22, 23, 24, 25, 52], "p_i": [22, 23, 24, 47, 48, 49], "divid": [22, 23, 24, 53], "systemmatrixmaskedseg": [], "mask": [22, 23, 24], "updat": [13, 22, 23, 24, 53], "segment": [22, 23, 24], "activ": [22, 23, 24, 53, 54], "hua": [22, 23, 24], "n_mask": [22, 23, 24], "arg": [22, 23, 24], "rac": [22, 23, 24], "get_prob_of_detection_matrix": [26, 29], "dx": [26, 29, 35, 36, 47, 48, 49, 50], "text": [26, 27, 29, 31, 33, 44, 45, 46, 51, 52], "pair": [26, 44], "orient": 26, "axi": [26, 29, 31, 32, 33, 35, 36, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "being": [26, 29, 31, 32, 33, 44, 47], "emit": [26, 29], "pixel": [26, 29, 30, 31, 33, 35, 39, 44], "petattenuationtransform": [26, 27, 33], "im2im": [26, 27, 28, 30, 31, 33, 34], "pytorch": [26, 27, 33, 34, 42, 43, 44, 45], "configur": [22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 51], "init": [26, 27, 28, 29, 31, 32, 33], "apppli": [26, 27, 30, 31, 33], "norm_const": [26, 27, 28, 29, 30, 31, 32, 33], "diagon": [26, 27, 29, 30, 31, 33, 47], "its": [26, 27, 31, 32, 33, 35, 39, 49, 50], "ident": [26, 27, 33], "petpsftransform": [27, 28, 33], "kern": [27, 28, 33], "smooth": [27, 28, 31, 32, 33], "theta": [27, 28, 33, 44, 45, 48, 49, 54], "construct_matrix": [27, 28, 33], "construct": [27, 28, 33], "kernel_noncol": 28, "08": 28, "kernel_penetr": 28, "87": [28, 50], "kernel_scatt": 28, "scatter_fact": 28, "327": 28, "spectattenuationtransform": [29, 31, 33, 49, 50, 51, 53, 54], "obj2obj": [29, 31, 32, 33, 34], "object_i": [29, 31, 32, 33, 45, 46, 47, 48, 49], "ang_idx": [29, 31, 32, 33], "same": [29, 30, 31, 32, 33, 35, 39, 44, 46, 48, 49, 52, 53, 54], "cutofftransform": [30, 31, 33], "last": [30, 31, 33, 45], "few": [30, 31, 33, 44, 48, 49, 51, 53, 54], "often": [30, 31, 33, 44, 49], "due": [30, 31, 33, 44], "field": [30, 31, 33], "view": [30, 31, 33, 44, 51, 53, 54], "bottom": [30, 31, 33, 42, 43, 53], "event": [22, 23, 24, 30, 31, 33, 54], "sharp": [30, 31, 33], "fov": [30, 31, 33], "origin": [30, 31, 33, 35, 36, 39, 40, 46, 52, 53], "spectpsftransform": [31, 32, 33, 49, 50, 51, 53, 54], "compute_kernel_s": [31, 32, 33], "radiu": [31, 32, 33, 48, 49], "determin": [31, 32, 33, 51], "what": [31, 32, 33, 40, 44, 45, 49, 52], "encompass": [31, 32, 33], "get_sigma": [31, 32, 33, 48, 49], "1st": [31, 32, 33], "apply_psf": [31, 32, 33], "situat": [31, 32, 33, 44], "transpos": [31, 32, 33, 45, 51, 53], "symmetr": [31, 32, 33], "implemt": [31, 32, 33], "gaussianblurnet": 32, "layer_r": 32, "layer_z": 32, "neural": [32, 48], "other": [32, 35, 47], "allow": [22, 23, 24, 32, 40, 48, 51], "nest": 32, "tree": 32, "structur": 32, "submodul": 32, "def": [32, 47, 48, 49, 53], "super": [32, 41], "conv1": 32, "conv2d": [32, 48, 49], "20": [32, 47, 48, 49, 50, 51, 52, 53, 54], "conv2": 32, "relu": 32, "wai": 32, "regist": 32, "too": [32, 52], "etc": [17, 18, 32], "parent": [17, 18, 32, 33, 34], "made": [32, 40], "child": 32, "variabl": [32, 51], "train": 32, "boolean": 32, "get_1d_psf_lay": 32, "kernel_s": [32, 48, 49], "layer": [32, 48, 49], "larg": [32, 52], "enough": [32, 35, 39, 54], "cover": 32, "adjust": [33, 34, 44, 47, 48, 54], "reach": [33, 40, 44, 47, 51], "anoth": [33, 44], "exist": [33, 51], "beyond": 33, "boundari": [33, 53], "obj2im": [33, 34], "rev_cumsum": [35, 36, 47, 48, 49], "revers": [35, 36, 44, 47], "cumul": [35, 36, 47], "rotate_detector_z": [35, 39, 45, 46, 47, 48, 49], "bilinear": [35, 39], "neg": [35, 39, 44, 46, 47, 48], "refer": [13, 14, 35, 39, 42, 44, 49], "frame": [35, 39], "eta": [], "relat": [35, 39, 47], "azimuth": [35, 39, 44], "3pi": [], "cartesian": [35, 39, 44], "manual": [35, 39, 42, 45, 51, 54], "batch": [35, 39, 45, 51, 52], "get_dist": [35, 36, 48, 49], "center": [35, 36, 47, 50, 52], "parallel": [22, 23, 24, 35, 36, 41, 44], "y": [35, 36, 44, 45, 46, 52, 53], "thedist": [35, 36], "central": [35, 36], "compute_pad_s": [35, 39], "subsequ": [35, 39], "retain": [35, 39], "side": [35, 39, 40], "compute_pad_size_pad": 39, "pad_object": [35, 39], "xy": [35, 39, 45], "out": [35, 39, 42], "unpad_object": [35, 39], "unpad": [35, 39], "pad_imag": [35, 39], "fill": [29, 31, 33, 35, 39], "unpad_imag": [35, 39], "pad_object_z": [35, 39], "pad_siz": [35, 39], "unpad_object_z": [35, 39], "direcion": [35, 39], "get_object_nearest_neighbour": [35, 36], "arr": [], "a_1x": [], "b_1": 44, "a_2x": [], "b_2": 44, "slope": [], "intercept": [], "team": 40, "highli": 40, "encourag": 40, "commun": 40, "believ": 40, "full": [40, 47], "potenti": [13, 14, 40, 51], "multimod": 40, "framework": 40, "issu": [40, 44], "github": 40, "intend": [40, 44], "branch": 40, "abl": 40, "hand": 40, "On": 40, "local": [40, 42, 43], "clone": 40, "repositori": [40, 42, 43], "Then": [40, 47, 49, 50], "command": [40, 42, 43], "git": 40, "fetch": 40, "checkout": 40, "branchnam": 40, "replac": 40, "chang": 40, "modifi": [40, 44, 47, 51, 53, 54], "essenti": [40, 54], "pleas": [40, 42], "sure": [40, 42], "test": [40, 41], "proceed": 40, "commit": 40, "messag": 40, "present": [40, 52], "tens": 40, "statement": 40, "about": [40, 44, 46, 49], "do_thi": 40, "do_that": 40, "someth": 40, "renam": 40, "push": [40, 49], "pull": 40, "request": 40, "go": [40, 41, 46, 47, 52], "choos": [40, 44], "merg": 40, "mean": [40, 44, 52, 53], "head": 40, "ref": 40, "someon": 40, "review": 40, "contact": 40, "via": 40, "comment": [40, 41], "accept": 40, "ll": [40, 44, 46, 47, 48, 51, 52, 53, 54], "eventu": 40, "releas": 40, "python": [42, 43], "librari": [42, 43], "medic": [41, 42, 43, 44], "enabl": [42, 43, 54], "fast": [42, 43], "gpu": [22, 23, 24, 42, 43], "acceler": [42, 43], "ii": [41, 42, 43, 47, 48, 49, 50, 51], "permit": [42, 43], "easi": [42, 43, 46], "integr": [42, 43, 47], "deep": [42, 43], "learn": [42, 43], "tradit": [42, 43], "emiss": [42, 43, 44, 47, 48], "tomographi": [42, 43, 44], "positron": [42, 43], "maxmimum": [42, 43], "mlem": [42, 43, 44, 50], "techniqu": [42, 43, 44, 54], "abil": [42, 43], "combin": [42, 43, 44, 54], "organ": [12, 42, 43, 54], "virtual": [42, 43], "environ": [42, 43], "anaconda": [42, 43], "conda": [42, 43], "version": [42, 43], "insid": [42, 43, 48, 49, 53], "final": [42, 43, 45, 53], "pip": [42, 43], "Be": 42, "check": [42, 51], "tutori": [42, 44, 46, 47, 49, 53], "simpl": [42, 45, 47], "wish": [42, 44], "read": 42, "develop": 42, "guid": 42, "convent": [13, 14, 44], "mathemat": 49, "foundat": 52, "api": [42, 44], "subpackag": [], "packag": [], "our": [44, 46, 47, 51, 52, 53, 54], "choic": [44, 51], "standard": [44, 53, 54], "patient": [13, 14, 42, 43, 44, 51], "anterior": 44, "inferior": 44, "superior": 44, "counterclockwis": 44, "o": [44, 51, 52, 53, 54], "clock": 44, "There": [44, 51], "primari": 44, "item": [44, 53], "sinogram": 44, "seri": [9, 13, 44], "impli": 44, "90": [44, 50, 51, 53, 54], "circ": [41, 44, 45, 47, 54], "counterintuit": 44, "l_x": 44, "l_y": 44, "l_": 44, "taken": [42, 43, 52, 53, 54], "correpsond": [], "arrang": 44, "smaller": 44, "object_tensor": 44, "largest": 44, "smallest": 44, "image_tensor": 44, "10th": 44, "softwar": [], "properli": [44, 51], "ax": [46, 47, 48, 49, 50, 52, 53], "achiev": [], "invert": [], "plot": [45, 47, 49, 50, 53, 54], "horizont": [], "vertic": [], "section": 44, "unless": [44, 48], "spcifi": 44, "symbol": 44, "f_j": 44, "ji": 44, "compon": [44, 49], "quantifi": [], "still": 44, "four": [], "previou": 44, "never": [], "explicitli": [], "trick": [], "without": [], "actual": 52, "establish": 44, "paradigm": 44, "thu": 44, "mostli": 44, "who": 44, "novel": 44, "howev": [44, 52, 53], "everyon": 44, "know": [44, 51, 53], "built": [44, 45, 51], "around": [44, 45], "fundament": 44, "class": [9, 13, 44, 52, 53], "vec": [44, 47, 50], "worth": 52, "physic": [], "ratio": [44, 50], "quantiti": [44, 52], "doe": [44, 46, 50, 52], "128x128x128": [44, 52], "64": [44, 45, 46, 50, 52, 53, 54], "resolut": [41, 44], "128x128": [44, 52], "2097152": [44, 52], "1048576": [44, 52], "8": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "byte": 44, "17": [44, 48, 51, 54], "6tb": 44, "harddriv": 44, "fortun": 44, "spars": 44, "memori": [], "effici": 44, "non": 48, "squar": 44, "practic": [44, 53, 54], "matric": [44, 49], "b_i": 44, "phenonema": [], "phenomena": [44, 46], "peculiar": 44, "featur": [17, 18, 44], "g_": [44, 45], "otim": [44, 45, 47, 48, 49, 54], "hat": [1, 2, 44, 45, 46, 47, 48, 49, 52, 54], "specif": 44, "lie": [44, 53], "prod_i": 44, "To": [44, 47], "written": [44, 50, 53], "prod_": 44, "a_1": [44, 49, 54], "a_2": [44, 49, 54], "sai": 44, "travel": 44, "circular": [44, 48], "orbit": 44, "direct": 44, "turn": [44, 45], "3d": [44, 45, 52, 53], "net": 44, "unlik": 44, "fact": [44, 51, 54], "lor": 44, "predefin": 44, "folder": [9, 44, 51, 54], "realtiti": [44, 54], "henc": 44, "random": 44, "determinist": 44, "simplic": 44, "let": [44, 45, 47, 48, 49, 52, 53, 54], "write": 44, "known": [44, 52, 53], "poisson": [44, 50, 53, 54], "hold": 44, "spatial": [0, 5, 35, 44], "interv": 44, "begin": [44, 46, 51], "deriv": 44, "denot": 44, "sim": 44, "now": [44, 45, 47, 48, 49, 51, 52, 53, 54], "seek": 44, "solut": 44, "densiti": 44, "prod_j": 44, "end": [44, 46], "nabla_": 44, "yield": [44, 47, 52], "realiti": [44, 52], "bar": 44, "work": 44, "e_": 44, "understand": 44, "distribut": [44, 48, 53], "like": [41, 44, 45, 46, 52, 53], "just": [44, 46], "question": 44, "e_f": 44, "claim": [44, 46], "_j": 44, "re": [41, 44, 47, 49, 51, 52, 53], "ensur": [44, 45, 51, 54], "substitut": 44, "rewrit": 44, "lh": [44, 47], "better": [44, 49, 50], "box": [44, 50], "basic": [44, 50], "converg": [22, 23, 24, 44], "save": [1, 2, 9, 13, 14, 44, 53, 54], "cost": 44, "small": [44, 47], "theta_0": 44, "theta_": 44, "g_m": [1, 2, 44], "theta_m": 44, "h_m": [1, 2, 44], "h_mf": 44, "cycl": [42, 43, 44], "move": [44, 54], "current": [8, 10, 44, 54], "plan": 44, "futur": 44, "involv": [44, 52], "modififi": 44, "denomin": 44, "s_m": 44, "encapsul": 44, "belief": 44, "reason": [44, 52], "adjac": 44, "radiopharmaceut": 44, "concentr": 44, "strength": 44, "temperatur": 44, "mechan": 44, "problem": 44, "approach": 44, "solv": 44, "osl": 44, "formal": 44, "second": [44, 47, 54], "bsr": 44, "72": [45, 50], "numpi": [9, 10, 45, 46, 47, 48, 49, 50, 51, 52, 53], "matplotlib": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "pyplot": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "plt": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "torchvis": [45, 46, 47, 48, 49], "cuda": [45, 46, 47, 48, 49, 50, 53], "is_avail": [45, 46, 47, 48, 49, 50, 53], "els": [45, 46, 47, 48, 49, 50, 53], "cpu": [45, 46, 47, 48, 49, 50, 51, 53, 54], "analog": 45, "73": [45, 50], "9": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "16": [9, 45, 51, 53, 54], "modal": [8, 10, 12, 13, 14, 17, 18, 44, 45], "74": [45, 50], "ones": [45, 46, 47, 48, 49, 50], "128": [45, 46, 47, 48, 49, 50, 51, 52, 53], "cylind": [45, 47], "meshgrid": [45, 46, 47, 48, 49, 50, 52], "75": [45, 51], "linspac": [45, 46, 47, 48, 49, 50, 52], "xv": [45, 46, 47, 48, 49, 50, 52], "yv": [45, 46, 47, 48, 49, 50, 52], "zv": [45, 46, 47, 48, 49, 50, 52], "ab": [45, 46, 47, 48, 49, 50, 52], "76": 45, "unsqueez": [45, 46, 47, 48, 49, 50, 52], "dim": [45, 46, 47, 48, 49, 50, 52], "coron": [45, 46, 50, 53, 54], "sagit": 45, "perspect": 45, "34": 45, "fig": [45, 46, 47, 48, 49, 50, 52, 53], "subplot": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "figsiz": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "131": [45, 46], "pcolormesh": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "cmap": [45, 46, 51, 52, 53, 54], "greys_r": [45, 46, 51, 52, 54], "xlabel": [45, 46, 53], "ylabel": [45, 46, 53], "titl": [45, 46, 51, 54], "132": [45, 46, 52], "sagitt": [45, 46, 54], "133": [45, 46], "tight_layout": [45, 46, 53], "think": [45, 52], "rai": 45, "alwai": 45, "37": [45, 49], "proj": [45, 52], "77": 45, "45": [45, 49], "270": 45, "obj_rot": 45, "permut": 45, "53": 45, "proj_45": 45, "54": 45, "grei": 45, "lt": [45, 47, 50, 51, 52, 53, 54], "collect": [45, 47, 53], "quadmesh": [45, 47, 53], "0x7fb33e5c2e80": 45, "gt": [41, 45, 47, 50, 51, 52, 53, 54], "80": [45, 53], "arang": [45, 46, 47, 48, 49, 50, 52], "360": [41, 45, 46, 47, 48, 49, 50, 52], "82": [45, 50], "len": [45, 46, 47, 48, 49, 52], "84": 45, "85": 45, "enumer": [45, 46, 47, 48, 49, 52, 53], "86": [45, 50], "39": [45, 46, 51], "18": [46, 51, 54], "talk": 46, "how": [46, 47, 48, 52, 53, 54], "empti": [46, 51], "22": [46, 49, 54], "23": [46, 54], "bp_single_angl": [46, 47], "bmatrix": 46, "15": [46, 48, 51, 52, 53, 54], "duplic": 46, "nopw": 46, "everyth": [46, 49], "24": [46, 54], "obj_bp": [46, 47, 48, 50], "did": [46, 53, 54], "25": [46, 48, 49, 50, 54], "clearli": 46, "theres": 46, "job": 46, "40": [47, 48, 49, 50], "finish": 47, "41": 47, "suppos": 47, "green": 47, "int_l": 47, "cdot": 47, "perpendicular": 47, "thought": [47, 52], "instead": 47, "receiv": [42, 43, 47], "mayb": 47, "word": 47, "42": [47, 49], "concept": 47, "43": [47, 49], "44": [47, 49], "mu10": 47, "cumsum": [47, 48, 49], "flip": [47, 48, 49], "exp": [47, 48, 49], "opposit": 47, "rh": 47, "multipli": [47, 54], "object_10": 47, "projection_10": 47, "58": 47, "0x7f24c35a0d00": 47, "notic": [47, 49], "darker": 47, "loop": 47, "59": 47, "mu_i": [47, 48, 49], "60": [47, 48, 49, 50, 52], "30": [42, 43, 47, 48, 49, 50, 54], "50": [47, 48, 49, 50], "7": [42, 43, 47, 48, 49, 50, 51, 52, 53, 54], "zip": [47, 48, 49, 50, 53], "show": [47, 48, 49, 50, 51, 54], "matter": 47, "thing": [47, 51, 53, 54], "61": 47, "obj_bp_i": [47, 48], "red": 48, "closer": 48, "narrow": 48, "respons": 48, "realist": [48, 54], "relationship": 48, "collimator_slop": [48, 49, 50], "collimator_intercept": [48, 49, 50], "07": [48, 49], "1835": 48, "1625": 48, "1415": 48, "1205": 48, "0995": 48, "0785": 48, "0575": 48, "0365": 48, "0155": 48, "9945": 48, "9735": 48, "9525": 48, "9315": 48, "9105": 48, "8895": 48, "8685": 48, "8475": 48, "8265": 48, "8055": 48, "7845": 48, "7635": 48, "7425": 48, "7215": 48, "7005": 48, "6795": 48, "6585": 48, "6375": 48, "6165": 48, "5955": 48, "5745": 48, "5535": 48, "5325": 48, "5115": 48, "4905": 48, "4695": 48, "4485": 48, "4275": 48, "4065": 48, "3855": 48, "3645": 48, "3435": 48, "3225": 48, "3015": 48, "2805": 48, "2595": 48, "2385": 48, "2175": 48, "1965": 48, "1755": 48, "1545": 48, "1335": 48, "1125": 48, "0915": 48, "0705": 48, "0495": 48, "0285": 48, "0075": 48, "9865": 48, "9655": 48, "9445": 48, "9235": 48, "9025": 48, "8815": 48, "8605": 48, "8395": 48, "8185": 48, "7975": 48, "7765": 48, "7555": 48, "7345": 48, "7135": 48, "6925": 48, "6715": 48, "6505": 48, "6295": 48, "6085": 48, "5875": 48, "5665": 48, "5455": 48, "5245": 48, "5035": 48, "4825": 48, "4615": 48, "4405": 48, "4195": 48, "3985": 48, "3775": 48, "3565": 48, "3355": 48, "3145": 48, "2935": 48, "2725": 48, "2515": 48, "2305": 48, "2095": 48, "1885": 48, "1675": 48, "1465": 48, "1255": 48, "1045": 48, "0835": 48, "0625": 48, "0415": 48, "0205": 48, "9995": 48, "9785": 48, "9575": 48, "9365": 48, "9155": 48, "8945": 48, "8735": 48, "8525": 48, "8315": 48, "8105": 48, "7895": 48, "7685": 48, "7475": 48, "7265": 48, "7055": 48, "6845": 48, "6635": 48, "6425": 48, "6215": 48, "6005": 48, "5795": 48, "5585": 48, "5375": 48, "5165": 48, "rememb": 48, "group": [48, 49], "padding_mod": [48, 49], "x_grid": [48, 49], "y_grid": [48, 49], "repeat": [48, 49], "reshap": [48, 49, 52, 53], "code": [41, 48, 49, 53], "detach": [48, 49], "13": [48, 51, 52, 53, 54], "ve": [49, 54], "realli": 49, "been": [49, 52], "refram": 49, "sort": 49, "subspac": 49, "bigcup_": 49, "partit": 49, "link": [41, 49], "28": 49, "past": 49, "47": 49, "stuff": 49, "48": 49, "49": 49, "both": [49, 51, 53], "compartment": 49, "36": 49, "faster": [49, 50], "att_transform": [49, 50, 51, 53, 54], "psf_transform": [49, 50, 51, 53, 54], "ran": [49, 54], "quit": 49, "And": [49, 50, 53], "46": 49, "71": 50, "05": 50, "120": 50, "03": 50, "83": 50, "shown": [50, 53], "previous": 50, "alon": 50, "though": [50, 51], "tendenc": 50, "amplifi": 50, "later": [50, 51, 53, 54], "coupl": 50, "88": 50, "predict": 50, "object_predict": 50, "divis": 50, "121": [50, 51, 53, 54], "vmax": [50, 51, 53], "colorbar": [50, 51, 52, 53, 54], "122": [50, 51, 53, 54], "profil": 50, "91": 50, "line2d": 50, "0x7f60ac4fcca0": 50, "below": [41, 51, 53], "disk1": [51, 53, 54], "pytomography_tutorial_data": [51, 53, 54], "dicom_tutori": 51, "path_ct": 51, "join": [51, 53, 54], "ct_file": 51, "listdir": 51, "attenuation_map": [0, 5, 8, 12, 29, 31, 33, 51, 53, 54], "projection_data": 51, "dicom_projections_to_data": [], "isn": 51, "third": 51, "infom": 51, "figur": [51, 52, 53], "nipy_spectr": [51, 53, 54], "label": [51, 53, 54], "0x7fd69ee83cd0": [], "dicom_get_scattertew": 51, "peak": 51, "luck": [], "resiz": 53, "rescal": 51, "approxim": [], "attenuation_map_from_fil": [], "attenuation_map_from_ct_slic": [], "1419": 51, "3499755859375": 51, "89505539164563": 51, "home": [], "gpuvmadm": [], "src": [], "py": [], "runtimewarn": [], "overflow": [], "encount": [], "sample_slice_from_fil": [], "70": [51, 54], "sample_slice_from_ct_slic": [], "seismic": [], "vmin": [], "0x7fd69ac43fa0": [], "pm": [], "minor": 53, "signific": [], "implic": [], "shall": [], "shortli": [], "scanner_model": [], "radioact": [], "substanc": [], "lu177": [42, 43], "208kev": [], "symbiatseri": [], "me": [41, 51], "208": 51, "print": [35, 36, 51], "03161992134409504": [], "12485030464233879": [], "readi": [], "try": [], "reconstruct_phantom": [], "reconstruction_algorithm": [51, 53, 54], "reconstructed_object": [51, 53, 54], "reconstructed_object_atten_from_fil": [], "reconstructed_object_atten_from_ct_slic": [], "ds_recon": 51, "read_fil": 51, "scanner_recon": 51, "reconstructed_object_vendor": [], "pixel_arrai": 51, "three": [35, 36, 51, 52], "slice_atten_from_fil": [], "slice_atten_from_ct_slic": [], "slice_vendor": 51, "14": [51, 53, 54], "110": 51, "care": 51, "observ": 51, "bright": 51, "lobe": 51, "than": 51, "tool": 52, "c_": 52, "discuss": [44, 52], "arbtriari": 52, "arbitrari": 52, "might": 52, "shouldn": 52, "discret": [44, 52], "albeit": 52, "That": 52, "said": 52, "intens": 52, "everi": [13, 14, 42, 43, 52], "possibl": 52, "experi": 52, "rectangl": 52, "object_truth": 52, "0x7f0df19fd0a0": [], "1cm": 52, "angular": 52, "degre": [52, 54], "With": 52, "phenomenon": 52, "set_titl": [52, 53], "At": 52, "cube": 52, "darkest": 52, "lighter": 52, "outsid": 52, "semi": 52, "transpar": 52, "real": [52, 53, 54], "life": [52, 54], "instanc": [13, 14, 52, 53], "object_new": [], "But": 52, "0x7f0dbd123fd0": [], "n_": [51, 52], "mathcal": 52, "omega": 52, "bracket": 52, "fourier": 52, "ramp": 52, "freq_fft": 52, "fft": 52, "fftfreq": 52, "image_fft": 52, "image_filt": 52, "ifft": 52, "object_fbp": 52, "0x7f0dbd0699a0": [], "longer": 52, "artifact": 52, "phantom": 53, "skimag": 53, "scipi": [], "ndimag": [], "zoom": [], "simind_tutori": [53, 54], "bkg": [53, 54], "l_lung": [53, 54], "r_lung": [53, 54], "l_kidnei": [53, 54], "r_kidnei": [53, 54], "salivari": [53, 54], "bladder": [53, 54], "2500": [53, 54], "450": [53, 54], "100": [53, 54], "mbq": [53, 54], "activity_dict": 53, "multi_project": [53, 54], "h00": [53, 54], "lowerscatt": [53, 54], "upperscatt": [53, 54], "0x7f3fb01940d0": [], "These": [51, 53], "introductori": 53, "goal": 53, "accuraci": 53, "384": 53, "integ": [9, 35, 36, 53], "signifi": 53, "756": 53, "512": [41, 53], "mask_idx_dict": 53, "dictionari": 53, "kei": 53, "organ_vol_dict": 53, "volum": 53, "ml": 53, "mask_vol_dict": 53, "gtfile": 53, "phantom_organ": 53, "_act_av": 53, "bin": [44, 53], "gt_shape": 53, "768": 53, "gt_space": 53, "075": 53, "gt_path": 53, "gti": 53, "fromfil": 53, "tranpos": 53, "astyp": 53, "prod": 53, "anti_alias": 53, "overlap": 53, "0x7f3fb00e8ee0": [], "improv": 53, "mu208": [53, 54], "hct": [53, 54], "iteraton": 53, "comparetogroundtruth": 53, "avg_counts_per_ml": 53, "std_counts_per_ml": 53, "counts_per_ml": 53, "deviat": 53, "std": 53, "append": 53, "minut": 53, "graphic": 53, "card": 53, "inject": [42, 43, 53], "clinic": [53, 54], "counts_to_mbq": 53, "visual": 53, "o1": 53, "0x7f3f9c7b3280": [], "plot_bvc": 53, "color": 53, "activity_mbq_per_ml": 53, "activity_noise_mbq_per_ml": 53, "true_activity_mbq_per_ml": 53, "activity_bias_pct": 53, "activity_noise_pct": 53, "marker": 53, "markers": 53, "lw": 53, "ravel": 53, "blue": 53, "grid": 53, "tick_param": 53, "major": 53, "labels": 53, "legend": 53, "facecolor": 53, "white": 53, "framealpha": 53, "frameon": 53, "loc": 53, "add_subplot": 53, "111": 53, "labelcolor": 53, "fontsiz": 53, "assess": 53, "capabl": 53, "download": [54, 55], "directori": [51, 54], "commonli": 54, "background": 54, "lesion": 54, "ad": 54, "bodi": 54, "single_project": 54, "body1t2ew6_tot_w2": 54, "hdr": 54, "body1t2ew6_tot_w1": 54, "body1t2ew6_tot_w3": 54, "load": 54, "fashion": 54, "body1": 54, "mirror": 54, "ct_slice_coron": [], "projection_coron": [], "ct_slice_sagitt": [], "projection_sagitt": [], "141": 54, "142": 54, "143": 54, "144": 54, "variant": 54, "proportion": 54, "arbtrari": 54, "noteworthi": 54, "cp": 54, "scenario": 54, "therefor": [44, 54], "were": 54, "0x7fced06a5490": [], "decid": 54, "19": [51, 54], "0x7fced079f640": [], "noisi": 54, "free": 54, "21": [51, 54], "0x7fced62e2850": [], "earlier": 54, "filter": 55, "quantit": 55, "analysi": 55, "param": [35, 39], "ksldfjlsdkjfskl": [], "target": [42, 43], "therapi": [41, 42, 43], "dotat": [42, 43], "neuroendocrin": [42, 43], "tumour": [42, 43], "gbq": [42, 43], "administ": [42, 43], "week": [42, 43], "column": [41, 42, 43], "dai": [42, 43], "row": [42, 43], "diff": [], "io_util": [], "sy": [41, 51], "keyboardinterrupt": [], "traceback": [], "recent": [], "doc": [], "notebook": [], "t_siminddata": [], "ipynb": [], "cell": [], "29": [], "href": [], "vscode": [], "ssh": [], "remot": [], "2bgpuvm00004jhubvm01": [], "canadacentr": [], "cloudapp": [], "azur": [], "com": [], "x40sdnnjb2rllxjlbw90zq": [], "163": [], "161": [], "subset_indic": [], "subset_indices_arrai": [], "162": [], "bp": [], "norm_factor": [], "164": [], "165": [], "113": [], "112": [], "norm_constant_i": [], "ang_idx_parallel": [], "114": [], "115": [], "env": [], "lib": [], "python3": [], "site": [], "autograd": [], "grad_mod": [], "27": 54, "_decoratorcontextmanag": [], "decorate_context": [], "functool": [], "wrap": [], "func": [], "69": [], "66": [], "67": [], "68": [], "0x7f9542707790": [], "0x7f954804eeb0": [], "0x7f9548341850": [], "spectsystemmatrix": [22, 23, 24, 51, 52, 53, 54], "hole": [22, 23, 24], "diverg": [22, 23, 24], "well": [22, 23, 24], "speed": [22, 23, 24], "increas": [22, 23, 24], "usag": [22, 23, 24], "0x7fb20b0c5dc0": [], "filenotfounderror": [], "t_dicomdata": [], "x13sdnnjb2rllxjlbw90zq": [], "219": [], "217": [], "window_low": [], "window_upp": [], "218": [], "hu2mu_convers": [], "220": [], "221": [], "ct_hu": [], "265": [], "250": [], "251": [], "252": [], "253": [], "254": [], "255": [], "256": [], "257": [], "263": [], "264": [], "hu_ct": [], "mu_spect": [], "266": [], "b1opt": [], "b2opt": [], "atten": [], "267": [], "a1opt": [], "173": [], "170": [], "hu_cortical_bon": [], "171": [], "172": [], "cbone": [], "e_ct": [], "174": [], "175": [], "241": [], "232": [], "233": [], "234": [], "235": [], "239": [], "240": [], "edata": [], "mudata_cb": [], "242": [], "mudata_wat": [], "243": [], "mudata_air": [], "107": [], "98": [], "99": [], "101": [], "105": [], "106": [], "108": [], "readlin": [], "109": [], "rho": [], "errno": [], "No": [], "nist_attenuation_data": [], "bonecort": [], "csv": [], "nameerror": [], "x15sdnnjb2rllxjlbw90zq": [], "x26sdnnjb2rllxjlbw90zq": [], "0x7f3d102c0dc0": [], "typeerror": [], "x16sdnnjb2rllxjlbw90zq": [], "2746": [], "alpha": [], "norm": [], "shade": [], "antialias": [], "2741": [], "_copy_docstring_and_deprec": [], "2742": [], "2743": [], "2744": [], "2745": [], "__ret": [], "gca": [], "2747": [], "2748": [], "2749": [], "2750": [], "sci": [], "2751": [], "1442": [], "_preprocess_data": [], "inner": [], "1439": [], "1440": [], "1441": [], "sanitize_sequ": [], "1444": [], "new_sig": [], "bind": [], "1445": [], "auto_label": [], "label_nam": [], "1446": [], "_ax": [], "6220": [], "6217": [], "6218": [], "setdefault": [], "edgecolor": [], "c": [], "_pcolorarg": [], "6221": [], "6222": [], "6223": [], "except": [], "rgb": [], "5697": [], "funcnam": [], "5694": [], "5696": [], "asanyarrai": [], "5698": [], "nrow": [], "ncol": [], "5699": [], "gouraud": [], "_tensor": [], "757": [], "__array__": [], "755": [], "handle_torch_funct": [], "758": [], "759": [], "copi": [13, 14, 51], "host": [], "0x7f3d1008dfd0": [], "0x7f3cfc7947f0": [], "0x7f66ccd77d90": [], "0x7f66c8ad96d0": [], "0x7f5955a0d070": 52, "object_bp": 52, "norm_bp": 52, "axial_slic": 52, "0x7f5921114fa0": 52, "much": [51, 52], "0x7f592105af40": 52, "0x7fc6201ae2e0": [], "0x7fc6fc2b3880": [], "0x7fc60c715dc0": [], "0x7f23707097c0": [], "0x7f237406db50": [], "0x7f23743d2730": [], "datatp": [], "l_r": 44, "2dpet": [], "transaxi": 44, "g_i": 44, "a_j": 44, "decompos": 44, "regardless": [], "either": [44, 51], "get_file_meta": 13, "sop_instance_uid": [13, 14], "sop_class_uid": [13, 14], "filemetadataset": 13, "generate_base_dataset": 13, "filedataset": [13, 14], "add_required_elements_to_d": 13, "add_study_and_series_inform": 13, "reference_d": [13, 14], "add_patient_inform": 13, "create_d": [13, 14], "misc": [0, 5, 35], "nist_data": [0, 5, 35], "dicom_cr": [0, 5, 12, 14], "_set_recon_params_str": [1, 2], "uniqu": [1, 2, 13, 14], "identifi": [1, 2, 13, 14], "__version__": 5, "compute_max_slice_loc_ct": [7, 8], "get_metadata": [9, 11, 51, 53, 54], "ct_to_mumap": [9, 10], "get_affine_matrix": [9, 10], "filenam": [9, 10], "_get_affine_spect": 9, "_get_affine_ct": 9, "save_dcm": [9, 51], "save_path": [9, 51], "recon_method_str": [9, 51], "scale_factor": 9, "1024": 9, "studi": [9, 13, 14, 51], "bit": 9, "IN": [29, 31, 33], "wherebi": [13, 14, 35, 36], "print_collimator_paramet": [35, 36, 51], "varieti": 41, "task": 41, "col": 41, "mont": 41, "carlo": 41, "program": 41, "support": [8, 10, 41, 51], "millenium": 41, "vg": 41, "kameran": 41, "gv": 41, "legp": 41, "low": 41, "purpos": 41, "lehr": 41, "high": 41, "eegp": 41, "extend": 41, "megp": 41, "medium": [41, 51], "hegp": 41, "leur": 41, "fan": 41, "beam": 41, "ultra": 41, "ueuh": 41, "mpr": 41, "kamera": 41, "gm": 41, "ge": 41, "infinia": 41, "gi": 41, "eleg": 41, "lehx": 41, "870": 41, "g8": 41, "lhr": 41, "leh": 41, "sensit": 41, "luhr": 41, "ventri": 41, "640": 41, "optima": 41, "630": 41, "670": 41, "czt": 41, "gz": 41, "crystalcam": 41, "hh": 41, "le": 41, "rect": 41, "bw": 41, "philip": 41, "brightview": 41, "pb": 41, "cahr": 41, "cadiac": 41, "hr": 41, "von": 41, "gahlen": 41, "holland": 41, "lee": 41, "extra": [41, 51], "less": 41, "leu": 41, "leti": 41, "thyroid": 41, "me23": 41, "123": 41, "me19": 41, "190": 41, "me26": 41, "260": 41, "me30": 41, "300": 41, "me36": 41, "meti": 41, "thyro333id": 41, "he51": 41, "511": 41, "engin": 41, "dynam": 41, "corpor": 41, "ed": 41, "lem": 41, "meu": 41, "meh": 41, "mehr": 41, "mediso": 41, "nuclin": 41, "spirit": 41, "dh": 41, "leuhr": 41, "ma": 41, "anyscan": 41, "lhrh": 41, "mlegp": 41, "mhegp": 41, "pr": 41, "prism": 41, "2000": 41, "3000": 41, "leap": 41, "he": 41, "apfb": 41, "hrfb": 41, "urfb": 41, "ultrahigh": 41, "resol": 41, "si": 41, "siemen": [41, 51], "cam": 41, "ther": 41, "delu": 41, "se": 41, "lefb": 41, "uh": 41, "symbia": [41, 51], "he1": 41, "he2": 41, "extern": 42, "180": 51, "height": 51, "channel": 51, "compat": 51, "ai": 51, "0x7ff773b9beb0": [], "OR": 51, "easier": 51, "automat": 51, "0x7ff771963310": [], "uncom": 51, "string": [13, 14, 51], "recon_nam": 51, "recon_vendor": 51, "slice_pytomographi": 51, "alreadi": 51, "prevent": 51, "overwrit": 51, "itself": 51, "recon_ctslic": 51, "export": 51, "viewer": 51, "photopeak_path": 54, "upperscatter_path": 54, "lowerscatter_path": 54, "attenuation_path": 54, "photopeak_0": 54, "photopeak_90": 54, "0x7f8d48512df0": [], "0x7f8d1cb80b80": [], "photopeak_poisson": 54, "scatter_poisson": 54, "0x7f8d4860b3d0": [], "www": [], "gov": [], "pml": [], "media": 41, "compound": 41, "0x7f4e590fc1f0": [], "0x7f4e56f14160": [], "share": [0, 5, 12], "spect_metadata": [0, 5, 15, 17, 51], "spect_system_matrix": [0, 5, 22, 24], "h_mhat": [1, 2], "spectobjectmeta": [9, 10, 11, 15, 16, 17, 22, 23, 24, 29, 31, 32, 33], "spectimagemeta": [9, 10, 11, 15, 16, 17, 22, 23, 24, 29, 31, 32, 33], "spectpsfmeta": [9, 10, 11, 15, 16, 17, 31, 32, 33, 51], "primarili": 12, "secondarili": 12, "sop": 13, "uid": [13, 14], "projection_shap": [15, 16, 17], "fairli": [17, 18], "significantli": [17, 18], "spectsystemmatrixmaskedseg": [22, 23, 24], "0x7ffb109c9700": 51, "sample_slic": 51, "0x7ffb0c803820": 51, "0x7ffb0e914e20": 51, "proper": 51, "osem_4it10ss": 51, "0x7fa4b1486310": 53, "0x7fa4b032a7c0": 53, "0x7fa4b0253c70": 53, "attenuation_map_slice_coron": 54, "attenuation_map_slice_sagitt": 54, "0x7f3dee246d90": 54, "0x7f3dedfbd700": 54, "0x7f3dee1f5640": 54}, "objects": {"": [[5, 0, 0, "-", "pytomography"]], "pytomography": [[5, 1, 1, "", "__version__"], [1, 0, 0, "-", "algorithms"], [4, 0, 0, "-", "callbacks"], [5, 1, 1, "", "delta"], [5, 1, 1, "", "device"], [5, 1, 1, "", "dtype"], [12, 0, 0, "-", "io"], [17, 0, 0, "-", "metadata"], [19, 0, 0, "-", "priors"], [24, 0, 0, "-", "projections"], [5, 4, 1, "", "set_device"], [5, 4, 1, "", "set_dtype"], [33, 0, 0, "-", "transforms"], [35, 0, 0, "-", "utils"]], "pytomography.algorithms": [[1, 2, 1, "", "OSEMBSR"], [1, 2, 1, "", "OSEMOSL"], [1, 2, 1, "", "OSML"], [2, 0, 0, "-", "osem"]], "pytomography.algorithms.OSEMBSR": [[1, 3, 1, "", "__call__"], [1, 3, 1, "", "_set_recon_params_string"]], "pytomography.algorithms.OSEMOSL": [[1, 3, 1, "", "__call__"], [1, 3, 1, "", "_set_recon_params_string"]], "pytomography.algorithms.OSML": [[1, 3, 1, "", "__call__"], [1, 3, 1, "", "get_subset_splits"]], "pytomography.algorithms.osem": [[2, 2, 1, "", "OSEMBSR"], [2, 2, 1, "", "OSEMOSL"], [2, 2, 1, "", "OSML"]], "pytomography.algorithms.osem.OSEMBSR": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "_set_recon_params_string"]], "pytomography.algorithms.osem.OSEMOSL": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "_set_recon_params_string"]], "pytomography.algorithms.osem.OSML": [[2, 3, 1, "", "__call__"], [2, 3, 1, "", "get_subset_splits"]], "pytomography.callbacks": [[4, 2, 1, "", "CallBack"], [3, 0, 0, "-", "callback"]], "pytomography.callbacks.CallBack": [[4, 3, 1, "", "run"]], "pytomography.callbacks.callback": [[3, 2, 1, "", "CallBack"]], "pytomography.callbacks.callback.CallBack": [[3, 3, 1, "", "run"]], "pytomography.io": [[8, 0, 0, "-", "CT"], [10, 0, 0, "-", "SPECT"], [14, 0, 0, "-", "shared"]], "pytomography.io.CT": [[6, 0, 0, "-", "attenuation_map"], [8, 4, 1, "", "compute_max_slice_loc_CT"], [7, 0, 0, "-", "dicom"], [8, 4, 1, "", "get_HU2mu_conversion"], [8, 4, 1, "", "open_CT_file"]], "pytomography.io.CT.attenuation_map": [[6, 1, 1, "", "DATADIR"], [6, 1, 1, "", "FILE_AIR"], [6, 1, 1, "", "FILE_CBONE"], [6, 1, 1, "", "FILE_WATER"], [6, 4, 1, "", "HU_to_mu"], [6, 4, 1, "", "bilinear_transform"], [6, 4, 1, "", "get_ECT_from_corticalbone_HU"], [6, 4, 1, "", "get_HU2mu_conversion"], [6, 4, 1, "", "get_HU_corticalbone"], [6, 4, 1, "", "get_HU_from_spectrum_interp"], [6, 4, 1, "", "get_HU_mu_curve"], [6, 1, 1, "", "module_path"]], "pytomography.io.CT.dicom": [[7, 4, 1, "", "compute_max_slice_loc_CT"], [7, 4, 1, "", "open_CT_file"]], "pytomography.io.SPECT": [[10, 4, 1, "", "CT_to_mumap"], [9, 0, 0, "-", "dicom"], [10, 4, 1, "", "get_affine_matrix"], [10, 4, 1, "", "get_attenuation_map_from_CT_slices"], [10, 4, 1, "", "get_attenuation_map_from_file"], [10, 4, 1, "", "get_atteuation_map"], [10, 4, 1, "", "get_blank_below_above"], [10, 4, 1, "", "get_projections"], [10, 4, 1, "", "get_psfmeta_from_scanner_params"], [10, 4, 1, "", "get_scatter_from_TEW"], [10, 4, 1, "", "open_CT_file"], [11, 0, 0, "-", "simind"]], "pytomography.io.SPECT.dicom": [[9, 4, 1, "", "CT_to_mumap"], [9, 4, 1, "", "_get_affine_CT"], [9, 4, 1, "", "_get_affine_spect"], [9, 4, 1, "", "get_affine_matrix"], [9, 4, 1, "", "get_attenuation_map_from_CT_slices"], [9, 4, 1, "", "get_attenuation_map_from_file"], [9, 4, 1, "", "get_metadata"], [9, 4, 1, "", "get_projections"], [9, 4, 1, "", "get_psfmeta_from_scanner_params"], [9, 4, 1, "", "get_radii_and_angles"], [9, 4, 1, "", "get_scatter_from_TEW"], [9, 4, 1, "", "get_window_width"], [9, 4, 1, "", "save_dcm"], [9, 4, 1, "", "stitch_multibed"]], "pytomography.io.SPECT.simind": [[11, 4, 1, "", "combine_projection_data"], [11, 4, 1, "", "combine_scatter_data_TEW"], [11, 4, 1, "", "find_first_entry_containing_header"], [11, 4, 1, "", "get_atteuation_map"], [11, 4, 1, "", "get_metadata"], [11, 4, 1, "", "get_projections"], [11, 4, 1, "", "get_psfmeta_from_header"], [11, 4, 1, "", "get_scatter_from_TEW"], [11, 1, 1, "", "relation_dict"]], "pytomography.io.shared": [[14, 4, 1, "", "create_ds"], [13, 0, 0, "-", "dicom_creation"]], "pytomography.io.shared.dicom_creation": [[13, 4, 1, "", "add_patient_information"], [13, 4, 1, "", "add_required_elements_to_ds"], [13, 4, 1, "", "add_study_and_series_information"], [13, 4, 1, "", "create_ds"], [13, 4, 1, "", "generate_base_dataset"], [13, 4, 1, "", "get_file_meta"]], "pytomography.metadata": [[17, 2, 1, "", "ImageMeta"], [17, 2, 1, "", "ObjectMeta"], [15, 0, 0, "-", "SPECT"], [17, 2, 1, "", "SPECTImageMeta"], [17, 2, 1, "", "SPECTObjectMeta"], [17, 2, 1, "", "SPECTPSFMeta"], [18, 0, 0, "-", "metadata"]], "pytomography.metadata.ImageMeta": [[17, 3, 1, "", "__repr__"]], "pytomography.metadata.ObjectMeta": [[17, 3, 1, "", "__repr__"]], "pytomography.metadata.SPECT": [[15, 2, 1, "", "SPECTImageMeta"], [15, 2, 1, "", "SPECTObjectMeta"], [15, 2, 1, "", "SPECTPSFMeta"], [16, 0, 0, "-", "spect_metadata"]], "pytomography.metadata.SPECT.SPECTImageMeta": [[15, 3, 1, "", "compute_padded_shape"]], "pytomography.metadata.SPECT.SPECTObjectMeta": [[15, 3, 1, "", "compute_padded_shape"]], "pytomography.metadata.SPECT.spect_metadata": [[16, 2, 1, "", "SPECTImageMeta"], [16, 2, 1, "", "SPECTObjectMeta"], [16, 2, 1, "", "SPECTPSFMeta"]], "pytomography.metadata.SPECT.spect_metadata.SPECTImageMeta": [[16, 3, 1, "", "compute_padded_shape"]], "pytomography.metadata.SPECT.spect_metadata.SPECTObjectMeta": [[16, 3, 1, "", "compute_padded_shape"]], "pytomography.metadata.SPECTImageMeta": [[17, 3, 1, "", "compute_padded_shape"]], "pytomography.metadata.SPECTObjectMeta": [[17, 3, 1, "", "compute_padded_shape"]], "pytomography.metadata.metadata": [[18, 2, 1, "", "ImageMeta"], [18, 2, 1, "", "ObjectMeta"]], "pytomography.metadata.metadata.ImageMeta": [[18, 3, 1, "", "__repr__"]], "pytomography.metadata.metadata.ObjectMeta": [[18, 3, 1, "", "__repr__"]], "pytomography.priors": [[19, 2, 1, "", "AnatomyNeighbourWeight"], [19, 2, 1, "", "EuclideanNeighbourWeight"], [19, 2, 1, "", "LogCoshPrior"], [19, 2, 1, "", "NearestNeighbourPrior"], [19, 2, 1, "", "NeighbourWeight"], [19, 2, 1, "", "Prior"], [19, 2, 1, "", "QuadraticPrior"], [19, 2, 1, "", "RelativeDifferencePrior"], [19, 2, 1, "", "TopNAnatomyNeighbourWeight"], [20, 0, 0, "-", "nearest_neighbour"], [21, 0, 0, "-", "prior"]], "pytomography.priors.AnatomyNeighbourWeight": [[19, 3, 1, "", "__call__"], [19, 3, 1, "", "set_object_meta"]], "pytomography.priors.EuclideanNeighbourWeight": [[19, 3, 1, "", "__call__"]], "pytomography.priors.NearestNeighbourPrior": [[19, 3, 1, "", "compute_gradient"], [19, 3, 1, "", "set_object_meta"]], "pytomography.priors.NeighbourWeight": [[19, 3, 1, "", "__call__"], [19, 3, 1, "", "set_object_meta"]], "pytomography.priors.Prior": [[19, 3, 1, "", "compute_gradient"], [19, 3, 1, "", "set_beta_scale"], [19, 3, 1, "", "set_object"], [19, 3, 1, "", "set_object_meta"]], "pytomography.priors.TopNAnatomyNeighbourWeight": [[19, 3, 1, "", "__call__"], [19, 3, 1, "", "compute_inclusion_tensor"], [19, 3, 1, "", "set_object_meta"]], "pytomography.priors.nearest_neighbour": [[20, 2, 1, "", "AnatomyNeighbourWeight"], [20, 2, 1, "", "EuclideanNeighbourWeight"], [20, 2, 1, "", "LogCoshPrior"], [20, 2, 1, "", "NearestNeighbourPrior"], [20, 2, 1, "", "NeighbourWeight"], [20, 2, 1, "", "QuadraticPrior"], [20, 2, 1, "", "RelativeDifferencePrior"], [20, 2, 1, "", "TopNAnatomyNeighbourWeight"]], "pytomography.priors.nearest_neighbour.AnatomyNeighbourWeight": [[20, 3, 1, "", "__call__"], [20, 3, 1, "", "set_object_meta"]], "pytomography.priors.nearest_neighbour.EuclideanNeighbourWeight": [[20, 3, 1, "", "__call__"]], "pytomography.priors.nearest_neighbour.NearestNeighbourPrior": [[20, 3, 1, "", "compute_gradient"], [20, 3, 1, "", "set_object_meta"]], "pytomography.priors.nearest_neighbour.NeighbourWeight": [[20, 3, 1, "", "__call__"], [20, 3, 1, "", "set_object_meta"]], "pytomography.priors.nearest_neighbour.TopNAnatomyNeighbourWeight": [[20, 3, 1, "", "__call__"], [20, 3, 1, "", "compute_inclusion_tensor"], [20, 3, 1, "", "set_object_meta"]], "pytomography.priors.prior": [[21, 2, 1, "", "Prior"]], "pytomography.priors.prior.Prior": [[21, 3, 1, "", "compute_gradient"], [21, 3, 1, "", "set_beta_scale"], [21, 3, 1, "", "set_object"], [21, 3, 1, "", "set_object_meta"]], "pytomography.projections": [[22, 0, 0, "-", "SPECT"], [24, 2, 1, "", "SPECTSystemMatrix"], [24, 2, 1, "", "SPECTSystemMatrixMaskedSegments"], [24, 2, 1, "", "SystemMatrix"], [25, 0, 0, "-", "system_matrix"]], "pytomography.projections.SPECT": [[22, 2, 1, "", "SPECTSystemMatrix"], [22, 2, 1, "", "SPECTSystemMatrixMaskedSegments"], [23, 0, 0, "-", "spect_system_matrix"]], "pytomography.projections.SPECT.SPECTSystemMatrix": [[22, 3, 1, "", "backward"], [22, 3, 1, "", "forward"]], "pytomography.projections.SPECT.SPECTSystemMatrixMaskedSegments": [[22, 3, 1, "", "backward"], [22, 3, 1, "", "forward"]], "pytomography.projections.SPECT.spect_system_matrix": [[23, 2, 1, "", "SPECTSystemMatrix"], [23, 2, 1, "", "SPECTSystemMatrixMaskedSegments"]], "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrix": [[23, 3, 1, "", "backward"], [23, 3, 1, "", "forward"]], "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrixMaskedSegments": [[23, 3, 1, "", "backward"], [23, 3, 1, "", "forward"]], "pytomography.projections.SPECTSystemMatrix": [[24, 3, 1, "", "backward"], [24, 3, 1, "", "forward"]], "pytomography.projections.SPECTSystemMatrixMaskedSegments": [[24, 3, 1, "", "backward"], [24, 3, 1, "", "forward"]], "pytomography.projections.SystemMatrix": [[24, 3, 1, "", "backward"], [24, 3, 1, "", "forward"], [24, 3, 1, "", "initialize_transforms"]], "pytomography.projections.system_matrix": [[25, 2, 1, "", "SystemMatrix"]], "pytomography.projections.system_matrix.SystemMatrix": [[25, 3, 1, "", "backward"], [25, 3, 1, "", "forward"], [25, 3, 1, "", "initialize_transforms"]], "pytomography.transforms": [[33, 2, 1, "", "CutOffTransform"], [27, 0, 0, "-", "PET"], [33, 2, 1, "", "PETAttenuationTransform"], [33, 2, 1, "", "PETPSFTransform"], [31, 0, 0, "-", "SPECT"], [33, 2, 1, "", "SPECTAttenuationTransform"], [33, 2, 1, "", "SPECTPSFTransform"], [33, 2, 1, "", "Transform"], [34, 0, 0, "-", "transform"]], "pytomography.transforms.CutOffTransform": [[33, 3, 1, "", "backward"], [33, 3, 1, "", "forward"]], "pytomography.transforms.PET": [[27, 2, 1, "", "PETAttenuationTransform"], [27, 2, 1, "", "PETPSFTransform"], [26, 0, 0, "-", "attenuation"], [28, 0, 0, "-", "psf"]], "pytomography.transforms.PET.PETAttenuationTransform": [[27, 3, 1, "", "backward"], [27, 3, 1, "", "configure"], [27, 3, 1, "", "forward"]], "pytomography.transforms.PET.PETPSFTransform": [[27, 3, 1, "", "backward"], [27, 3, 1, "", "configure"], [27, 3, 1, "", "construct_matrix"], [27, 3, 1, "", "forward"]], "pytomography.transforms.PET.attenuation": [[26, 2, 1, "", "PETAttenuationTransform"], [26, 4, 1, "", "get_prob_of_detection_matrix"]], "pytomography.transforms.PET.attenuation.PETAttenuationTransform": [[26, 3, 1, "", "backward"], [26, 3, 1, "", "configure"], [26, 3, 1, "", "forward"]], "pytomography.transforms.PET.psf": [[28, 2, 1, "", "PETPSFTransform"], [28, 4, 1, "", "kernel_noncol"], [28, 4, 1, "", "kernel_penetration"], [28, 4, 1, "", "kernel_scattering"]], "pytomography.transforms.PET.psf.PETPSFTransform": [[28, 3, 1, "", "backward"], [28, 3, 1, "", "configure"], [28, 3, 1, "", "construct_matrix"], [28, 3, 1, "", "forward"]], "pytomography.transforms.PETAttenuationTransform": [[33, 3, 1, "", "backward"], [33, 3, 1, "", "configure"], [33, 3, 1, "", "forward"]], "pytomography.transforms.PETPSFTransform": [[33, 3, 1, "", "backward"], [33, 3, 1, "", "configure"], [33, 3, 1, "", "construct_matrix"], [33, 3, 1, "", "forward"]], "pytomography.transforms.SPECT": [[31, 2, 1, "", "CutOffTransform"], [31, 2, 1, "", "SPECTAttenuationTransform"], [31, 2, 1, "", "SPECTPSFTransform"], [29, 0, 0, "-", "atteunation"], [30, 0, 0, "-", "cutoff"], [32, 0, 0, "-", "psf"]], "pytomography.transforms.SPECT.CutOffTransform": [[31, 3, 1, "", "backward"], [31, 3, 1, "", "forward"]], "pytomography.transforms.SPECT.SPECTAttenuationTransform": [[31, 3, 1, "", "backward"], [31, 3, 1, "", "configure"], [31, 3, 1, "", "forward"]], "pytomography.transforms.SPECT.SPECTPSFTransform": [[31, 3, 1, "", "apply_psf"], [31, 3, 1, "", "backward"], [31, 3, 1, "", "compute_kernel_size"], [31, 3, 1, "", "configure"], [31, 3, 1, "", "forward"], [31, 3, 1, "", "get_sigma"]], "pytomography.transforms.SPECT.atteunation": [[29, 2, 1, "", "SPECTAttenuationTransform"], [29, 4, 1, "", "get_prob_of_detection_matrix"]], "pytomography.transforms.SPECT.atteunation.SPECTAttenuationTransform": [[29, 3, 1, "", "backward"], [29, 3, 1, "", "configure"], [29, 3, 1, "", "forward"]], "pytomography.transforms.SPECT.cutoff": [[30, 2, 1, "", "CutOffTransform"]], "pytomography.transforms.SPECT.cutoff.CutOffTransform": [[30, 3, 1, "", "backward"], [30, 3, 1, "", "forward"]], "pytomography.transforms.SPECT.psf": [[32, 2, 1, "", "GaussianBlurNet"], [32, 2, 1, "", "SPECTPSFTransform"], [32, 4, 1, "", "get_1D_PSF_layer"]], "pytomography.transforms.SPECT.psf.GaussianBlurNet": [[32, 3, 1, "", "forward"]], "pytomography.transforms.SPECT.psf.SPECTPSFTransform": [[32, 3, 1, "", "apply_psf"], [32, 3, 1, "", "backward"], [32, 3, 1, "", "compute_kernel_size"], [32, 3, 1, "", "configure"], [32, 3, 1, "", "forward"], [32, 3, 1, "", "get_sigma"]], "pytomography.transforms.SPECTAttenuationTransform": [[33, 3, 1, "", "backward"], [33, 3, 1, "", "configure"], [33, 3, 1, "", "forward"]], "pytomography.transforms.SPECTPSFTransform": [[33, 3, 1, "", "apply_psf"], [33, 3, 1, "", "backward"], [33, 3, 1, "", "compute_kernel_size"], [33, 3, 1, "", "configure"], [33, 3, 1, "", "forward"], [33, 3, 1, "", "get_sigma"]], "pytomography.transforms.Transform": [[33, 3, 1, "", "backward"], [33, 3, 1, "", "configure"], [33, 3, 1, "", "forward"]], "pytomography.transforms.transform": [[34, 2, 1, "", "Transform"]], "pytomography.transforms.transform.Transform": [[34, 3, 1, "", "backward"], [34, 3, 1, "", "configure"], [34, 3, 1, "", "forward"]], "pytomography.utils": [[35, 4, 1, "", "compute_TEW"], [35, 4, 1, "", "compute_pad_size"], [35, 4, 1, "", "dual_sqrt_exponential"], [35, 4, 1, "", "get_E_mu_data_from_datasheet"], [35, 4, 1, "", "get_blank_below_above"], [35, 4, 1, "", "get_distance"], [35, 4, 1, "", "get_mu_from_spectrum_interp"], [35, 4, 1, "", "get_object_nearest_neighbour"], [36, 0, 0, "-", "misc"], [37, 0, 0, "-", "nist_data"], [35, 4, 1, "", "pad_image"], [35, 4, 1, "", "pad_object"], [35, 4, 1, "", "pad_object_z"], [35, 4, 1, "", "print_collimator_parameters"], [35, 4, 1, "", "rev_cumsum"], [35, 4, 1, "", "rotate_detector_z"], [38, 0, 0, "-", "scatter"], [39, 0, 0, "-", "spatial"], [35, 4, 1, "", "unpad_image"], [35, 4, 1, "", "unpad_object"], [35, 4, 1, "", "unpad_object_z"]], "pytomography.utils.misc": [[36, 4, 1, "", "get_blank_below_above"], [36, 4, 1, "", "get_distance"], [36, 4, 1, "", "get_object_nearest_neighbour"], [36, 4, 1, "", "print_collimator_parameters"], [36, 4, 1, "", "rev_cumsum"]], "pytomography.utils.nist_data": [[37, 4, 1, "", "dual_sqrt_exponential"], [37, 4, 1, "", "get_E_mu_data_from_datasheet"], [37, 4, 1, "", "get_mu_from_spectrum_interp"]], "pytomography.utils.scatter": [[38, 4, 1, "", "compute_TEW"]], "pytomography.utils.spatial": [[39, 4, 1, "", "compute_pad_size"], [39, 4, 1, "", "compute_pad_size_padded"], [39, 4, 1, "", "pad_image"], [39, 4, 1, "", "pad_object"], [39, 4, 1, "", "pad_object_z"], [39, 4, 1, "", "rotate_detector_z"], [39, 4, 1, "", "unpad_image"], [39, 4, 1, "", "unpad_object"], [39, 4, 1, "", "unpad_object_z"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "pytomographi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43], "algorithm": [1, 2, 42, 43, 44], "submodul": [1, 4, 8, 10, 14, 15, 17, 19, 22, 24, 27, 31, 33, 35], "packag": [1, 4, 5, 8, 10, 14, 15, 17, 19, 22, 24, 27, 31, 33, 35], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42], "class": [1, 2, 3, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "osem": 2, "modul": [2, 3, 6, 7, 9, 11, 13, 16, 18, 20, 21, 23, 25, 26, 28, 29, 30, 32, 34, 36, 37, 38, 39], "callback": [3, 4], "subpackag": [5, 12, 17, 24, 33], "function": [5, 6, 7, 8, 9, 10, 11, 13, 14, 26, 28, 29, 32, 35, 36, 37, 38, 39, 45], "attribut": [5, 6, 11], "io": [6, 7, 8, 9, 10, 11, 12, 13, 14], "spect": [9, 10, 11, 15, 16, 22, 23, 29, 30, 31, 32, 44, 51, 52, 53, 54], "dicom": [7, 9, 51], "helper": [], "simind": [11, 53, 54], "metadata": [15, 16, 17, 18], "prior": [19, 20, 21, 44], "nearest_neighbour": 20, "project": [22, 23, 24, 25, 44, 52, 53, 54], "system_matrix": 25, "transform": [26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 51], "pet": [26, 27, 28], "attenu": [26, 51], "psf": [28, 32, 51], "atteun": 29, "cutoff": 30, "util": [35, 36, 37, 38, 39], "helper_funct": [], "develop": 40, "": 40, "guid": 40, "support": [42, 43], "modal": [42, 43], "reconstruct": [42, 43, 44, 51, 53, 54], "datatyp": [42, 43, 44], "instal": [42, 43], "manual": 44, "convent": [], "coordin": 44, "arrai": [], "mathemat": 44, "foundat": 44, "map": [], "scatter": [38, 44], "fundament": 45, "oper": 45, "idea": 45, "The": 45, "rotat": 45, "last": [46, 47, 48, 50], "time": [46, 47, 48, 50], "thi": [46, 47, 48, 50], "evalu": 47, "p": 47, "x": 47, "y": 47, "z": 47, "theta": 47, "data": [41, 51, 53, 54], "object": [44, 51], "plot": [], "implement": 52, "filter": 52, "back": 52, "quantit": 53, "analysi": 53, "part": [51, 53], "1": [51, 53, 54], "open": [51, 53], "2": [51, 53, 54], "obtain": 53, "organ": 53, "mask": 53, "3": 53, "case": 54, "singl": 54, "file": 54, "multipl": 54, "tutori": 55, "io_util": [], "imag": 44, "datatp": [], "dicom_cr": 13, "ct": [6, 7, 8], "attenuation_map": 6, "misc": 36, "nist_data": 37, "spatial": 39, "extern": 41, "collim": 41, "model": 51, "save": 51, "nist": 41, "share": [13, 14], "spect_metadata": 16, "spect_system_matrix": 23, "system": 51, "matrix": 51}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"API Reference": [[0, "api-reference"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "Submodules": [[1, "submodules"], [4, "submodules"], [8, "submodules"], [10, "submodules"], [14, "submodules"], [15, "submodules"], [17, "submodules"], [19, "submodules"], [22, "submodules"], [24, "submodules"], [27, "submodules"], [31, "submodules"], [33, "submodules"], [35, "submodules"]], "Package Contents": [[1, "package-contents"], [4, "package-contents"], [5, "package-contents"], [8, "package-contents"], [10, "package-contents"], [14, "package-contents"], [15, "package-contents"], [17, "package-contents"], [19, "package-contents"], [22, "package-contents"], [24, "package-contents"], [27, "package-contents"], [31, "package-contents"], [33, "package-contents"], [35, "package-contents"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [16, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [23, "module-contents"], [25, "module-contents"], [26, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [32, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"]], "pytomography.callbacks.callback": [[3, "module-pytomography.callbacks.callback"]], "pytomography.callbacks": [[4, "module-pytomography.callbacks"]], "pytomography": [[5, "module-pytomography"]], "Subpackages": [[5, "subpackages"], [12, "subpackages"], [17, "subpackages"], [24, "subpackages"], [33, "subpackages"]], "Functions": [[5, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [13, "functions"], [14, "functions"], [26, "functions"], [28, "functions"], [29, "functions"], [32, "functions"], [35, "functions"], [36, "functions"], [37, "functions"], [38, "functions"], [39, "functions"]], "Attributes": [[5, "attributes"], [6, "attributes"], [11, "attributes"]], "pytomography.io.CT.attenuation_map": [[6, "module-pytomography.io.CT.attenuation_map"]], "pytomography.io.CT.dicom": [[7, "module-pytomography.io.CT.dicom"]], "pytomography.io.CT": [[8, "module-pytomography.io.CT"]], "pytomography.io.SPECT.dicom": [[9, "module-pytomography.io.SPECT.dicom"]], "pytomography.io.SPECT": [[10, "module-pytomography.io.SPECT"]], "pytomography.io.SPECT.simind": [[11, "module-pytomography.io.SPECT.simind"]], "pytomography.io": [[12, "module-pytomography.io"]], "pytomography.io.shared.dicom_creation": [[13, "module-pytomography.io.shared.dicom_creation"]], "pytomography.io.shared": [[14, "module-pytomography.io.shared"]], "pytomography.metadata.SPECT": [[15, "module-pytomography.metadata.SPECT"]], "pytomography.metadata.SPECT.spect_metadata": [[16, "module-pytomography.metadata.SPECT.spect_metadata"]], "pytomography.metadata": [[17, "module-pytomography.metadata"]], "pytomography.metadata.metadata": [[18, "module-pytomography.metadata.metadata"]], "pytomography.priors": [[19, "module-pytomography.priors"]], "pytomography.priors.nearest_neighbour": [[20, "module-pytomography.priors.nearest_neighbour"]], "pytomography.priors.prior": [[21, "module-pytomography.priors.prior"]], "pytomography.projections.SPECT": [[22, "module-pytomography.projections.SPECT"]], "pytomography.projections.SPECT.spect_system_matrix": [[23, "module-pytomography.projections.SPECT.spect_system_matrix"]], "pytomography.projections": [[24, "module-pytomography.projections"]], "pytomography.projections.system_matrix": [[25, "module-pytomography.projections.system_matrix"]], "pytomography.transforms.PET.attenuation": [[26, "module-pytomography.transforms.PET.attenuation"]], "pytomography.transforms.PET": [[27, "module-pytomography.transforms.PET"]], "pytomography.transforms.PET.psf": [[28, "module-pytomography.transforms.PET.psf"]], "pytomography.transforms.SPECT.atteunation": [[29, "module-pytomography.transforms.SPECT.atteunation"]], "pytomography.transforms.SPECT.cutoff": [[30, "module-pytomography.transforms.SPECT.cutoff"]], "pytomography.transforms.SPECT": [[31, "module-pytomography.transforms.SPECT"]], "pytomography.transforms.SPECT.psf": [[32, "module-pytomography.transforms.SPECT.psf"]], "pytomography.transforms": [[33, "module-pytomography.transforms"]], "pytomography.transforms.transform": [[34, "module-pytomography.transforms.transform"]], "pytomography.utils": [[35, "module-pytomography.utils"]], "pytomography.utils.misc": [[36, "module-pytomography.utils.misc"]], "pytomography.utils.nist_data": [[37, "module-pytomography.utils.nist_data"]], "pytomography.utils.scatter": [[38, "module-pytomography.utils.scatter"]], "pytomography.utils.spatial": [[39, "module-pytomography.utils.spatial"]], "Developer\u2019s Guide": [[40, "developer-s-guide"]], "External Data": [[41, "external-data"]], "NIST": [[41, "nist"]], "Collimator Data": [[41, "collimator-data"]], "PyTomography": [[42, "pytomography"], [43, "pytomography"]], "Supported Modalities": [[42, "supported-modalities"], [43, "supported-modalities"]], "Reconstruction Algorithms": [[42, "reconstruction-algorithms"], [43, "reconstruction-algorithms"], [44, "Reconstruction-Algorithms"]], "Supported Datatypes": [[42, "supported-datatypes"], [43, "supported-datatypes"]], "Installation": [[42, "installation"], [43, "installation"]], "Contents": [[42, "contents"]], "Manual": [[44, "Manual"]], "Coordinates": [[44, "Coordinates"]], "SPECT Imaging": [[44, "SPECT-Imaging"]], "Datatypes": [[44, "Datatypes"]], "Objects/Images": [[44, "Objects/Images"]], "Mathematical Foundations": [[44, "Mathematical-Foundations"]], "Projections": [[44, "Projections"]], "Transforms": [[44, "Transforms"]], "Scatter": [[44, "Scatter"]], "Priors": [[44, "Priors"]], "Fundamental Operations": [[45, "Fundamental-Operations"]], "Idea": [[45, "Idea"]], "The Rotate Function": [[45, "The-Rotate-Function"]], "Last Time": [[46, "Last-Time"], [47, "Last-Time"], [48, "Last-Time"], [50, "Last-Time"]], "This Time": [[46, "This-Time"], [47, "This-Time"], [48, "This-Time"], [50, "This-Time"]], "Evaluating p(x,y,z,\\theta)": [[47, "Evaluating-p(x,y,z,\\theta)"]], "SPECT: Reconstructing DICOM Data": [[51, "SPECT:-Reconstructing-DICOM-Data"]], "Part 1: Opening Data": [[51, "Part-1:-Opening-Data"]], "Part 2: Modeling": [[51, "Part-2:-Modeling"]], "Attenuation Transform": [[51, "Attenuation-Transform"]], "PSF Modeling": [[51, "PSF-Modeling"]], "System Matrix": [[51, "System-Matrix"]], "Reconstruct the object": [[51, "Reconstruct-the-object"]], "Saving Data": [[51, "Saving-Data"]], "SPECT: Implementing Filtered Back Projection": [[52, "SPECT:-Implementing-Filtered-Back-Projection"]], "SPECT: Quantitative Analysis (SIMIND)": [[53, "SPECT:-Quantitative-Analysis-(SIMIND)"]], "Part 1: Open Projection Data": [[53, "Part-1:-Open-Projection-Data"]], "2. Obtain Organ Masks": [[53, "2.-Obtain-Organ-Masks"]], "Part 3: Reconstructing SPECT Data": [[53, "Part-3:-Reconstructing-SPECT-Data"]], "SPECT: Reconstructing SIMIND Data": [[54, "SPECT:-Reconstructing-SIMIND-Data"]], "Case 1: Single Projection File": [[54, "Case-1:-Single-Projection-File"]], "Case 2: Multiple Projections": [[54, "Case-2:-Multiple-Projections"]], "Tutorials": [[55, "tutorials"]]}, "indexentries": {"osembsr (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSEMBSR"]], "osemosl (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSEMOSL"]], "osml (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSML"]], "__call__() (pytomography.algorithms.osembsr method)": [[1, "pytomography.algorithms.OSEMBSR.__call__"]], "__call__() (pytomography.algorithms.osemosl method)": [[1, "pytomography.algorithms.OSEMOSL.__call__"]], "__call__() (pytomography.algorithms.osml method)": [[1, "pytomography.algorithms.OSML.__call__"]], "_set_recon_params_string() (pytomography.algorithms.osembsr method)": [[1, "pytomography.algorithms.OSEMBSR._set_recon_params_string"]], "_set_recon_params_string() (pytomography.algorithms.osemosl method)": [[1, "pytomography.algorithms.OSEMOSL._set_recon_params_string"]], "get_subset_splits() (pytomography.algorithms.osml method)": [[1, "pytomography.algorithms.OSML.get_subset_splits"]], "module": [[1, "module-pytomography.algorithms"], [2, "module-pytomography.algorithms.osem"], [3, "module-pytomography.callbacks.callback"], [4, "module-pytomography.callbacks"], [5, "module-pytomography"], [6, "module-pytomography.io.CT.attenuation_map"], [7, "module-pytomography.io.CT.dicom"], [8, "module-pytomography.io.CT"], [9, "module-pytomography.io.SPECT.dicom"], [10, "module-pytomography.io.SPECT"], [11, "module-pytomography.io.SPECT.simind"], [12, "module-pytomography.io"], [13, "module-pytomography.io.shared.dicom_creation"], [14, "module-pytomography.io.shared"], [15, "module-pytomography.metadata.SPECT"], [16, "module-pytomography.metadata.SPECT.spect_metadata"], [17, "module-pytomography.metadata"], [18, "module-pytomography.metadata.metadata"], [19, "module-pytomography.priors"], [20, "module-pytomography.priors.nearest_neighbour"], [21, "module-pytomography.priors.prior"], [22, "module-pytomography.projections.SPECT"], [23, "module-pytomography.projections.SPECT.spect_system_matrix"], [24, "module-pytomography.projections"], [25, "module-pytomography.projections.system_matrix"], [26, "module-pytomography.transforms.PET.attenuation"], [27, "module-pytomography.transforms.PET"], [28, "module-pytomography.transforms.PET.psf"], [29, "module-pytomography.transforms.SPECT.atteunation"], [30, "module-pytomography.transforms.SPECT.cutoff"], [31, "module-pytomography.transforms.SPECT"], [32, "module-pytomography.transforms.SPECT.psf"], [33, "module-pytomography.transforms"], [34, "module-pytomography.transforms.transform"], [35, "module-pytomography.utils"], [36, "module-pytomography.utils.misc"], [37, "module-pytomography.utils.nist_data"], [38, "module-pytomography.utils.scatter"], [39, "module-pytomography.utils.spatial"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "osembsr (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSEMBSR"]], "osemosl (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSEMOSL"]], "osml (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSML"]], "__call__() (pytomography.algorithms.osem.osembsr method)": [[2, "pytomography.algorithms.osem.OSEMBSR.__call__"]], "__call__() (pytomography.algorithms.osem.osemosl method)": [[2, "pytomography.algorithms.osem.OSEMOSL.__call__"]], "__call__() (pytomography.algorithms.osem.osml method)": [[2, "pytomography.algorithms.osem.OSML.__call__"]], "_set_recon_params_string() (pytomography.algorithms.osem.osembsr method)": [[2, "pytomography.algorithms.osem.OSEMBSR._set_recon_params_string"]], "_set_recon_params_string() (pytomography.algorithms.osem.osemosl method)": [[2, "pytomography.algorithms.osem.OSEMOSL._set_recon_params_string"]], "get_subset_splits() (pytomography.algorithms.osem.osml method)": [[2, "pytomography.algorithms.osem.OSML.get_subset_splits"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "callback (class in pytomography.callbacks.callback)": [[3, "pytomography.callbacks.callback.CallBack"]], "pytomography.callbacks.callback": [[3, "module-pytomography.callbacks.callback"]], "run() (pytomography.callbacks.callback.callback method)": [[3, "pytomography.callbacks.callback.CallBack.run"]], "callback (class in pytomography.callbacks)": [[4, "pytomography.callbacks.CallBack"]], "pytomography.callbacks": [[4, "module-pytomography.callbacks"]], "run() (pytomography.callbacks.callback method)": [[4, "pytomography.callbacks.CallBack.run"]], "__version__ (in module pytomography)": [[5, "pytomography.__version__"]], "delta (in module pytomography)": [[5, "pytomography.delta"]], "device (in module pytomography)": [[5, "pytomography.device"]], "dtype (in module pytomography)": [[5, "pytomography.dtype"]], "pytomography": [[5, "module-pytomography"]], "set_device() (in module pytomography)": [[5, "pytomography.set_device"]], "set_dtype() (in module pytomography)": [[5, "pytomography.set_dtype"]], "datadir (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.DATADIR"]], "file_air (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.FILE_AIR"]], "file_cbone (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.FILE_CBONE"]], "file_water (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.FILE_WATER"]], "hu_to_mu() (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.HU_to_mu"]], "bilinear_transform() (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.bilinear_transform"]], "get_ect_from_corticalbone_hu() (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.get_ECT_from_corticalbone_HU"]], "get_hu2mu_conversion() (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.get_HU2mu_conversion"]], "get_hu_corticalbone() (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.get_HU_corticalbone"]], "get_hu_from_spectrum_interp() (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.get_HU_from_spectrum_interp"]], "get_hu_mu_curve() (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.get_HU_mu_curve"]], "module_path (in module pytomography.io.ct.attenuation_map)": [[6, "pytomography.io.CT.attenuation_map.module_path"]], "pytomography.io.ct.attenuation_map": [[6, "module-pytomography.io.CT.attenuation_map"]], "compute_max_slice_loc_ct() (in module pytomography.io.ct.dicom)": [[7, "pytomography.io.CT.dicom.compute_max_slice_loc_CT"]], "open_ct_file() (in module pytomography.io.ct.dicom)": [[7, "pytomography.io.CT.dicom.open_CT_file"]], "pytomography.io.ct.dicom": [[7, "module-pytomography.io.CT.dicom"]], "compute_max_slice_loc_ct() (in module pytomography.io.ct)": [[8, "pytomography.io.CT.compute_max_slice_loc_CT"]], "get_hu2mu_conversion() (in module pytomography.io.ct)": [[8, "pytomography.io.CT.get_HU2mu_conversion"]], "open_ct_file() (in module pytomography.io.ct)": [[8, "pytomography.io.CT.open_CT_file"]], "pytomography.io.ct": [[8, "module-pytomography.io.CT"]], "ct_to_mumap() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.CT_to_mumap"]], "_get_affine_ct() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom._get_affine_CT"]], "_get_affine_spect() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom._get_affine_spect"]], "get_affine_matrix() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_affine_matrix"]], "get_attenuation_map_from_ct_slices() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_attenuation_map_from_CT_slices"]], "get_attenuation_map_from_file() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_attenuation_map_from_file"]], "get_metadata() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_metadata"]], "get_projections() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_projections"]], "get_psfmeta_from_scanner_params() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_psfmeta_from_scanner_params"]], "get_radii_and_angles() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_radii_and_angles"]], "get_scatter_from_tew() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_scatter_from_TEW"]], "get_window_width() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.get_window_width"]], "pytomography.io.spect.dicom": [[9, "module-pytomography.io.SPECT.dicom"]], "save_dcm() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.save_dcm"]], "stitch_multibed() (in module pytomography.io.spect.dicom)": [[9, "pytomography.io.SPECT.dicom.stitch_multibed"]], "ct_to_mumap() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.CT_to_mumap"]], "get_affine_matrix() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_affine_matrix"]], "get_attenuation_map_from_ct_slices() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_attenuation_map_from_CT_slices"]], "get_attenuation_map_from_file() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_attenuation_map_from_file"]], "get_atteuation_map() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_atteuation_map"]], "get_blank_below_above() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_blank_below_above"]], "get_projections() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_projections"]], "get_psfmeta_from_scanner_params() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_psfmeta_from_scanner_params"]], "get_scatter_from_tew() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.get_scatter_from_TEW"]], "open_ct_file() (in module pytomography.io.spect)": [[10, "pytomography.io.SPECT.open_CT_file"]], "pytomography.io.spect": [[10, "module-pytomography.io.SPECT"]], "combine_projection_data() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.combine_projection_data"]], "combine_scatter_data_tew() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.combine_scatter_data_TEW"]], "find_first_entry_containing_header() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.find_first_entry_containing_header"]], "get_atteuation_map() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.get_atteuation_map"]], "get_metadata() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.get_metadata"]], "get_projections() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.get_projections"]], "get_psfmeta_from_header() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.get_psfmeta_from_header"]], "get_scatter_from_tew() (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.get_scatter_from_TEW"]], "pytomography.io.spect.simind": [[11, "module-pytomography.io.SPECT.simind"]], "relation_dict (in module pytomography.io.spect.simind)": [[11, "pytomography.io.SPECT.simind.relation_dict"]], "pytomography.io": [[12, "module-pytomography.io"]], "add_patient_information() (in module pytomography.io.shared.dicom_creation)": [[13, "pytomography.io.shared.dicom_creation.add_patient_information"]], "add_required_elements_to_ds() (in module pytomography.io.shared.dicom_creation)": [[13, "pytomography.io.shared.dicom_creation.add_required_elements_to_ds"]], "add_study_and_series_information() (in module pytomography.io.shared.dicom_creation)": [[13, "pytomography.io.shared.dicom_creation.add_study_and_series_information"]], "create_ds() (in module pytomography.io.shared.dicom_creation)": [[13, "pytomography.io.shared.dicom_creation.create_ds"]], "generate_base_dataset() (in module pytomography.io.shared.dicom_creation)": [[13, "pytomography.io.shared.dicom_creation.generate_base_dataset"]], "get_file_meta() (in module pytomography.io.shared.dicom_creation)": [[13, "pytomography.io.shared.dicom_creation.get_file_meta"]], "pytomography.io.shared.dicom_creation": [[13, "module-pytomography.io.shared.dicom_creation"]], "create_ds() (in module pytomography.io.shared)": [[14, "pytomography.io.shared.create_ds"]], "pytomography.io.shared": [[14, "module-pytomography.io.shared"]], "spectimagemeta (class in pytomography.metadata.spect)": [[15, "pytomography.metadata.SPECT.SPECTImageMeta"]], "spectobjectmeta (class in pytomography.metadata.spect)": [[15, "pytomography.metadata.SPECT.SPECTObjectMeta"]], "spectpsfmeta (class in pytomography.metadata.spect)": [[15, "pytomography.metadata.SPECT.SPECTPSFMeta"]], "compute_padded_shape() (pytomography.metadata.spect.spectimagemeta method)": [[15, "pytomography.metadata.SPECT.SPECTImageMeta.compute_padded_shape"]], "compute_padded_shape() (pytomography.metadata.spect.spectobjectmeta method)": [[15, "pytomography.metadata.SPECT.SPECTObjectMeta.compute_padded_shape"]], "pytomography.metadata.spect": [[15, "module-pytomography.metadata.SPECT"]], "spectimagemeta (class in pytomography.metadata.spect.spect_metadata)": [[16, "pytomography.metadata.SPECT.spect_metadata.SPECTImageMeta"]], "spectobjectmeta (class in pytomography.metadata.spect.spect_metadata)": [[16, "pytomography.metadata.SPECT.spect_metadata.SPECTObjectMeta"]], "spectpsfmeta (class in pytomography.metadata.spect.spect_metadata)": [[16, "pytomography.metadata.SPECT.spect_metadata.SPECTPSFMeta"]], "compute_padded_shape() (pytomography.metadata.spect.spect_metadata.spectimagemeta method)": [[16, "pytomography.metadata.SPECT.spect_metadata.SPECTImageMeta.compute_padded_shape"]], "compute_padded_shape() (pytomography.metadata.spect.spect_metadata.spectobjectmeta method)": [[16, "pytomography.metadata.SPECT.spect_metadata.SPECTObjectMeta.compute_padded_shape"]], "pytomography.metadata.spect.spect_metadata": [[16, "module-pytomography.metadata.SPECT.spect_metadata"]], "imagemeta (class in pytomography.metadata)": [[17, "pytomography.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata)": [[17, "pytomography.metadata.ObjectMeta"]], "spectimagemeta (class in pytomography.metadata)": [[17, "pytomography.metadata.SPECTImageMeta"]], "spectobjectmeta (class in pytomography.metadata)": [[17, "pytomography.metadata.SPECTObjectMeta"]], "spectpsfmeta (class in pytomography.metadata)": [[17, "pytomography.metadata.SPECTPSFMeta"]], "__repr__() (pytomography.metadata.imagemeta method)": [[17, "pytomography.metadata.ImageMeta.__repr__"]], "__repr__() (pytomography.metadata.objectmeta method)": [[17, "pytomography.metadata.ObjectMeta.__repr__"]], "compute_padded_shape() (pytomography.metadata.spectimagemeta method)": [[17, "pytomography.metadata.SPECTImageMeta.compute_padded_shape"]], "compute_padded_shape() (pytomography.metadata.spectobjectmeta method)": [[17, "pytomography.metadata.SPECTObjectMeta.compute_padded_shape"]], "pytomography.metadata": [[17, "module-pytomography.metadata"]], "imagemeta (class in pytomography.metadata.metadata)": [[18, "pytomography.metadata.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata.metadata)": [[18, "pytomography.metadata.metadata.ObjectMeta"]], "__repr__() (pytomography.metadata.metadata.imagemeta method)": [[18, "pytomography.metadata.metadata.ImageMeta.__repr__"]], "__repr__() (pytomography.metadata.metadata.objectmeta method)": [[18, "pytomography.metadata.metadata.ObjectMeta.__repr__"]], "pytomography.metadata.metadata": [[18, "module-pytomography.metadata.metadata"]], "anatomyneighbourweight (class in pytomography.priors)": [[19, "pytomography.priors.AnatomyNeighbourWeight"]], "euclideanneighbourweight (class in pytomography.priors)": [[19, "pytomography.priors.EuclideanNeighbourWeight"]], "logcoshprior (class in pytomography.priors)": [[19, "pytomography.priors.LogCoshPrior"]], "nearestneighbourprior (class in pytomography.priors)": [[19, "pytomography.priors.NearestNeighbourPrior"]], "neighbourweight (class in pytomography.priors)": [[19, "pytomography.priors.NeighbourWeight"]], "prior (class in pytomography.priors)": [[19, "pytomography.priors.Prior"]], "quadraticprior (class in pytomography.priors)": [[19, "pytomography.priors.QuadraticPrior"]], "relativedifferenceprior (class in pytomography.priors)": [[19, "pytomography.priors.RelativeDifferencePrior"]], "topnanatomyneighbourweight (class in pytomography.priors)": [[19, "pytomography.priors.TopNAnatomyNeighbourWeight"]], "__call__() (pytomography.priors.anatomyneighbourweight method)": [[19, "pytomography.priors.AnatomyNeighbourWeight.__call__"]], "__call__() (pytomography.priors.euclideanneighbourweight method)": [[19, "pytomography.priors.EuclideanNeighbourWeight.__call__"]], "__call__() (pytomography.priors.neighbourweight method)": [[19, "pytomography.priors.NeighbourWeight.__call__"]], "__call__() (pytomography.priors.topnanatomyneighbourweight method)": [[19, "pytomography.priors.TopNAnatomyNeighbourWeight.__call__"]], "compute_gradient() (pytomography.priors.nearestneighbourprior method)": [[19, "pytomography.priors.NearestNeighbourPrior.compute_gradient"]], "compute_gradient() (pytomography.priors.prior method)": [[19, "pytomography.priors.Prior.compute_gradient"]], "compute_inclusion_tensor() (pytomography.priors.topnanatomyneighbourweight method)": [[19, "pytomography.priors.TopNAnatomyNeighbourWeight.compute_inclusion_tensor"]], "pytomography.priors": [[19, "module-pytomography.priors"]], "set_beta_scale() (pytomography.priors.prior method)": [[19, "pytomography.priors.Prior.set_beta_scale"]], "set_object() (pytomography.priors.prior method)": [[19, "pytomography.priors.Prior.set_object"]], "set_object_meta() (pytomography.priors.anatomyneighbourweight method)": [[19, "pytomography.priors.AnatomyNeighbourWeight.set_object_meta"]], "set_object_meta() (pytomography.priors.nearestneighbourprior method)": [[19, "pytomography.priors.NearestNeighbourPrior.set_object_meta"]], "set_object_meta() (pytomography.priors.neighbourweight method)": [[19, "pytomography.priors.NeighbourWeight.set_object_meta"]], "set_object_meta() (pytomography.priors.prior method)": [[19, "pytomography.priors.Prior.set_object_meta"]], "set_object_meta() (pytomography.priors.topnanatomyneighbourweight method)": [[19, "pytomography.priors.TopNAnatomyNeighbourWeight.set_object_meta"]], "anatomyneighbourweight (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.AnatomyNeighbourWeight"]], "euclideanneighbourweight (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.EuclideanNeighbourWeight"]], "logcoshprior (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.LogCoshPrior"]], "nearestneighbourprior (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.NearestNeighbourPrior"]], "neighbourweight (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.NeighbourWeight"]], "quadraticprior (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.QuadraticPrior"]], "relativedifferenceprior (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.RelativeDifferencePrior"]], "topnanatomyneighbourweight (class in pytomography.priors.nearest_neighbour)": [[20, "pytomography.priors.nearest_neighbour.TopNAnatomyNeighbourWeight"]], "__call__() (pytomography.priors.nearest_neighbour.anatomyneighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.AnatomyNeighbourWeight.__call__"]], "__call__() (pytomography.priors.nearest_neighbour.euclideanneighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.EuclideanNeighbourWeight.__call__"]], "__call__() (pytomography.priors.nearest_neighbour.neighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.NeighbourWeight.__call__"]], "__call__() (pytomography.priors.nearest_neighbour.topnanatomyneighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.TopNAnatomyNeighbourWeight.__call__"]], "compute_gradient() (pytomography.priors.nearest_neighbour.nearestneighbourprior method)": [[20, "pytomography.priors.nearest_neighbour.NearestNeighbourPrior.compute_gradient"]], "compute_inclusion_tensor() (pytomography.priors.nearest_neighbour.topnanatomyneighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.TopNAnatomyNeighbourWeight.compute_inclusion_tensor"]], "pytomography.priors.nearest_neighbour": [[20, "module-pytomography.priors.nearest_neighbour"]], "set_object_meta() (pytomography.priors.nearest_neighbour.anatomyneighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.AnatomyNeighbourWeight.set_object_meta"]], "set_object_meta() (pytomography.priors.nearest_neighbour.nearestneighbourprior method)": [[20, "pytomography.priors.nearest_neighbour.NearestNeighbourPrior.set_object_meta"]], "set_object_meta() (pytomography.priors.nearest_neighbour.neighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.NeighbourWeight.set_object_meta"]], "set_object_meta() (pytomography.priors.nearest_neighbour.topnanatomyneighbourweight method)": [[20, "pytomography.priors.nearest_neighbour.TopNAnatomyNeighbourWeight.set_object_meta"]], "prior (class in pytomography.priors.prior)": [[21, "pytomography.priors.prior.Prior"]], "compute_gradient() (pytomography.priors.prior.prior method)": [[21, "pytomography.priors.prior.Prior.compute_gradient"]], "pytomography.priors.prior": [[21, "module-pytomography.priors.prior"]], "set_beta_scale() (pytomography.priors.prior.prior method)": [[21, "pytomography.priors.prior.Prior.set_beta_scale"]], "set_object() (pytomography.priors.prior.prior method)": [[21, "pytomography.priors.prior.Prior.set_object"]], "set_object_meta() (pytomography.priors.prior.prior method)": [[21, "pytomography.priors.prior.Prior.set_object_meta"]], "spectsystemmatrix (class in pytomography.projections.spect)": [[22, "pytomography.projections.SPECT.SPECTSystemMatrix"]], "spectsystemmatrixmaskedsegments (class in pytomography.projections.spect)": [[22, "pytomography.projections.SPECT.SPECTSystemMatrixMaskedSegments"]], "backward() (pytomography.projections.spect.spectsystemmatrix method)": [[22, "pytomography.projections.SPECT.SPECTSystemMatrix.backward"]], "backward() (pytomography.projections.spect.spectsystemmatrixmaskedsegments method)": [[22, "pytomography.projections.SPECT.SPECTSystemMatrixMaskedSegments.backward"]], "forward() (pytomography.projections.spect.spectsystemmatrix method)": [[22, "pytomography.projections.SPECT.SPECTSystemMatrix.forward"]], "forward() (pytomography.projections.spect.spectsystemmatrixmaskedsegments method)": [[22, "pytomography.projections.SPECT.SPECTSystemMatrixMaskedSegments.forward"]], "pytomography.projections.spect": [[22, "module-pytomography.projections.SPECT"]], "spectsystemmatrix (class in pytomography.projections.spect.spect_system_matrix)": [[23, "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrix"]], "spectsystemmatrixmaskedsegments (class in pytomography.projections.spect.spect_system_matrix)": [[23, "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrixMaskedSegments"]], "backward() (pytomography.projections.spect.spect_system_matrix.spectsystemmatrix method)": [[23, "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrix.backward"]], "backward() (pytomography.projections.spect.spect_system_matrix.spectsystemmatrixmaskedsegments method)": [[23, "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrixMaskedSegments.backward"]], "forward() (pytomography.projections.spect.spect_system_matrix.spectsystemmatrix method)": [[23, "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrix.forward"]], "forward() (pytomography.projections.spect.spect_system_matrix.spectsystemmatrixmaskedsegments method)": [[23, "pytomography.projections.SPECT.spect_system_matrix.SPECTSystemMatrixMaskedSegments.forward"]], "pytomography.projections.spect.spect_system_matrix": [[23, "module-pytomography.projections.SPECT.spect_system_matrix"]], "spectsystemmatrix (class in pytomography.projections)": [[24, "pytomography.projections.SPECTSystemMatrix"]], "spectsystemmatrixmaskedsegments (class in pytomography.projections)": [[24, "pytomography.projections.SPECTSystemMatrixMaskedSegments"]], "systemmatrix (class in pytomography.projections)": [[24, "pytomography.projections.SystemMatrix"]], "backward() (pytomography.projections.spectsystemmatrix method)": [[24, "pytomography.projections.SPECTSystemMatrix.backward"]], "backward() (pytomography.projections.spectsystemmatrixmaskedsegments method)": [[24, "pytomography.projections.SPECTSystemMatrixMaskedSegments.backward"]], "backward() (pytomography.projections.systemmatrix method)": [[24, "pytomography.projections.SystemMatrix.backward"]], "forward() (pytomography.projections.spectsystemmatrix method)": [[24, "pytomography.projections.SPECTSystemMatrix.forward"]], "forward() (pytomography.projections.spectsystemmatrixmaskedsegments method)": [[24, "pytomography.projections.SPECTSystemMatrixMaskedSegments.forward"]], "forward() (pytomography.projections.systemmatrix method)": [[24, "pytomography.projections.SystemMatrix.forward"]], "initialize_transforms() (pytomography.projections.systemmatrix method)": [[24, "pytomography.projections.SystemMatrix.initialize_transforms"]], "pytomography.projections": [[24, "module-pytomography.projections"]], "systemmatrix (class in pytomography.projections.system_matrix)": [[25, "pytomography.projections.system_matrix.SystemMatrix"]], "backward() (pytomography.projections.system_matrix.systemmatrix method)": [[25, "pytomography.projections.system_matrix.SystemMatrix.backward"]], "forward() (pytomography.projections.system_matrix.systemmatrix method)": [[25, "pytomography.projections.system_matrix.SystemMatrix.forward"]], "initialize_transforms() (pytomography.projections.system_matrix.systemmatrix method)": [[25, "pytomography.projections.system_matrix.SystemMatrix.initialize_transforms"]], "pytomography.projections.system_matrix": [[25, "module-pytomography.projections.system_matrix"]], "petattenuationtransform (class in pytomography.transforms.pet.attenuation)": [[26, "pytomography.transforms.PET.attenuation.PETAttenuationTransform"]], "backward() (pytomography.transforms.pet.attenuation.petattenuationtransform method)": [[26, "pytomography.transforms.PET.attenuation.PETAttenuationTransform.backward"]], "configure() (pytomography.transforms.pet.attenuation.petattenuationtransform method)": [[26, "pytomography.transforms.PET.attenuation.PETAttenuationTransform.configure"]], "forward() (pytomography.transforms.pet.attenuation.petattenuationtransform method)": [[26, "pytomography.transforms.PET.attenuation.PETAttenuationTransform.forward"]], "get_prob_of_detection_matrix() (in module pytomography.transforms.pet.attenuation)": [[26, "pytomography.transforms.PET.attenuation.get_prob_of_detection_matrix"]], "pytomography.transforms.pet.attenuation": [[26, "module-pytomography.transforms.PET.attenuation"]], "petattenuationtransform (class in pytomography.transforms.pet)": [[27, "pytomography.transforms.PET.PETAttenuationTransform"]], "petpsftransform (class in pytomography.transforms.pet)": [[27, "pytomography.transforms.PET.PETPSFTransform"]], "backward() (pytomography.transforms.pet.petattenuationtransform method)": [[27, "pytomography.transforms.PET.PETAttenuationTransform.backward"]], "backward() (pytomography.transforms.pet.petpsftransform method)": [[27, "pytomography.transforms.PET.PETPSFTransform.backward"]], "configure() (pytomography.transforms.pet.petattenuationtransform method)": [[27, "pytomography.transforms.PET.PETAttenuationTransform.configure"]], "configure() (pytomography.transforms.pet.petpsftransform method)": [[27, "pytomography.transforms.PET.PETPSFTransform.configure"]], "construct_matrix() (pytomography.transforms.pet.petpsftransform method)": [[27, "pytomography.transforms.PET.PETPSFTransform.construct_matrix"]], "forward() (pytomography.transforms.pet.petattenuationtransform method)": [[27, "pytomography.transforms.PET.PETAttenuationTransform.forward"]], "forward() (pytomography.transforms.pet.petpsftransform method)": [[27, "pytomography.transforms.PET.PETPSFTransform.forward"]], "pytomography.transforms.pet": [[27, "module-pytomography.transforms.PET"]], "petpsftransform (class in pytomography.transforms.pet.psf)": [[28, "pytomography.transforms.PET.psf.PETPSFTransform"]], "backward() (pytomography.transforms.pet.psf.petpsftransform method)": [[28, "pytomography.transforms.PET.psf.PETPSFTransform.backward"]], "configure() (pytomography.transforms.pet.psf.petpsftransform method)": [[28, "pytomography.transforms.PET.psf.PETPSFTransform.configure"]], "construct_matrix() (pytomography.transforms.pet.psf.petpsftransform method)": [[28, "pytomography.transforms.PET.psf.PETPSFTransform.construct_matrix"]], "forward() (pytomography.transforms.pet.psf.petpsftransform method)": [[28, "pytomography.transforms.PET.psf.PETPSFTransform.forward"]], "kernel_noncol() (in module pytomography.transforms.pet.psf)": [[28, "pytomography.transforms.PET.psf.kernel_noncol"]], "kernel_penetration() (in module pytomography.transforms.pet.psf)": [[28, "pytomography.transforms.PET.psf.kernel_penetration"]], "kernel_scattering() (in module pytomography.transforms.pet.psf)": [[28, "pytomography.transforms.PET.psf.kernel_scattering"]], "pytomography.transforms.pet.psf": [[28, "module-pytomography.transforms.PET.psf"]], "spectattenuationtransform (class in pytomography.transforms.spect.atteunation)": [[29, "pytomography.transforms.SPECT.atteunation.SPECTAttenuationTransform"]], "backward() (pytomography.transforms.spect.atteunation.spectattenuationtransform method)": [[29, "pytomography.transforms.SPECT.atteunation.SPECTAttenuationTransform.backward"]], "configure() (pytomography.transforms.spect.atteunation.spectattenuationtransform method)": [[29, "pytomography.transforms.SPECT.atteunation.SPECTAttenuationTransform.configure"]], "forward() (pytomography.transforms.spect.atteunation.spectattenuationtransform method)": [[29, "pytomography.transforms.SPECT.atteunation.SPECTAttenuationTransform.forward"]], "get_prob_of_detection_matrix() (in module pytomography.transforms.spect.atteunation)": [[29, "pytomography.transforms.SPECT.atteunation.get_prob_of_detection_matrix"]], "pytomography.transforms.spect.atteunation": [[29, "module-pytomography.transforms.SPECT.atteunation"]], "cutofftransform (class in pytomography.transforms.spect.cutoff)": [[30, "pytomography.transforms.SPECT.cutoff.CutOffTransform"]], "backward() (pytomography.transforms.spect.cutoff.cutofftransform method)": [[30, "pytomography.transforms.SPECT.cutoff.CutOffTransform.backward"]], "forward() (pytomography.transforms.spect.cutoff.cutofftransform method)": [[30, "pytomography.transforms.SPECT.cutoff.CutOffTransform.forward"]], "pytomography.transforms.spect.cutoff": [[30, "module-pytomography.transforms.SPECT.cutoff"]], "cutofftransform (class in pytomography.transforms.spect)": [[31, "pytomography.transforms.SPECT.CutOffTransform"]], "spectattenuationtransform (class in pytomography.transforms.spect)": [[31, "pytomography.transforms.SPECT.SPECTAttenuationTransform"]], "spectpsftransform (class in pytomography.transforms.spect)": [[31, "pytomography.transforms.SPECT.SPECTPSFTransform"]], "apply_psf() (pytomography.transforms.spect.spectpsftransform method)": [[31, "pytomography.transforms.SPECT.SPECTPSFTransform.apply_psf"]], "backward() (pytomography.transforms.spect.cutofftransform method)": [[31, "pytomography.transforms.SPECT.CutOffTransform.backward"]], "backward() (pytomography.transforms.spect.spectattenuationtransform method)": [[31, "pytomography.transforms.SPECT.SPECTAttenuationTransform.backward"]], "backward() (pytomography.transforms.spect.spectpsftransform method)": [[31, "pytomography.transforms.SPECT.SPECTPSFTransform.backward"]], "compute_kernel_size() (pytomography.transforms.spect.spectpsftransform method)": [[31, "pytomography.transforms.SPECT.SPECTPSFTransform.compute_kernel_size"]], "configure() (pytomography.transforms.spect.spectattenuationtransform method)": [[31, "pytomography.transforms.SPECT.SPECTAttenuationTransform.configure"]], "configure() (pytomography.transforms.spect.spectpsftransform method)": [[31, "pytomography.transforms.SPECT.SPECTPSFTransform.configure"]], "forward() (pytomography.transforms.spect.cutofftransform method)": [[31, "pytomography.transforms.SPECT.CutOffTransform.forward"]], "forward() (pytomography.transforms.spect.spectattenuationtransform method)": [[31, "pytomography.transforms.SPECT.SPECTAttenuationTransform.forward"]], "forward() (pytomography.transforms.spect.spectpsftransform method)": [[31, "pytomography.transforms.SPECT.SPECTPSFTransform.forward"]], "get_sigma() (pytomography.transforms.spect.spectpsftransform method)": [[31, "pytomography.transforms.SPECT.SPECTPSFTransform.get_sigma"]], "pytomography.transforms.spect": [[31, "module-pytomography.transforms.SPECT"]], "gaussianblurnet (class in pytomography.transforms.spect.psf)": [[32, "pytomography.transforms.SPECT.psf.GaussianBlurNet"]], "spectpsftransform (class in pytomography.transforms.spect.psf)": [[32, "pytomography.transforms.SPECT.psf.SPECTPSFTransform"]], "apply_psf() (pytomography.transforms.spect.psf.spectpsftransform method)": [[32, "pytomography.transforms.SPECT.psf.SPECTPSFTransform.apply_psf"]], "backward() (pytomography.transforms.spect.psf.spectpsftransform method)": [[32, "pytomography.transforms.SPECT.psf.SPECTPSFTransform.backward"]], "compute_kernel_size() (pytomography.transforms.spect.psf.spectpsftransform method)": [[32, "pytomography.transforms.SPECT.psf.SPECTPSFTransform.compute_kernel_size"]], "configure() (pytomography.transforms.spect.psf.spectpsftransform method)": [[32, "pytomography.transforms.SPECT.psf.SPECTPSFTransform.configure"]], "forward() (pytomography.transforms.spect.psf.gaussianblurnet method)": [[32, "pytomography.transforms.SPECT.psf.GaussianBlurNet.forward"]], "forward() (pytomography.transforms.spect.psf.spectpsftransform method)": [[32, "pytomography.transforms.SPECT.psf.SPECTPSFTransform.forward"]], "get_1d_psf_layer() (in module pytomography.transforms.spect.psf)": [[32, "pytomography.transforms.SPECT.psf.get_1D_PSF_layer"]], "get_sigma() (pytomography.transforms.spect.psf.spectpsftransform method)": [[32, "pytomography.transforms.SPECT.psf.SPECTPSFTransform.get_sigma"]], "pytomography.transforms.spect.psf": [[32, "module-pytomography.transforms.SPECT.psf"]], "cutofftransform (class in pytomography.transforms)": [[33, "pytomography.transforms.CutOffTransform"]], "petattenuationtransform (class in pytomography.transforms)": [[33, "pytomography.transforms.PETAttenuationTransform"]], "petpsftransform (class in pytomography.transforms)": [[33, "pytomography.transforms.PETPSFTransform"]], "spectattenuationtransform (class in pytomography.transforms)": [[33, "pytomography.transforms.SPECTAttenuationTransform"]], "spectpsftransform (class in pytomography.transforms)": [[33, "pytomography.transforms.SPECTPSFTransform"]], "transform (class in pytomography.transforms)": [[33, "pytomography.transforms.Transform"]], "apply_psf() (pytomography.transforms.spectpsftransform method)": [[33, "pytomography.transforms.SPECTPSFTransform.apply_psf"]], "backward() (pytomography.transforms.cutofftransform method)": [[33, "pytomography.transforms.CutOffTransform.backward"]], "backward() (pytomography.transforms.petattenuationtransform method)": [[33, "pytomography.transforms.PETAttenuationTransform.backward"]], "backward() (pytomography.transforms.petpsftransform method)": [[33, "pytomography.transforms.PETPSFTransform.backward"]], "backward() (pytomography.transforms.spectattenuationtransform method)": [[33, "pytomography.transforms.SPECTAttenuationTransform.backward"]], "backward() (pytomography.transforms.spectpsftransform method)": [[33, "pytomography.transforms.SPECTPSFTransform.backward"]], "backward() (pytomography.transforms.transform method)": [[33, "pytomography.transforms.Transform.backward"]], "compute_kernel_size() (pytomography.transforms.spectpsftransform method)": [[33, "pytomography.transforms.SPECTPSFTransform.compute_kernel_size"]], "configure() (pytomography.transforms.petattenuationtransform method)": [[33, "pytomography.transforms.PETAttenuationTransform.configure"]], "configure() (pytomography.transforms.petpsftransform method)": [[33, "pytomography.transforms.PETPSFTransform.configure"]], "configure() (pytomography.transforms.spectattenuationtransform method)": [[33, "pytomography.transforms.SPECTAttenuationTransform.configure"]], "configure() (pytomography.transforms.spectpsftransform method)": [[33, "pytomography.transforms.SPECTPSFTransform.configure"]], "configure() (pytomography.transforms.transform method)": [[33, "pytomography.transforms.Transform.configure"]], "construct_matrix() (pytomography.transforms.petpsftransform method)": [[33, "pytomography.transforms.PETPSFTransform.construct_matrix"]], "forward() (pytomography.transforms.cutofftransform method)": [[33, "pytomography.transforms.CutOffTransform.forward"]], "forward() (pytomography.transforms.petattenuationtransform method)": [[33, "pytomography.transforms.PETAttenuationTransform.forward"]], "forward() (pytomography.transforms.petpsftransform method)": [[33, "pytomography.transforms.PETPSFTransform.forward"]], "forward() (pytomography.transforms.spectattenuationtransform method)": [[33, "pytomography.transforms.SPECTAttenuationTransform.forward"]], "forward() (pytomography.transforms.spectpsftransform method)": [[33, "pytomography.transforms.SPECTPSFTransform.forward"]], "forward() (pytomography.transforms.transform method)": [[33, "pytomography.transforms.Transform.forward"]], "get_sigma() (pytomography.transforms.spectpsftransform method)": [[33, "pytomography.transforms.SPECTPSFTransform.get_sigma"]], "pytomography.transforms": [[33, "module-pytomography.transforms"]], "transform (class in pytomography.transforms.transform)": [[34, "pytomography.transforms.transform.Transform"]], "backward() (pytomography.transforms.transform.transform method)": [[34, "pytomography.transforms.transform.Transform.backward"]], "configure() (pytomography.transforms.transform.transform method)": [[34, "pytomography.transforms.transform.Transform.configure"]], "forward() (pytomography.transforms.transform.transform method)": [[34, "pytomography.transforms.transform.Transform.forward"]], "pytomography.transforms.transform": [[34, "module-pytomography.transforms.transform"]], "compute_tew() (in module pytomography.utils)": [[35, "pytomography.utils.compute_TEW"]], "compute_pad_size() (in module pytomography.utils)": [[35, "pytomography.utils.compute_pad_size"]], "dual_sqrt_exponential() (in module pytomography.utils)": [[35, "pytomography.utils.dual_sqrt_exponential"]], "get_e_mu_data_from_datasheet() (in module pytomography.utils)": [[35, "pytomography.utils.get_E_mu_data_from_datasheet"]], "get_blank_below_above() (in module pytomography.utils)": [[35, "pytomography.utils.get_blank_below_above"]], "get_distance() (in module pytomography.utils)": [[35, "pytomography.utils.get_distance"]], "get_mu_from_spectrum_interp() (in module pytomography.utils)": [[35, "pytomography.utils.get_mu_from_spectrum_interp"]], "get_object_nearest_neighbour() (in module pytomography.utils)": [[35, "pytomography.utils.get_object_nearest_neighbour"]], "pad_image() (in module pytomography.utils)": [[35, "pytomography.utils.pad_image"]], "pad_object() (in module pytomography.utils)": [[35, "pytomography.utils.pad_object"]], "pad_object_z() (in module pytomography.utils)": [[35, "pytomography.utils.pad_object_z"]], "print_collimator_parameters() (in module pytomography.utils)": [[35, "pytomography.utils.print_collimator_parameters"]], "pytomography.utils": [[35, "module-pytomography.utils"]], "rev_cumsum() (in module pytomography.utils)": [[35, "pytomography.utils.rev_cumsum"]], "rotate_detector_z() (in module pytomography.utils)": [[35, "pytomography.utils.rotate_detector_z"]], "unpad_image() (in module pytomography.utils)": [[35, "pytomography.utils.unpad_image"]], "unpad_object() (in module pytomography.utils)": [[35, "pytomography.utils.unpad_object"]], "unpad_object_z() (in module pytomography.utils)": [[35, "pytomography.utils.unpad_object_z"]], "get_blank_below_above() (in module pytomography.utils.misc)": [[36, "pytomography.utils.misc.get_blank_below_above"]], "get_distance() (in module pytomography.utils.misc)": [[36, "pytomography.utils.misc.get_distance"]], "get_object_nearest_neighbour() (in module pytomography.utils.misc)": [[36, "pytomography.utils.misc.get_object_nearest_neighbour"]], "print_collimator_parameters() (in module pytomography.utils.misc)": [[36, "pytomography.utils.misc.print_collimator_parameters"]], "pytomography.utils.misc": [[36, "module-pytomography.utils.misc"]], "rev_cumsum() (in module pytomography.utils.misc)": [[36, "pytomography.utils.misc.rev_cumsum"]], "dual_sqrt_exponential() (in module pytomography.utils.nist_data)": [[37, "pytomography.utils.nist_data.dual_sqrt_exponential"]], "get_e_mu_data_from_datasheet() (in module pytomography.utils.nist_data)": [[37, "pytomography.utils.nist_data.get_E_mu_data_from_datasheet"]], "get_mu_from_spectrum_interp() (in module pytomography.utils.nist_data)": [[37, "pytomography.utils.nist_data.get_mu_from_spectrum_interp"]], "pytomography.utils.nist_data": [[37, "module-pytomography.utils.nist_data"]], "compute_tew() (in module pytomography.utils.scatter)": [[38, "pytomography.utils.scatter.compute_TEW"]], "pytomography.utils.scatter": [[38, "module-pytomography.utils.scatter"]], "compute_pad_size() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.compute_pad_size"]], "compute_pad_size_padded() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.compute_pad_size_padded"]], "pad_image() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.pad_image"]], "pad_object() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.pad_object"]], "pad_object_z() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.pad_object_z"]], "pytomography.utils.spatial": [[39, "module-pytomography.utils.spatial"]], "rotate_detector_z() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.rotate_detector_z"]], "unpad_image() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.unpad_image"]], "unpad_object() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.unpad_object"]], "unpad_object_z() (in module pytomography.utils.spatial)": [[39, "pytomography.utils.spatial.unpad_object_z"]]}})