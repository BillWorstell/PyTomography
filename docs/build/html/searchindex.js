Search.setIndex({"docnames": ["autoapi/index", "autoapi/pytomography/algorithms/index", "autoapi/pytomography/algorithms/osem/index", "autoapi/pytomography/classes/index", "autoapi/pytomography/corrections/ct_correction/index", "autoapi/pytomography/corrections/index", "autoapi/pytomography/corrections/psf_correction/index", "autoapi/pytomography/index", "autoapi/pytomography/io/dicom/index", "autoapi/pytomography/io/index", "autoapi/pytomography/io/simind/index", "autoapi/pytomography/metadata/index", "autoapi/pytomography/metadata/metadata/index", "autoapi/pytomography/priors/index", "autoapi/pytomography/priors/smoothness/index", "autoapi/pytomography/projections/back_projection/index", "autoapi/pytomography/projections/forward_projection/index", "autoapi/pytomography/projections/index", "autoapi/pytomography/utils/helper_functions/index", "autoapi/pytomography/utils/index", "index", "notebooks/tutorial", "usage"], "filenames": ["autoapi/index.rst", "autoapi/pytomography/algorithms/index.rst", "autoapi/pytomography/algorithms/osem/index.rst", "autoapi/pytomography/classes/index.rst", "autoapi/pytomography/corrections/ct_correction/index.rst", "autoapi/pytomography/corrections/index.rst", "autoapi/pytomography/corrections/psf_correction/index.rst", "autoapi/pytomography/index.rst", "autoapi/pytomography/io/dicom/index.rst", "autoapi/pytomography/io/index.rst", "autoapi/pytomography/io/simind/index.rst", "autoapi/pytomography/metadata/index.rst", "autoapi/pytomography/metadata/metadata/index.rst", "autoapi/pytomography/priors/index.rst", "autoapi/pytomography/priors/smoothness/index.rst", "autoapi/pytomography/projections/back_projection/index.rst", "autoapi/pytomography/projections/forward_projection/index.rst", "autoapi/pytomography/projections/index.rst", "autoapi/pytomography/utils/helper_functions/index.rst", "autoapi/pytomography/utils/index.rst", "index.md", "notebooks/tutorial.ipynb", "usage.md"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.algorithms.osem</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.classes</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.corrections.ct_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.corrections</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.corrections.psf_correction</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.dicom</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.io.simind</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.metadata.metadata</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.priors.smoothness</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.back_projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections.forward_projection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.projections</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils.helper_functions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pytomography.utils</span></code>", "PyTomography", "Tutorial", "Usage"], "terms": {"welcom": 20, "packag": 20, "i": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22], "extrem": 20, "fast": 20, "spect": 20, "reconstruct": [1, 2, 7, 15, 16, 17, 20, 22], "For": [1, 2, 7, 20, 22], "further": 20, "info": 20, "check": 20, "out": 20, "usag": 20, "read": 20, "instal": 20, "instruct": 20, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 14, 18, 19, 20, 22], "librari": 20, "still": 20, "under": 20, "heavi": 20, "develop": 20, "": [4, 5, 6, 14, 20], "x": [3, 4, 5, 6, 18, 19, 20, 21], "2": [1, 2, 7, 18, 19, 20, 21, 22], "index": [1, 2, 3, 4, 5, 6, 7, 20, 22], "modul": [1, 5, 7, 17, 20], "search": 20, "page": [0, 20], "import": [3, 4, 5, 6, 21], "numpi": 21, "np": [3, 10, 18, 19, 21], "Then": 21, "all": [1, 2, 3, 4, 5, 6, 15, 16, 17, 21], "you": [3, 4, 5, 6, 21], "need": [1, 2, 6, 21], "do": 21, "creat": [0, 6, 21], "an": [1, 2, 3, 4, 5, 6, 14, 15, 16, 17, 18, 19, 21], "arrai": [1, 2, 3, 5, 6, 7, 14, 18, 19, 21, 22], "3": [1, 2, 7, 18, 19, 21, 22], "4": [1, 2, 7, 21, 22], "have": [3, 4, 5, 6, 21], "To": [1, 2, 22], "pytomographi": [0, 21, 22], "pip": 22, "veri": 21, "easi": 21, "us": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22], "tutori": 20, "nbsphinx": [], "math": [], "int": [1, 2, 4, 5, 6, 7, 18, 19, 21, 22], "sin": 21, "dx": [3, 4, 5, 6, 18, 19, 21], "other": [3, 4, 5, 6, 20], "stuff": [], "autofunct": [], "osem": [0, 1, 7, 15, 17, 22], "get_osem_net": [1, 2, 3], "osemnet": [1, 2, 3, 7, 20, 22], "object_initi": [1, 2, 3, 7, 22], "forward_projection_net": [1, 2, 3, 7, 22], "back_projection_net": [1, 2, 3, 7, 22], "prior": [0, 1, 2, 3, 7, 15, 17, 22], "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17, 22], "base": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17], "class": [0, 22], "neural": [3, 4, 5, 6], "network": [1, 2, 3, 4, 5, 6, 7, 22], "your": [3, 4, 5, 6], "model": [1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 22], "should": [3, 4, 5, 6, 18, 19], "also": [1, 2, 3, 4, 5, 6], "subclass": [3, 4, 5, 6], "can": [3, 4, 5, 6], "contain": [0, 1, 2, 3, 4, 5, 6, 7, 22], "allow": [3, 4, 5, 6], "nest": [3, 4, 5, 6], "them": [3, 4, 5, 6], "tree": [3, 4, 5, 6], "structur": [3, 4, 5, 6], "assign": [3, 4, 5, 6], "submodul": [3, 4, 6, 20], "regular": [3, 4, 5, 6], "attribut": [3, 4, 5, 6], "torch": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 22], "nn": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17], "function": [5, 11, 12, 14], "f": [3, 4, 5, 6, 14], "def": [3, 4, 5, 6], "__init__": [3, 4, 5, 6], "self": [3, 4, 5, 6, 14, 16, 17], "super": [3, 4, 5, 6], "conv1": [3, 4, 5, 6], "conv2d": [3, 4, 5, 6], "1": [0, 1, 2, 3, 4, 5, 6, 7, 14, 15, 17, 18, 19, 22], "20": [3, 4, 5, 6], "5": [1, 2, 3, 4, 5, 6, 7, 22], "conv2": [3, 4, 5, 6], "forward": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 22], "relu": [3, 4, 5, 6], "return": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 22], "wai": [3, 4, 5, 6], "regist": [3, 4, 5, 6], "paramet": [1, 2, 4, 5, 6, 7, 14, 22], "convert": [3, 4, 5, 6], "too": [3, 4, 5, 6], "when": [1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 22], "call": [1, 2, 3, 4, 5, 6, 7, 22], "etc": [3, 4, 5, 6], "As": [3, 4, 5, 6, 11, 12], "per": [3, 4, 5, 6], "exampl": [1, 2, 3, 4, 5, 6, 7, 15, 17, 22], "abov": [3, 4, 5, 6, 14, 15, 16, 17], "parent": [3, 4, 5, 6], "must": [3, 4, 5, 6], "made": [3, 4, 5, 6], "befor": [3, 4, 5, 6], "child": [3, 4, 5, 6], "variabl": [3, 4, 5, 6], "train": [3, 4, 5, 6], "bool": [3, 4, 5, 6, 18, 19], "boolean": [3, 4, 5, 6], "repres": [1, 2, 3, 4, 5, 6, 7, 14, 22], "whether": [3, 4, 5, 6], "evalu": [3, 4, 5, 6], "mode": [3, 4, 5, 6], "member": [], "get_subset_split": [1, 2, 3, 7, 22], "set_imag": [1, 2, 3, 7, 22], "set_prior": [1, 2, 3, 7, 22], "n_iter": [1, 2, 3, 7, 22], "n_subset": [1, 2, 3, 7, 22], "comparison": [1, 2, 3, 7, 22], "delta": [1, 2, 3, 6, 7, 14, 15, 17, 22], "1e": [1, 2, 3, 6, 7, 15, 17, 22], "11": [1, 2, 3, 7, 15, 17, 22], "perform": [1, 2, 7, 22], "arg": [4, 5, 6, 14, 15, 16, 17, 18, 19], "number": [1, 2, 3, 7, 14, 18, 19, 22], "iter": [1, 2, 7, 22], "subset": [1, 2, 7, 15, 16, 17, 22], "fixthislat": [1, 2, 7, 22], "option": [1, 2, 4, 5, 6, 7, 15, 16, 17, 18, 19, 22], "default": [1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 22], "float": [1, 2, 4, 5, 6, 7, 14, 15, 17, 18, 19, 22], "prevent": [1, 2, 6, 7, 15, 17, 22], "divis": [1, 2, 3, 6, 7, 15, 17, 22], "zero": [1, 2, 7, 15, 17, 22], "calcul": [1, 2, 7, 22], "ratio": [1, 2, 7, 22], "tensor": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 22], "shape": [1, 2, 3, 5, 6, 11, 12, 14, 18, 19], "batch_siz": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 22], "lx": [1, 2, 3, 4, 5, 6, 7, 14, 16, 17, 18, 19, 22], "ly": [1, 2, 3, 4, 5, 6, 7, 14, 16, 17, 18, 19, 22], "lz": [1, 2, 3, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 22], "correspond": [1, 2, 4, 5, 6, 7, 14, 16, 17, 22], "object": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 22], "n_angl": [1, 2, 3, 7, 22], "list": [1, 2, 7, 15, 16, 17, 22], "each": [1, 2, 5, 6, 7, 18, 19, 22], "indic": [1, 2, 7, 22], "project": [0, 1, 2, 3, 4, 5, 6, 7, 22], "ar": [1, 2, 5, 6, 7, 15, 16, 17, 22], "order": [1, 2, 7, 15, 16, 17, 22], "total": [1, 2, 7, 22], "imag": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 22], "set": [1, 2, 7, 14, 22], "data": [1, 2, 5, 6, 7, 22], "which": [1, 2, 7, 14, 15, 16, 17, 22], "ltheta": [1, 2, 7, 15, 16, 17, 22], "lr": [1, 2, 7, 15, 17, 22], "bayesian": [1, 2, 7, 22], "The": [1, 2, 3, 4, 5, 6, 7, 16, 17, 18, 19, 22], "particular": [1, 2, 7, 18, 19, 22], "type": [1, 2, 7, 22], "initi": [1, 2, 7, 18, 19, 22], "algorithm": [0, 7, 22], "guess": [1, 2, 7, 22], "back": [1, 2, 3, 4, 5, 6, 7, 15, 16, 17, 18, 19, 22], "correct": [0, 1, 2, 3, 7, 11, 12, 15, 16, 17, 18, 19, 22], "note": [1, 2, 7, 18, 19, 22], "one": [1, 2, 7, 18, 19, 22], "step": [1, 2, 7, 22], "late": [1, 2, 7, 22], "osl": [1, 2, 7, 22], "comput": [1, 2, 6, 7, 14, 18, 19, 22], "dure": [1, 2, 3, 4, 5, 6, 7, 15, 17, 22], "A": [4, 5, 6], "space": [1, 2, 4, 5, 6, 7, 11, 12, 14, 18, 19, 22], "forwardprojectionnet": [1, 2, 3, 7, 16, 17, 22], "backprojectionnet": [1, 2, 3, 7, 15, 17, 22], "f_i": [1, 2, 7, 16, 17, 22], "ext": [], "new": [], "rac": [14, 15, 17], "old": [1, 2, 7, 22], "sum_j": [1, 2, 7, 15, 17, 22], "c_": [1, 2, 7, 15, 16, 17, 22], "ij": [1, 2, 7, 15, 16, 17, 22], "eta": [14, 18, 19], "partial": [1, 2, 7, 14, 22], "v": [1, 2, 7, 14, 22], "f_r": [1, 2, 7, 14, 22], "_": [1, 2, 7, 22], "param": [], "lxm": [], "lym": [], "text": [1, 2, 7, 22], "frac": [1, 2, 7, 22], "beta": [1, 2, 3, 7, 14, 22], "g_j": [1, 2, 7, 15, 16, 17, 22], "sum_i": [1, 2, 7, 22], "f_j": [1, 2, 7, 15, 17, 22], "intern": [], "state": [], "share": [], "both": [], "scriptmodul": [], "run": [1, 2, 7, 22], "sum_": [1, 2, 7, 14, 15, 16, 17, 22], "a_i": [1, 2, 7, 22], "where": [1, 2, 3, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 22], "being": [1, 2, 4, 5, 6, 7, 22], "j": [1, 2, 7, 15, 16, 17, 22], "b_i": [], "first": [4, 5, 6, 18, 19], "ran": [], "method": [1, 2, 7, 18, 19, 22], "n": [1, 2, 3, 7, 22], "0": [1, 2, 6, 7, 8, 22], "e": [1, 2, 7, 15, 16, 17, 18, 19, 22], "b_j": [1, 2, 7, 22], "onc": [1, 2, 7, 22], "specifi": [1, 2, 7, 11, 12, 16, 17, 18, 19, 22], "recon": [1, 2, 7, 22], "time": [1, 2, 7, 22], "consol": [], "get_subsets_split": [1, 2, 7, 22], "10": [], "6": [1, 2, 7, 22], "would": [1, 2, 7, 22], "If": [1, 2, 3, 7, 15, 17, 18, 19, 22], "term": [1, 2, 7, 22], "py": [], "func": [], "p": 14, "pyfunc": [], "auto": 0, "gener": 0, "document": 0, "ct_correct": [0, 5, 7], "psf_correct": [0, 5, 7], "io": [0, 7], "dicom": [0, 1, 2, 7, 9], "simind": [0, 1, 2, 7, 9], "metadata": [0, 1, 2, 7, 14], "smooth": [0, 7, 13], "back_project": [0, 7, 17], "forward_project": [0, 7, 17], "util": [0, 7], "helper_funct": [0, 7, 19], "sphinx": 0, "autoapi": 0, "projections_head": [1, 2, 3], "ones": [1, 2, 3], "ct_header": [1, 2, 3], "psf_meta": [1, 2, 5, 6], "file_typ": [1, 2], "devic": [1, 2, 3, 4, 5, 6, 14, 15, 16, 17], "cpu": [1, 2, 3, 4, 5, 6, 14, 15, 16, 17], "obtain": [1, 2, 14, 15, 17], "given": [1, 2, 3, 15, 16, 17, 18, 19], "wish": [1, 2], "str": [1, 2, 6], "path": [1, 2], "header": [1, 2], "some": [1, 2], "modal": [1, 2], "from": [1, 2, 5, 6, 11, 12, 14, 15, 17, 18, 19], "file": [1, 2, 8, 9], "dimens": [1, 2, 5, 6, 14], "want": [1, 2], "In": [1, 2, 18, 19], "case": [1, 2, 18, 19], "otherwis": [1, 2], "take": [1, 2], "specif": [1, 2], "point": [1, 2, 5, 6, 11, 12, 18, 19], "ct": [1, 2, 3, 4, 5, 18, 19], "psfmeta": [1, 2, 11, 12], "psf": [1, 2, 5, 6, 11, 12, 15, 16, 17, 18, 19], "collim": [1, 2, 5, 6, 11, 12], "slope": [1, 2, 5, 6, 11, 12], "intercept": [1, 2, 5, 6, 11, 12], "includ": [1, 2, 15, 17], "output": [4, 5, 6, 14], "pytorch": [1, 2, 3, 6], "graphic": [], "card": [], "readi": [], "rev_cumsum": [3, 18, 19], "rotate_detector_z": [3, 18, 19], "angl": [3, 4, 5, 6, 11, 12, 15, 16, 17, 18, 19], "interpol": [3, 18, 19], "interpolationmod": [3, 18, 19], "bilinear": [3, 18, 19], "neg": [3, 18, 19], "fals": [3, 4, 5, 18, 19], "get_prob_of_detection_matrix": [3, 4], "get_dist": [3, 18, 19], "r": [3, 14, 18, 19], "get_psf_transform": [3, 6], "sigma": [3, 5, 6, 11, 12], "kernel_s": [3, 6, 11, 12], "09": [3, 6], "kernel_dimens": [3, 6, 11, 12], "2d": [3, 6], "find_first_entry_containing_substr": [3, 10], "list_of_attribut": [3, 10], "substr": [3, 10], "dtype": [3, 10], "float32": [3, 10], "simind_projections_to_data": [3, 9, 10], "headerfil": [3, 9, 10], "simind_ct_to_data": [3, 9, 10], "psf_option": 3, "objectmeta": [3, 11, 12, 14], "imagemeta": [3, 11, 12], "object_meta": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17], "radii": [3, 11, 12], "ctcorrectionnet": [3, 4, 5], "image_meta": [3, 4, 5, 6, 15, 16, 17], "store_in_memori": [3, 4, 5], "appli": [3, 4, 5, 6, 18, 19], "attenu": [3, 4, 5], "along": [3, 4, 5, 6, 18, 19], "axi": [3, 4, 5, 6, 18, 19], "modifi": 3, "valu": [3, 14, 15, 16, 17], "subsequ": 3, "yield": 3, "appropri": 3, "object_i": [3, 4, 5, 6], "norm_const": [3, 4, 5, 6], "summat": 3, "ith": 3, "true": [3, 18, 19], "argument": 3, "normal": [3, 4, 5, 6, 15, 17], "factor": [3, 14, 15, 17], "scale": 3, "constant": [3, 15, 17], "requir": 3, "size": [3, 4, 5, 6, 11, 12, 14], "cor": 3, "psfcorrectionnet": [3, 5, 6], "collimator_slop": [3, 5, 6, 11, 12], "collimator_intercept": [3, 5, 6, 11, 12], "21": 3, "get_sigma": [3, 5, 6], "radiu": [3, 5, 6], "object_correction_net": [3, 15, 16, 17], "image_correction_net": [3, 15, 16, 17], "angle_subset": [3, 15, 16, 17], "smoothnesspriorosl": 3, "phi": [3, 14, 18, 19], "get_kernel": [3, 14], "set_object": [3, 14], "quadraticpriorosl": 3, "comparetonumb": 3, "mask": 3, "norm_factor": 3, "compar": 3, "predict": 3, "scan": 4, "unit": 4, "cm": 4, "probabl": [4, 14], "photon": 4, "detect": [4, 5, 6], "matrix": [4, 15, 16, 17], "scanner": [4, 6, 18, 19], "coeffici": 4, "pixel": [4, 5, 6], "transaxi": [4, 5, 6], "plane": [4, 5, 6, 11, 12, 18, 19], "detector": [4, 5, 6, 11, 12, 18, 19], "right": [4, 5, 6], "its": [4, 5, 6], "find": [4, 5, 6], "meta": [5, 6], "inform": [5, 6], "get": [5, 6, 14, 18, 19], "blur": [5, 6, 11, 12, 18, 19], "distanc": [5, 6, 11, 12, 18, 19], "tupl": [5, 6], "see": [5, 6], "defin": [5, 6], "d": [5, 6, 8, 11, 12], "gaussian": [5, 6, 11, 12], "character": [5, 6], "length": [5, 6], "1st": [5, 6], "convolut": [6, 11, 12, 14], "layer": 6, "kernel": [6, 11, 12, 14], "larg": 6, "enough": 6, "cover": 6, "most": 6, "9": 6, "done": 6, "independ": 6, "slice": 6, "1d": 6, "between": [6, 18, 19], "get_radii_and_angl": 8, "dicom_projections_to_data": [8, 9], "a1": 8, "00014376": 8, "b1": 8, "1352": 8, "a2": 8, "8": 8, "787e": 8, "05": 8, "b2": 8, "hu_to_mu": 8, "hu": 8, "get_affine_spect": 8, "get_affine_ct": 8, "max_z": 8, "dicom_ct_to_data": [8, 9], "files_ct": [8, 9], "file_nm": [8, 9], "dr": [11, 12], "61": [11, 12], "implement": [11, 12, 14, 15, 16, 17], "ad": [11, 12], "b": [11, 12], "spread": [11, 12, 18, 19], "smoothnessprior": 14, "gradient": 14, "form": [14, 15, 16, 17], "w_": 14, "phileft": 14, "f_": 14, "ight": 14, "log": 14, "posterior": 14, "g": 14, "same": [14, 18, 19], "conv3d": 14, "channel": 14, "equal": 14, "forumla": 14, "weight": 14, "formula": [14, 15, 16, 17], "set_object_meta": 14, "describ": 14, "system": [14, 15, 16, 17, 18, 19], "set_kernel": 14, "_type_": 14, "_description_": 14, "set_beta_scal": 14, "quadraticprior": 14, "implent": 14, "ident": 14, "logcoshprior": 14, "hyperbol": 14, "tangent": 14, "mathemat": [15, 16, 17], "variou": [15, 16, 17], "phenonemon": [15, 16, 17], "atteun": [15, 16, 17], "onli": [15, 16, 17, 18, 19], "certain": [15, 16, 17], "assum": [15, 16, 17], "modif": [15, 17], "p_i": [15, 17], "map": [15, 17], "divid": [15, 17], "revers": [18, 19], "cumul": [18, 19], "sum": [18, 19], "sinc": [18, 19], "voxel": [18, 19], "contribut": [18, 19], "am": [18, 19], "rotat": [18, 19], "refer": [18, 19, 20], "frame": [18, 19], "locat": [18, 19], "relat": [18, 19], "azimuth": [18, 19], "pi": [18, 19], "align": [18, 19], "cartesian": [18, 19], "coordin": [18, 19], "manual": [18, 19], "invers": [18, 19], "origin": [18, 19], "user": [18, 19], "radial": [18, 19], "center": [18, 19], "parallel": [18, 19], "y": [18, 19], "z": [18, 19], "amount": [18, 19], "depend": [18, 19], "central": [18, 19], "euclidean": [18, 19], "api": 20, "subpackag": 20}, "objects": {"": [[7, 0, 0, "-", "pytomography"]], "pytomography": [[22, 1, 1, "", "OSEMNet"], [1, 0, 0, "-", "algorithms"], [3, 0, 0, "-", "classes"], [5, 0, 0, "-", "corrections"], [9, 0, 0, "-", "io"], [11, 0, 0, "-", "metadata"], [13, 0, 0, "-", "priors"], [17, 0, 0, "-", "projections"], [19, 0, 0, "-", "utils"]], "pytomography.OSEMNet": [[22, 2, 1, "", "forward"], [22, 2, 1, "", "get_subset_splits"], [22, 2, 1, "", "set_image"], [22, 2, 1, "", "set_prior"]], "pytomography.algorithms": [[1, 1, 1, "", "OSEMNet"], [1, 3, 1, "", "get_osem_net"], [2, 0, 0, "-", "osem"]], "pytomography.algorithms.OSEMNet": [[1, 2, 1, "", "forward"], [1, 2, 1, "", "get_subset_splits"], [1, 2, 1, "", "set_image"], [1, 2, 1, "", "set_prior"]], "pytomography.algorithms.osem": [[2, 1, 1, "", "OSEMNet"], [2, 3, 1, "", "get_osem_net"]], "pytomography.algorithms.osem.OSEMNet": [[2, 2, 1, "", "forward"], [2, 2, 1, "", "get_subset_splits"], [2, 2, 1, "", "set_image"], [2, 2, 1, "", "set_prior"]], "pytomography.classes": [[3, 1, 1, "", "BackProjectionNet"], [3, 1, 1, "", "CTCorrectionNet"], [3, 1, 1, "", "CompareToNumber"], [3, 1, 1, "", "ForwardProjectionNet"], [3, 1, 1, "", "ImageMeta"], [3, 1, 1, "", "OSEMNet"], [3, 1, 1, "", "ObjectMeta"], [3, 1, 1, "", "PSFCorrectionNet"], [3, 1, 1, "", "QuadraticPriorOSL"], [3, 1, 1, "", "SmoothnessPriorOSL"], [3, 3, 1, "", "find_first_entry_containing_substring"], [3, 3, 1, "", "get_PSF_transform"], [3, 3, 1, "", "get_distance"], [3, 3, 1, "", "get_osem_net"], [3, 3, 1, "", "get_prob_of_detection_matrix"], [3, 3, 1, "", "rev_cumsum"], [3, 3, 1, "", "rotate_detector_z"], [3, 3, 1, "", "simind_CT_to_data"], [3, 3, 1, "", "simind_projections_to_data"]], "pytomography.classes.BackProjectionNet": [[3, 2, 1, "", "forward"]], "pytomography.classes.CTCorrectionNet": [[3, 2, 1, "", "forward"]], "pytomography.classes.CompareToNumber": [[3, 2, 1, "", "compare"]], "pytomography.classes.ForwardProjectionNet": [[3, 2, 1, "", "forward"]], "pytomography.classes.OSEMNet": [[3, 2, 1, "", "forward"], [3, 2, 1, "", "get_subset_splits"], [3, 2, 1, "", "set_image"], [3, 2, 1, "", "set_prior"]], "pytomography.classes.PSFCorrectionNet": [[3, 2, 1, "", "forward"], [3, 2, 1, "", "get_sigma"]], "pytomography.classes.SmoothnessPriorOSL": [[3, 2, 1, "", "forward"], [3, 2, 1, "", "get_kernel"], [3, 2, 1, "", "set_object"]], "pytomography.corrections": [[5, 1, 1, "", "CTCorrectionNet"], [5, 1, 1, "", "PSFCorrectionNet"], [4, 0, 0, "-", "ct_correction"], [6, 0, 0, "-", "psf_correction"]], "pytomography.corrections.CTCorrectionNet": [[5, 2, 1, "", "forward"]], "pytomography.corrections.PSFCorrectionNet": [[5, 2, 1, "", "forward"], [5, 2, 1, "", "get_sigma"]], "pytomography.corrections.ct_correction": [[4, 1, 1, "", "CTCorrectionNet"], [4, 3, 1, "", "get_prob_of_detection_matrix"]], "pytomography.corrections.ct_correction.CTCorrectionNet": [[4, 2, 1, "", "forward"]], "pytomography.corrections.psf_correction": [[6, 1, 1, "", "PSFCorrectionNet"], [6, 3, 1, "", "get_PSF_transform"]], "pytomography.corrections.psf_correction.PSFCorrectionNet": [[6, 2, 1, "", "forward"], [6, 2, 1, "", "get_sigma"]], "pytomography.io": [[8, 0, 0, "-", "dicom"], [9, 3, 1, "", "dicom_CT_to_data"], [9, 3, 1, "", "dicom_projections_to_data"], [10, 0, 0, "-", "simind"], [9, 3, 1, "", "simind_CT_to_data"], [9, 3, 1, "", "simind_projections_to_data"]], "pytomography.io.dicom": [[8, 3, 1, "", "HU_to_mu"], [8, 4, 1, "", "a1"], [8, 4, 1, "", "a2"], [8, 4, 1, "", "b1"], [8, 4, 1, "", "b2"], [8, 3, 1, "", "dicom_CT_to_data"], [8, 3, 1, "", "dicom_projections_to_data"], [8, 3, 1, "", "get_affine_CT"], [8, 3, 1, "", "get_affine_spect"], [8, 3, 1, "", "get_radii_and_angles"]], "pytomography.io.simind": [[10, 3, 1, "", "find_first_entry_containing_substring"], [10, 3, 1, "", "simind_CT_to_data"], [10, 3, 1, "", "simind_projections_to_data"]], "pytomography.metadata": [[11, 1, 1, "", "ImageMeta"], [11, 1, 1, "", "ObjectMeta"], [11, 1, 1, "", "PSFMeta"], [12, 0, 0, "-", "metadata"]], "pytomography.metadata.metadata": [[12, 1, 1, "", "ImageMeta"], [12, 1, 1, "", "ObjectMeta"], [12, 1, 1, "", "PSFMeta"]], "pytomography.priors": [[14, 0, 0, "-", "smoothness"]], "pytomography.priors.smoothness": [[14, 1, 1, "", "LogCoshPrior"], [14, 1, 1, "", "QuadraticPrior"], [14, 1, 1, "", "SmoothnessPrior"]], "pytomography.priors.smoothness.SmoothnessPrior": [[14, 2, 1, "", "forward"], [14, 2, 1, "", "get_kernel"], [14, 2, 1, "", "set_beta_scale"], [14, 2, 1, "", "set_kernel"], [14, 2, 1, "", "set_object"], [14, 2, 1, "", "set_object_meta"]], "pytomography.projections": [[17, 1, 1, "", "BackProjectionNet"], [17, 1, 1, "", "ForwardProjectionNet"], [15, 0, 0, "-", "back_projection"], [16, 0, 0, "-", "forward_projection"]], "pytomography.projections.BackProjectionNet": [[17, 2, 1, "", "forward"]], "pytomography.projections.ForwardProjectionNet": [[17, 2, 1, "", "forward"]], "pytomography.projections.back_projection": [[15, 1, 1, "", "BackProjectionNet"]], "pytomography.projections.back_projection.BackProjectionNet": [[15, 2, 1, "", "forward"]], "pytomography.projections.forward_projection": [[16, 1, 1, "", "ForwardProjectionNet"]], "pytomography.projections.forward_projection.ForwardProjectionNet": [[16, 2, 1, "", "forward"]], "pytomography.utils": [[19, 3, 1, "", "get_distance"], [18, 0, 0, "-", "helper_functions"], [19, 3, 1, "", "rev_cumsum"], [19, 3, 1, "", "rotate_detector_z"]], "pytomography.utils.helper_functions": [[18, 3, 1, "", "get_distance"], [18, 3, 1, "", "rev_cumsum"], [18, 3, 1, "", "rotate_detector_z"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "data", "Python data"]}, "titleterms": {"pytomographi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "indic": 20, "tabl": 20, "i": [], "veri": [], "easi": [], "us": [], "usag": 22, "instal": 22, "tutori": 21, "other": 22, "api": 0, "refer": 0, "algorithm": [1, 2], "submodul": [1, 5, 7, 9, 11, 13, 17, 19], "packag": [1, 5, 7, 9, 11, 17, 19], "class": [1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 15, 16, 17], "function": [1, 2, 3, 4, 6, 8, 9, 10, 18, 19], "osem": 2, "modul": [2, 3, 4, 6, 8, 10, 12, 14, 15, 16, 18], "paramet": 3, "correct": [4, 5, 6], "ct_correct": 4, "psf_correct": 6, "subpackag": 7, "io": [8, 9, 10], "dicom": 8, "attribut": 8, "simind": 10, "metadata": [11, 12], "prior": [13, 14], "smooth": 14, "project": [15, 16, 17], "back_project": 15, "forward_project": 16, "util": [18, 19], "helper_funct": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Tutorial": [[21, "Tutorial"]], "PyTomography": [[20, "pytomography"]], "Contents:": [[20, null]], "Indices and tables": [[20, "indices-and-tables"]], "API Reference": [[0, "api-reference"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "Submodules": [[1, "submodules"], [5, "submodules"], [7, "submodules"], [9, "submodules"], [11, "submodules"], [13, "submodules"], [17, "submodules"], [19, "submodules"]], "Package Contents": [[1, "package-contents"], [5, "package-contents"], [7, "package-contents"], [9, "package-contents"], [11, "package-contents"], [17, "package-contents"], [19, "package-contents"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [7, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [6, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [18, "functions"], [19, "functions"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [8, "module-contents"], [10, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [18, "module-contents"]], "pytomography.classes": [[3, "module-pytomography.classes"]], "Parameters": [[3, "parameters"]], "pytomography.corrections.ct_correction": [[4, "module-pytomography.corrections.ct_correction"]], "pytomography.corrections": [[5, "module-pytomography.corrections"]], "pytomography.corrections.psf_correction": [[6, "module-pytomography.corrections.psf_correction"]], "pytomography": [[7, "module-pytomography"]], "Subpackages": [[7, "subpackages"]], "pytomography.io.dicom": [[8, "module-pytomography.io.dicom"]], "Attributes": [[8, "attributes"]], "pytomography.io": [[9, "module-pytomography.io"]], "pytomography.io.simind": [[10, "module-pytomography.io.simind"]], "pytomography.metadata": [[11, "module-pytomography.metadata"]], "pytomography.metadata.metadata": [[12, "module-pytomography.metadata.metadata"]], "pytomography.priors": [[13, "module-pytomography.priors"]], "pytomography.priors.smoothness": [[14, "module-pytomography.priors.smoothness"]], "pytomography.projections.back_projection": [[15, "module-pytomography.projections.back_projection"]], "pytomography.projections.forward_projection": [[16, "module-pytomography.projections.forward_projection"]], "pytomography.projections": [[17, "module-pytomography.projections"]], "pytomography.utils.helper_functions": [[18, "module-pytomography.utils.helper_functions"]], "pytomography.utils": [[19, "module-pytomography.utils"]], "Usage": [[22, "usage"]], "Installation": [[22, "installation"]], "Other": [[22, "other"]]}, "indexentries": {"osemnet (class in pytomography.algorithms)": [[1, "pytomography.algorithms.OSEMNet"]], "forward() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.forward"]], "get_osem_net() (in module pytomography.algorithms)": [[1, "pytomography.algorithms.get_osem_net"]], "get_subset_splits() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.get_subset_splits"]], "module": [[1, "module-pytomography.algorithms"], [2, "module-pytomography.algorithms.osem"], [3, "module-pytomography.classes"], [4, "module-pytomography.corrections.ct_correction"], [5, "module-pytomography.corrections"], [6, "module-pytomography.corrections.psf_correction"], [7, "module-pytomography"], [8, "module-pytomography.io.dicom"], [9, "module-pytomography.io"], [10, "module-pytomography.io.simind"], [11, "module-pytomography.metadata"], [12, "module-pytomography.metadata.metadata"], [13, "module-pytomography.priors"], [14, "module-pytomography.priors.smoothness"], [15, "module-pytomography.projections.back_projection"], [16, "module-pytomography.projections.forward_projection"], [17, "module-pytomography.projections"], [18, "module-pytomography.utils.helper_functions"], [19, "module-pytomography.utils"]], "pytomography.algorithms": [[1, "module-pytomography.algorithms"]], "set_image() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.set_image"]], "set_prior() (pytomography.algorithms.osemnet method)": [[1, "pytomography.algorithms.OSEMNet.set_prior"]], "osemnet (class in pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.OSEMNet"]], "forward() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.forward"]], "get_osem_net() (in module pytomography.algorithms.osem)": [[2, "pytomography.algorithms.osem.get_osem_net"]], "get_subset_splits() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.get_subset_splits"]], "pytomography.algorithms.osem": [[2, "module-pytomography.algorithms.osem"]], "set_image() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.set_image"]], "set_prior() (pytomography.algorithms.osem.osemnet method)": [[2, "pytomography.algorithms.osem.OSEMNet.set_prior"]], "backprojectionnet (class in pytomography.classes)": [[3, "pytomography.classes.BackProjectionNet"]], "ctcorrectionnet (class in pytomography.classes)": [[3, "pytomography.classes.CTCorrectionNet"]], "comparetonumber (class in pytomography.classes)": [[3, "pytomography.classes.CompareToNumber"]], "forwardprojectionnet (class in pytomography.classes)": [[3, "pytomography.classes.ForwardProjectionNet"]], "imagemeta (class in pytomography.classes)": [[3, "pytomography.classes.ImageMeta"]], "osemnet (class in pytomography.classes)": [[3, "pytomography.classes.OSEMNet"]], "objectmeta (class in pytomography.classes)": [[3, "pytomography.classes.ObjectMeta"]], "psfcorrectionnet (class in pytomography.classes)": [[3, "pytomography.classes.PSFCorrectionNet"]], "quadraticpriorosl (class in pytomography.classes)": [[3, "pytomography.classes.QuadraticPriorOSL"]], "smoothnesspriorosl (class in pytomography.classes)": [[3, "pytomography.classes.SmoothnessPriorOSL"]], "compare() (pytomography.classes.comparetonumber method)": [[3, "pytomography.classes.CompareToNumber.compare"]], "find_first_entry_containing_substring() (in module pytomography.classes)": [[3, "pytomography.classes.find_first_entry_containing_substring"]], "forward() (pytomography.classes.backprojectionnet method)": [[3, "pytomography.classes.BackProjectionNet.forward"]], "forward() (pytomography.classes.ctcorrectionnet method)": [[3, "pytomography.classes.CTCorrectionNet.forward"]], "forward() (pytomography.classes.forwardprojectionnet method)": [[3, "pytomography.classes.ForwardProjectionNet.forward"]], "forward() (pytomography.classes.osemnet method)": [[3, "pytomography.classes.OSEMNet.forward"]], "forward() (pytomography.classes.psfcorrectionnet method)": [[3, "pytomography.classes.PSFCorrectionNet.forward"]], "forward() (pytomography.classes.smoothnesspriorosl method)": [[3, "pytomography.classes.SmoothnessPriorOSL.forward"]], "get_psf_transform() (in module pytomography.classes)": [[3, "pytomography.classes.get_PSF_transform"]], "get_distance() (in module pytomography.classes)": [[3, "pytomography.classes.get_distance"]], "get_kernel() (pytomography.classes.smoothnesspriorosl method)": [[3, "pytomography.classes.SmoothnessPriorOSL.get_kernel"]], "get_osem_net() (in module pytomography.classes)": [[3, "pytomography.classes.get_osem_net"]], "get_prob_of_detection_matrix() (in module pytomography.classes)": [[3, "pytomography.classes.get_prob_of_detection_matrix"]], "get_sigma() (pytomography.classes.psfcorrectionnet method)": [[3, "pytomography.classes.PSFCorrectionNet.get_sigma"]], "get_subset_splits() (pytomography.classes.osemnet method)": [[3, "pytomography.classes.OSEMNet.get_subset_splits"]], "pytomography.classes": [[3, "module-pytomography.classes"]], "rev_cumsum() (in module pytomography.classes)": [[3, "pytomography.classes.rev_cumsum"]], "rotate_detector_z() (in module pytomography.classes)": [[3, "pytomography.classes.rotate_detector_z"]], "set_image() (pytomography.classes.osemnet method)": [[3, "pytomography.classes.OSEMNet.set_image"]], "set_object() (pytomography.classes.smoothnesspriorosl method)": [[3, "pytomography.classes.SmoothnessPriorOSL.set_object"]], "set_prior() (pytomography.classes.osemnet method)": [[3, "pytomography.classes.OSEMNet.set_prior"]], "simind_ct_to_data() (in module pytomography.classes)": [[3, "pytomography.classes.simind_CT_to_data"]], "simind_projections_to_data() (in module pytomography.classes)": [[3, "pytomography.classes.simind_projections_to_data"]], "ctcorrectionnet (class in pytomography.corrections.ct_correction)": [[4, "pytomography.corrections.ct_correction.CTCorrectionNet"]], "forward() (pytomography.corrections.ct_correction.ctcorrectionnet method)": [[4, "pytomography.corrections.ct_correction.CTCorrectionNet.forward"]], "get_prob_of_detection_matrix() (in module pytomography.corrections.ct_correction)": [[4, "pytomography.corrections.ct_correction.get_prob_of_detection_matrix"]], "pytomography.corrections.ct_correction": [[4, "module-pytomography.corrections.ct_correction"]], "ctcorrectionnet (class in pytomography.corrections)": [[5, "pytomography.corrections.CTCorrectionNet"]], "psfcorrectionnet (class in pytomography.corrections)": [[5, "pytomography.corrections.PSFCorrectionNet"]], "forward() (pytomography.corrections.ctcorrectionnet method)": [[5, "pytomography.corrections.CTCorrectionNet.forward"]], "forward() (pytomography.corrections.psfcorrectionnet method)": [[5, "pytomography.corrections.PSFCorrectionNet.forward"]], "get_sigma() (pytomography.corrections.psfcorrectionnet method)": [[5, "pytomography.corrections.PSFCorrectionNet.get_sigma"]], "pytomography.corrections": [[5, "module-pytomography.corrections"]], "psfcorrectionnet (class in pytomography.corrections.psf_correction)": [[6, "pytomography.corrections.psf_correction.PSFCorrectionNet"]], "forward() (pytomography.corrections.psf_correction.psfcorrectionnet method)": [[6, "pytomography.corrections.psf_correction.PSFCorrectionNet.forward"]], "get_psf_transform() (in module pytomography.corrections.psf_correction)": [[6, "pytomography.corrections.psf_correction.get_PSF_transform"]], "get_sigma() (pytomography.corrections.psf_correction.psfcorrectionnet method)": [[6, "pytomography.corrections.psf_correction.PSFCorrectionNet.get_sigma"]], "pytomography.corrections.psf_correction": [[6, "module-pytomography.corrections.psf_correction"]], "osemnet (class in pytomography)": [[7, "pytomography.OSEMNet"], [22, "pytomography.OSEMNet"]], "forward() (pytomography.osemnet method)": [[7, "pytomography.OSEMNet.forward"], [22, "pytomography.OSEMNet.forward"]], "get_subset_splits() (pytomography.osemnet method)": [[7, "pytomography.OSEMNet.get_subset_splits"], [22, "pytomography.OSEMNet.get_subset_splits"]], "pytomography": [[7, "module-pytomography"]], "set_image() (pytomography.osemnet method)": [[7, "pytomography.OSEMNet.set_image"], [22, "pytomography.OSEMNet.set_image"]], "set_prior() (pytomography.osemnet method)": [[7, "pytomography.OSEMNet.set_prior"], [22, "pytomography.OSEMNet.set_prior"]], "hu_to_mu() (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.HU_to_mu"]], "a1 (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.a1"]], "a2 (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.a2"]], "b1 (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.b1"]], "b2 (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.b2"]], "dicom_ct_to_data() (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.dicom_CT_to_data"]], "dicom_projections_to_data() (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.dicom_projections_to_data"]], "get_affine_ct() (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.get_affine_CT"]], "get_affine_spect() (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.get_affine_spect"]], "get_radii_and_angles() (in module pytomography.io.dicom)": [[8, "pytomography.io.dicom.get_radii_and_angles"]], "pytomography.io.dicom": [[8, "module-pytomography.io.dicom"]], "dicom_ct_to_data() (in module pytomography.io)": [[9, "pytomography.io.dicom_CT_to_data"]], "dicom_projections_to_data() (in module pytomography.io)": [[9, "pytomography.io.dicom_projections_to_data"]], "pytomography.io": [[9, "module-pytomography.io"]], "simind_ct_to_data() (in module pytomography.io)": [[9, "pytomography.io.simind_CT_to_data"]], "simind_projections_to_data() (in module pytomography.io)": [[9, "pytomography.io.simind_projections_to_data"]], "find_first_entry_containing_substring() (in module pytomography.io.simind)": [[10, "pytomography.io.simind.find_first_entry_containing_substring"]], "pytomography.io.simind": [[10, "module-pytomography.io.simind"]], "simind_ct_to_data() (in module pytomography.io.simind)": [[10, "pytomography.io.simind.simind_CT_to_data"]], "simind_projections_to_data() (in module pytomography.io.simind)": [[10, "pytomography.io.simind.simind_projections_to_data"]], "imagemeta (class in pytomography.metadata)": [[11, "pytomography.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata)": [[11, "pytomography.metadata.ObjectMeta"]], "psfmeta (class in pytomography.metadata)": [[11, "pytomography.metadata.PSFMeta"]], "pytomography.metadata": [[11, "module-pytomography.metadata"]], "imagemeta (class in pytomography.metadata.metadata)": [[12, "pytomography.metadata.metadata.ImageMeta"]], "objectmeta (class in pytomography.metadata.metadata)": [[12, "pytomography.metadata.metadata.ObjectMeta"]], "psfmeta (class in pytomography.metadata.metadata)": [[12, "pytomography.metadata.metadata.PSFMeta"]], "pytomography.metadata.metadata": [[12, "module-pytomography.metadata.metadata"]], "pytomography.priors": [[13, "module-pytomography.priors"]], "logcoshprior (class in pytomography.priors.smoothness)": [[14, "pytomography.priors.smoothness.LogCoshPrior"]], "quadraticprior (class in pytomography.priors.smoothness)": [[14, "pytomography.priors.smoothness.QuadraticPrior"]], "smoothnessprior (class in pytomography.priors.smoothness)": [[14, "pytomography.priors.smoothness.SmoothnessPrior"]], "forward() (pytomography.priors.smoothness.smoothnessprior method)": [[14, "pytomography.priors.smoothness.SmoothnessPrior.forward"]], "get_kernel() (pytomography.priors.smoothness.smoothnessprior method)": [[14, "pytomography.priors.smoothness.SmoothnessPrior.get_kernel"]], "pytomography.priors.smoothness": [[14, "module-pytomography.priors.smoothness"]], "set_beta_scale() (pytomography.priors.smoothness.smoothnessprior method)": [[14, "pytomography.priors.smoothness.SmoothnessPrior.set_beta_scale"]], "set_kernel() (pytomography.priors.smoothness.smoothnessprior method)": [[14, "pytomography.priors.smoothness.SmoothnessPrior.set_kernel"]], "set_object() (pytomography.priors.smoothness.smoothnessprior method)": [[14, "pytomography.priors.smoothness.SmoothnessPrior.set_object"]], "set_object_meta() (pytomography.priors.smoothness.smoothnessprior method)": [[14, "pytomography.priors.smoothness.SmoothnessPrior.set_object_meta"]], "backprojectionnet (class in pytomography.projections.back_projection)": [[15, "pytomography.projections.back_projection.BackProjectionNet"]], "forward() (pytomography.projections.back_projection.backprojectionnet method)": [[15, "pytomography.projections.back_projection.BackProjectionNet.forward"]], "pytomography.projections.back_projection": [[15, "module-pytomography.projections.back_projection"]], "forwardprojectionnet (class in pytomography.projections.forward_projection)": [[16, "pytomography.projections.forward_projection.ForwardProjectionNet"]], "forward() (pytomography.projections.forward_projection.forwardprojectionnet method)": [[16, "pytomography.projections.forward_projection.ForwardProjectionNet.forward"]], "pytomography.projections.forward_projection": [[16, "module-pytomography.projections.forward_projection"]], "backprojectionnet (class in pytomography.projections)": [[17, "pytomography.projections.BackProjectionNet"]], "forwardprojectionnet (class in pytomography.projections)": [[17, "pytomography.projections.ForwardProjectionNet"]], "forward() (pytomography.projections.backprojectionnet method)": [[17, "pytomography.projections.BackProjectionNet.forward"]], "forward() (pytomography.projections.forwardprojectionnet method)": [[17, "pytomography.projections.ForwardProjectionNet.forward"]], "pytomography.projections": [[17, "module-pytomography.projections"]], "get_distance() (in module pytomography.utils.helper_functions)": [[18, "pytomography.utils.helper_functions.get_distance"]], "pytomography.utils.helper_functions": [[18, "module-pytomography.utils.helper_functions"]], "rev_cumsum() (in module pytomography.utils.helper_functions)": [[18, "pytomography.utils.helper_functions.rev_cumsum"]], "rotate_detector_z() (in module pytomography.utils.helper_functions)": [[18, "pytomography.utils.helper_functions.rotate_detector_z"]], "get_distance() (in module pytomography.utils)": [[19, "pytomography.utils.get_distance"]], "pytomography.utils": [[19, "module-pytomography.utils"]], "rev_cumsum() (in module pytomography.utils)": [[19, "pytomography.utils.rev_cumsum"]], "rotate_detector_z() (in module pytomography.utils)": [[19, "pytomography.utils.rotate_detector_z"]]}})